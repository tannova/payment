// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: natasha/api/natasha.proto

package natasha

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PaymentType int32

const (
	PaymentType_DEPOSIT_UNSPECIFIED PaymentType = 0
	PaymentType_USER_TOP_UP         PaymentType = 1
	PaymentType_USER_WITHDRAW       PaymentType = 2
	// Receipt Voucher
	PaymentType_MERCHANT_DEPOSIT_ADDITIONAL   PaymentType = 3
	PaymentType_MERCHANT_DEPOSIT_COMPENSATION PaymentType = 4
	// Payment Voucher
	// We'll change the balance of the MEX immediately when create two kind of WITHDRAW
	// and then refund if it's cancelled
	PaymentType_MERCHANT_WITHDRAW_PROFIT PaymentType = 5
	PaymentType_MERCHANT_WITHDRAW_FUNDS  PaymentType = 6
)

// Enum value maps for PaymentType.
var (
	PaymentType_name = map[int32]string{
		0: "DEPOSIT_UNSPECIFIED",
		1: "USER_TOP_UP",
		2: "USER_WITHDRAW",
		3: "MERCHANT_DEPOSIT_ADDITIONAL",
		4: "MERCHANT_DEPOSIT_COMPENSATION",
		5: "MERCHANT_WITHDRAW_PROFIT",
		6: "MERCHANT_WITHDRAW_FUNDS",
	}
	PaymentType_value = map[string]int32{
		"DEPOSIT_UNSPECIFIED":           0,
		"USER_TOP_UP":                   1,
		"USER_WITHDRAW":                 2,
		"MERCHANT_DEPOSIT_ADDITIONAL":   3,
		"MERCHANT_DEPOSIT_COMPENSATION": 4,
		"MERCHANT_WITHDRAW_PROFIT":      5,
		"MERCHANT_WITHDRAW_FUNDS":       6,
	}
)

func (x PaymentType) Enum() *PaymentType {
	p := new(PaymentType)
	*p = x
	return p
}

func (x PaymentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentType) Descriptor() protoreflect.EnumDescriptor {
	return file_natasha_api_natasha_proto_enumTypes[0].Descriptor()
}

func (PaymentType) Type() protoreflect.EnumType {
	return &file_natasha_api_natasha_proto_enumTypes[0]
}

func (x PaymentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentType.Descriptor instead.
func (PaymentType) EnumDescriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{0}
}

type VoucherStatus int32

const (
	VoucherStatus_STATUS_UNSPECIFIED VoucherStatus = 0
	VoucherStatus_PROCESSING         VoucherStatus = 1
	VoucherStatus_COMPLETED          VoucherStatus = 2
	VoucherStatus_CANCELED           VoucherStatus = 3
)

// Enum value maps for VoucherStatus.
var (
	VoucherStatus_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "PROCESSING",
		2: "COMPLETED",
		3: "CANCELED",
	}
	VoucherStatus_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"PROCESSING":         1,
		"COMPLETED":          2,
		"CANCELED":           3,
	}
)

func (x VoucherStatus) Enum() *VoucherStatus {
	p := new(VoucherStatus)
	*p = x
	return p
}

func (x VoucherStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoucherStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_natasha_api_natasha_proto_enumTypes[1].Descriptor()
}

func (VoucherStatus) Type() protoreflect.EnumType {
	return &file_natasha_api_natasha_proto_enumTypes[1]
}

func (x VoucherStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoucherStatus.Descriptor instead.
func (VoucherStatus) EnumDescriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{1}
}

type BankType int32

const (
	BankType_BANK_UNSPECIFIED BankType = 0
	BankType_V                BankType = 1 // Vietcombank
	BankType_S                BankType = 2 // Sacomank
	BankType_A                BankType = 3 // ACB
	BankType_N                BankType = 4 // Vietinbank
	BankType_B                BankType = 5 // BIDV
)

// Enum value maps for BankType.
var (
	BankType_name = map[int32]string{
		0: "BANK_UNSPECIFIED",
		1: "V",
		2: "S",
		3: "A",
		4: "N",
		5: "B",
	}
	BankType_value = map[string]int32{
		"BANK_UNSPECIFIED": 0,
		"V":                1,
		"S":                2,
		"A":                3,
		"N":                4,
		"B":                5,
	}
)

func (x BankType) Enum() *BankType {
	p := new(BankType)
	*p = x
	return p
}

func (x BankType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BankType) Descriptor() protoreflect.EnumDescriptor {
	return file_natasha_api_natasha_proto_enumTypes[2].Descriptor()
}

func (BankType) Type() protoreflect.EnumType {
	return &file_natasha_api_natasha_proto_enumTypes[2]
}

func (x BankType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BankType.Descriptor instead.
func (BankType) EnumDescriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{2}
}

type CreateMerchantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// logo path is the value that frontend get after upload logo via a upload file service
	// in this case empty mean no setting value for this field
	LogoPath        string `protobuf:"bytes,2,opt,name=logo_path,json=logoPath,proto3" json:"logo_path,omitempty"`
	WebhookUrl      string `protobuf:"bytes,3,opt,name=webhook_url,json=webhookUrl,proto3" json:"webhook_url,omitempty"`
	EmailContact    string `protobuf:"bytes,4,opt,name=email_contact,json=emailContact,proto3" json:"email_contact,omitempty"`
	SlackWebhookUrl string `protobuf:"bytes,5,opt,name=slack_webhook_url,json=slackWebhookUrl,proto3" json:"slack_webhook_url,omitempty"`
	SafetyLimit     uint64 `protobuf:"varint,6,opt,name=safety_limit,json=safetyLimit,proto3" json:"safety_limit,omitempty"`
}

func (x *CreateMerchantRequest) Reset() {
	*x = CreateMerchantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMerchantRequest) ProtoMessage() {}

func (x *CreateMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMerchantRequest.ProtoReflect.Descriptor instead.
func (*CreateMerchantRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMerchantRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMerchantRequest) GetLogoPath() string {
	if x != nil {
		return x.LogoPath
	}
	return ""
}

func (x *CreateMerchantRequest) GetWebhookUrl() string {
	if x != nil {
		return x.WebhookUrl
	}
	return ""
}

func (x *CreateMerchantRequest) GetEmailContact() string {
	if x != nil {
		return x.EmailContact
	}
	return ""
}

func (x *CreateMerchantRequest) GetSlackWebhookUrl() string {
	if x != nil {
		return x.SlackWebhookUrl
	}
	return ""
}

func (x *CreateMerchantRequest) GetSafetyLimit() uint64 {
	if x != nil {
		return x.SafetyLimit
	}
	return 0
}

type CreateMerchantReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Merchant *Merchant `protobuf:"bytes,1,opt,name=merchant,proto3" json:"merchant,omitempty"`
}

func (x *CreateMerchantReply) Reset() {
	*x = CreateMerchantReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMerchantReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMerchantReply) ProtoMessage() {}

func (x *CreateMerchantReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMerchantReply.ProtoReflect.Descriptor instead.
func (*CreateMerchantReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{1}
}

func (x *CreateMerchantReply) GetMerchant() *Merchant {
	if x != nil {
		return x.Merchant
	}
	return nil
}

type UpdateMerchantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// logo path is the value that frontend get after upload logo via a upload file service
	// in this case empty mean no setting value for this field
	LogoPath        string `protobuf:"bytes,3,opt,name=logo_path,json=logoPath,proto3" json:"logo_path,omitempty"`
	WebhookUrl      string `protobuf:"bytes,4,opt,name=webhook_url,json=webhookUrl,proto3" json:"webhook_url,omitempty"`
	EmailContact    string `protobuf:"bytes,5,opt,name=email_contact,json=emailContact,proto3" json:"email_contact,omitempty"`
	SlackWebhookUrl string `protobuf:"bytes,6,opt,name=slack_webhook_url,json=slackWebhookUrl,proto3" json:"slack_webhook_url,omitempty"`
	SafetyLimit     uint64 `protobuf:"varint,7,opt,name=safety_limit,json=safetyLimit,proto3" json:"safety_limit,omitempty"`
}

func (x *UpdateMerchantRequest) Reset() {
	*x = UpdateMerchantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMerchantRequest) ProtoMessage() {}

func (x *UpdateMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMerchantRequest.ProtoReflect.Descriptor instead.
func (*UpdateMerchantRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateMerchantRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMerchantRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMerchantRequest) GetLogoPath() string {
	if x != nil {
		return x.LogoPath
	}
	return ""
}

func (x *UpdateMerchantRequest) GetWebhookUrl() string {
	if x != nil {
		return x.WebhookUrl
	}
	return ""
}

func (x *UpdateMerchantRequest) GetEmailContact() string {
	if x != nil {
		return x.EmailContact
	}
	return ""
}

func (x *UpdateMerchantRequest) GetSlackWebhookUrl() string {
	if x != nil {
		return x.SlackWebhookUrl
	}
	return ""
}

func (x *UpdateMerchantRequest) GetSafetyLimit() uint64 {
	if x != nil {
		return x.SafetyLimit
	}
	return 0
}

type UpdateMerchantReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Merchant *Merchant `protobuf:"bytes,1,opt,name=merchant,proto3" json:"merchant,omitempty"`
}

func (x *UpdateMerchantReply) Reset() {
	*x = UpdateMerchantReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMerchantReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMerchantReply) ProtoMessage() {}

func (x *UpdateMerchantReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMerchantReply.ProtoReflect.Descriptor instead.
func (*UpdateMerchantReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateMerchantReply) GetMerchant() *Merchant {
	if x != nil {
		return x.Merchant
	}
	return nil
}

type ListMerchantsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    uint32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size    uint32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Keyword string `protobuf:"bytes,3,opt,name=keyword,proto3" json:"keyword,omitempty"`
}

func (x *ListMerchantsRequest) Reset() {
	*x = ListMerchantsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMerchantsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMerchantsRequest) ProtoMessage() {}

func (x *ListMerchantsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMerchantsRequest.ProtoReflect.Descriptor instead.
func (*ListMerchantsRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{4}
}

func (x *ListMerchantsRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListMerchantsRequest) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ListMerchantsRequest) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type ListMerchantsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records     []*Merchant `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Total       uint64      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	CurrentPage uint32      `protobuf:"varint,3,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	CurrentSize uint32      `protobuf:"varint,4,opt,name=current_size,json=currentSize,proto3" json:"current_size,omitempty"`
}

func (x *ListMerchantsReply) Reset() {
	*x = ListMerchantsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMerchantsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMerchantsReply) ProtoMessage() {}

func (x *ListMerchantsReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMerchantsReply.ProtoReflect.Descriptor instead.
func (*ListMerchantsReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{5}
}

func (x *ListMerchantsReply) GetRecords() []*Merchant {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *ListMerchantsReply) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListMerchantsReply) GetCurrentPage() uint32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *ListMerchantsReply) GetCurrentSize() uint32 {
	if x != nil {
		return x.CurrentSize
	}
	return 0
}

type GetMerchantRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMerchantRequest) Reset() {
	*x = GetMerchantRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantRequest) ProtoMessage() {}

func (x *GetMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantRequest.ProtoReflect.Descriptor instead.
func (*GetMerchantRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{6}
}

func (x *GetMerchantRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetMerchantReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Merchant *Merchant `protobuf:"bytes,1,opt,name=merchant,proto3" json:"merchant,omitempty"`
}

func (x *GetMerchantReply) Reset() {
	*x = GetMerchantReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantReply) ProtoMessage() {}

func (x *GetMerchantReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantReply.ProtoReflect.Descriptor instead.
func (*GetMerchantReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{7}
}

func (x *GetMerchantReply) GetMerchant() *Merchant {
	if x != nil {
		return x.Merchant
	}
	return nil
}

type Merchant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LogoPath        string `protobuf:"bytes,3,opt,name=logo_path,json=logoPath,proto3" json:"logo_path,omitempty"`
	EmailContact    string `protobuf:"bytes,4,opt,name=email_contact,json=emailContact,proto3" json:"email_contact,omitempty"`
	WebhookUrl      string `protobuf:"bytes,5,opt,name=webhook_url,json=webhookUrl,proto3" json:"webhook_url,omitempty"`
	SlackWebhookUrl string `protobuf:"bytes,6,opt,name=slack_webhook_url,json=slackWebhookUrl,proto3" json:"slack_webhook_url,omitempty"`
	SafetyLimit     uint64 `protobuf:"varint,7,opt,name=safety_limit,json=safetyLimit,proto3" json:"safety_limit,omitempty"`
	//
	//reserve slots
	CreatedBy string               `protobuf:"bytes,10,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy string               `protobuf:"bytes,11,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Merchant) Reset() {
	*x = Merchant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Merchant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Merchant) ProtoMessage() {}

func (x *Merchant) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Merchant.ProtoReflect.Descriptor instead.
func (*Merchant) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{8}
}

func (x *Merchant) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Merchant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Merchant) GetLogoPath() string {
	if x != nil {
		return x.LogoPath
	}
	return ""
}

func (x *Merchant) GetEmailContact() string {
	if x != nil {
		return x.EmailContact
	}
	return ""
}

func (x *Merchant) GetWebhookUrl() string {
	if x != nil {
		return x.WebhookUrl
	}
	return ""
}

func (x *Merchant) GetSlackWebhookUrl() string {
	if x != nil {
		return x.SlackWebhookUrl
	}
	return ""
}

func (x *Merchant) GetSafetyLimit() uint64 {
	if x != nil {
		return x.SafetyLimit
	}
	return 0
}

func (x *Merchant) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Merchant) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *Merchant) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Merchant) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type MakePaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64       `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Amount     uint64      `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Type       PaymentType `protobuf:"varint,3,opt,name=type,proto3,enum=natasha.PaymentType" json:"type,omitempty"`
}

func (x *MakePaymentRequest) Reset() {
	*x = MakePaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakePaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakePaymentRequest) ProtoMessage() {}

func (x *MakePaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakePaymentRequest.ProtoReflect.Descriptor instead.
func (*MakePaymentRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{9}
}

func (x *MakePaymentRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *MakePaymentRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MakePaymentRequest) GetType() PaymentType {
	if x != nil {
		return x.Type
	}
	return PaymentType_DEPOSIT_UNSPECIFIED
}

type MakePaymentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance uint64   `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Payment *Payment `protobuf:"bytes,2,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *MakePaymentReply) Reset() {
	*x = MakePaymentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakePaymentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakePaymentReply) ProtoMessage() {}

func (x *MakePaymentReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakePaymentReply.ProtoReflect.Descriptor instead.
func (*MakePaymentReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{10}
}

func (x *MakePaymentReply) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *MakePaymentReply) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type GetMerchantBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64                `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	FromDate   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	ToDate     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=to_date,json=toDate,proto3" json:"to_date,omitempty"`
}

func (x *GetMerchantBalanceRequest) Reset() {
	*x = GetMerchantBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantBalanceRequest) ProtoMessage() {}

func (x *GetMerchantBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetMerchantBalanceRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{11}
}

func (x *GetMerchantBalanceRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *GetMerchantBalanceRequest) GetFromDate() *timestamp.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *GetMerchantBalanceRequest) GetToDate() *timestamp.Timestamp {
	if x != nil {
		return x.ToDate
	}
	return nil
}

type GetMerchantBalanceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// balance = total_money_in - total_money_out
	Balance uint64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	// total_money_in = sum(USER_TOP_UP + MERCHANT_DEPOSIT)
	TotalMoneyIn uint64 `protobuf:"varint,3,opt,name=total_money_in,json=totalMoneyIn,proto3" json:"total_money_in,omitempty"`
	// total_money_out = sum(USER_WITHDRAW + MERCHANT_WITHDRAW)
	TotalMoneyOut uint64 `protobuf:"varint,4,opt,name=total_money_out,json=totalMoneyOut,proto3" json:"total_money_out,omitempty"`
	// total_receipt_voucher = sum(MERCHANT_DEPOSIT)
	ReceiptVoucher *VoucherSummary `protobuf:"bytes,5,opt,name=receipt_voucher,json=receiptVoucher,proto3" json:"receipt_voucher,omitempty"`
	// total_payment_voucher = = sum(MERCHANT_WITHDRAW)
	PaymentVoucher *VoucherSummary `protobuf:"bytes,6,opt,name=payment_voucher,json=paymentVoucher,proto3" json:"payment_voucher,omitempty"`
	// balance_for_mex_withdraw_profit = sum(USER_TOP_UP) + sum(MERCHANT_WITHDRAW_PROFIT) + sum(USER_WITHDRAW)
	BalanceForMexWithdrawProfit int64 `protobuf:"varint,7,opt,name=balance_for_mex_withdraw_profit,json=balanceForMexWithdrawProfit,proto3" json:"balance_for_mex_withdraw_profit,omitempty"`
	// balance_for_mex_withdraw_funds = sum(MERCHANT_DEPOSIT_ADDITIONAL) + sum(MERCHANT_WITHDRAW_PROFIT) + sum(USER_WITHDRAW)
	BalanceForMexWithdrawFunds int64 `protobuf:"varint,8,opt,name=balance_for_mex_withdraw_funds,json=balanceForMexWithdrawFunds,proto3" json:"balance_for_mex_withdraw_funds,omitempty"`
	// profit = total_money_in - total_money_out
	Profit int64 `protobuf:"varint,9,opt,name=profit,proto3" json:"profit,omitempty"`
}

func (x *GetMerchantBalanceReply) Reset() {
	*x = GetMerchantBalanceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMerchantBalanceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMerchantBalanceReply) ProtoMessage() {}

func (x *GetMerchantBalanceReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMerchantBalanceReply.ProtoReflect.Descriptor instead.
func (*GetMerchantBalanceReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{12}
}

func (x *GetMerchantBalanceReply) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GetMerchantBalanceReply) GetTotalMoneyIn() uint64 {
	if x != nil {
		return x.TotalMoneyIn
	}
	return 0
}

func (x *GetMerchantBalanceReply) GetTotalMoneyOut() uint64 {
	if x != nil {
		return x.TotalMoneyOut
	}
	return 0
}

func (x *GetMerchantBalanceReply) GetReceiptVoucher() *VoucherSummary {
	if x != nil {
		return x.ReceiptVoucher
	}
	return nil
}

func (x *GetMerchantBalanceReply) GetPaymentVoucher() *VoucherSummary {
	if x != nil {
		return x.PaymentVoucher
	}
	return nil
}

func (x *GetMerchantBalanceReply) GetBalanceForMexWithdrawProfit() int64 {
	if x != nil {
		return x.BalanceForMexWithdrawProfit
	}
	return 0
}

func (x *GetMerchantBalanceReply) GetBalanceForMexWithdrawFunds() int64 {
	if x != nil {
		return x.BalanceForMexWithdrawFunds
	}
	return 0
}

func (x *GetMerchantBalanceReply) GetProfit() int64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

type NotifyRejectPaymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64  `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Reason     string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	PaymentId  int64  `protobuf:"varint,3,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
}

func (x *NotifyRejectPaymentRequest) Reset() {
	*x = NotifyRejectPaymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRejectPaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRejectPaymentRequest) ProtoMessage() {}

func (x *NotifyRejectPaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRejectPaymentRequest.ProtoReflect.Descriptor instead.
func (*NotifyRejectPaymentRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{13}
}

func (x *NotifyRejectPaymentRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *NotifyRejectPaymentRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *NotifyRejectPaymentRequest) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

type NotifyRejectPaymentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyRejectPaymentReply) Reset() {
	*x = NotifyRejectPaymentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRejectPaymentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRejectPaymentReply) ProtoMessage() {}

func (x *NotifyRejectPaymentReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRejectPaymentReply.ProtoReflect.Descriptor instead.
func (*NotifyRejectPaymentReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{14}
}

type CreateVoucherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64       `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Type       PaymentType `protobuf:"varint,2,opt,name=type,proto3,enum=natasha.PaymentType" json:"type,omitempty"`
	Amount     uint64      `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Note       string      `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *CreateVoucherRequest) Reset() {
	*x = CreateVoucherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVoucherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVoucherRequest) ProtoMessage() {}

func (x *CreateVoucherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVoucherRequest.ProtoReflect.Descriptor instead.
func (*CreateVoucherRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{15}
}

func (x *CreateVoucherRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *CreateVoucherRequest) GetType() PaymentType {
	if x != nil {
		return x.Type
	}
	return PaymentType_DEPOSIT_UNSPECIFIED
}

func (x *CreateVoucherRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateVoucherRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type CreateVoucherReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voucher *Voucher `protobuf:"bytes,1,opt,name=voucher,proto3" json:"voucher,omitempty"`
}

func (x *CreateVoucherReply) Reset() {
	*x = CreateVoucherReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVoucherReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVoucherReply) ProtoMessage() {}

func (x *CreateVoucherReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVoucherReply.ProtoReflect.Descriptor instead.
func (*CreateVoucherReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{16}
}

func (x *CreateVoucherReply) GetVoucher() *Voucher {
	if x != nil {
		return x.Voucher
	}
	return nil
}

type SubmitVoucherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PayerProvider uint64 `protobuf:"varint,2,opt,name=payer_provider,json=payerProvider,proto3" json:"payer_provider,omitempty"`
	PayerAccount  string `protobuf:"bytes,3,opt,name=payer_account,json=payerAccount,proto3" json:"payer_account,omitempty"`
	PayerName     string `protobuf:"bytes,4,opt,name=payer_name,json=payerName,proto3" json:"payer_name,omitempty"`
	PayeeProvider uint64 `protobuf:"varint,5,opt,name=payee_provider,json=payeeProvider,proto3" json:"payee_provider,omitempty"`
	PayeeAccount  string `protobuf:"bytes,6,opt,name=payee_account,json=payeeAccount,proto3" json:"payee_account,omitempty"`
	PayeeName     string `protobuf:"bytes,7,opt,name=payee_name,json=payeeName,proto3" json:"payee_name,omitempty"`
	TxId          string `protobuf:"bytes,8,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	HandlerNote   string `protobuf:"bytes,9,opt,name=handler_note,json=handlerNote,proto3" json:"handler_note,omitempty"`
	ImageUrl      string `protobuf:"bytes,10,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *SubmitVoucherRequest) Reset() {
	*x = SubmitVoucherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitVoucherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitVoucherRequest) ProtoMessage() {}

func (x *SubmitVoucherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitVoucherRequest.ProtoReflect.Descriptor instead.
func (*SubmitVoucherRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{17}
}

func (x *SubmitVoucherRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubmitVoucherRequest) GetPayerProvider() uint64 {
	if x != nil {
		return x.PayerProvider
	}
	return 0
}

func (x *SubmitVoucherRequest) GetPayerAccount() string {
	if x != nil {
		return x.PayerAccount
	}
	return ""
}

func (x *SubmitVoucherRequest) GetPayerName() string {
	if x != nil {
		return x.PayerName
	}
	return ""
}

func (x *SubmitVoucherRequest) GetPayeeProvider() uint64 {
	if x != nil {
		return x.PayeeProvider
	}
	return 0
}

func (x *SubmitVoucherRequest) GetPayeeAccount() string {
	if x != nil {
		return x.PayeeAccount
	}
	return ""
}

func (x *SubmitVoucherRequest) GetPayeeName() string {
	if x != nil {
		return x.PayeeName
	}
	return ""
}

func (x *SubmitVoucherRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *SubmitVoucherRequest) GetHandlerNote() string {
	if x != nil {
		return x.HandlerNote
	}
	return ""
}

func (x *SubmitVoucherRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type SubmitVoucherReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubmitVoucherReply) Reset() {
	*x = SubmitVoucherReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitVoucherReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitVoucherReply) ProtoMessage() {}

func (x *SubmitVoucherReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitVoucherReply.ProtoReflect.Descriptor instead.
func (*SubmitVoucherReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{18}
}

type CancelVoucherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Note string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *CancelVoucherRequest) Reset() {
	*x = CancelVoucherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelVoucherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelVoucherRequest) ProtoMessage() {}

func (x *CancelVoucherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelVoucherRequest.ProtoReflect.Descriptor instead.
func (*CancelVoucherRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{19}
}

func (x *CancelVoucherRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CancelVoucherRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type CancelVoucherReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelVoucherReply) Reset() {
	*x = CancelVoucherReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelVoucherReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelVoucherReply) ProtoMessage() {}

func (x *CancelVoucherReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelVoucherReply.ProtoReflect.Descriptor instead.
func (*CancelVoucherReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{20}
}

type ListVouchersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64 `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	//
	//reserve slots
	Types    []int32 `protobuf:"varint,2,rep,packed,name=types,proto3" json:"types,omitempty"` //[]PaymentType
	Id       int64   `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Statuses []int32 `protobuf:"varint,4,rep,packed,name=statuses,proto3" json:"statuses,omitempty"` //[]VoucherStatus
	Page     uint32  `protobuf:"varint,10,opt,name=page,proto3" json:"page,omitempty"`
	Size     uint32  `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListVouchersRequest) Reset() {
	*x = ListVouchersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVouchersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVouchersRequest) ProtoMessage() {}

func (x *ListVouchersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVouchersRequest.ProtoReflect.Descriptor instead.
func (*ListVouchersRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{21}
}

func (x *ListVouchersRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *ListVouchersRequest) GetTypes() []int32 {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *ListVouchersRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListVouchersRequest) GetStatuses() []int32 {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *ListVouchersRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListVouchersRequest) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListVouchersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records     []*Voucher `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Total       uint64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	CurrentPage uint32     `protobuf:"varint,3,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	CurrentSize uint32     `protobuf:"varint,4,opt,name=current_size,json=currentSize,proto3" json:"current_size,omitempty"`
}

func (x *ListVouchersReply) Reset() {
	*x = ListVouchersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVouchersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVouchersReply) ProtoMessage() {}

func (x *ListVouchersReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVouchersReply.ProtoReflect.Descriptor instead.
func (*ListVouchersReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{22}
}

func (x *ListVouchersReply) GetRecords() []*Voucher {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *ListVouchersReply) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListVouchersReply) GetCurrentPage() uint32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *ListVouchersReply) GetCurrentSize() uint32 {
	if x != nil {
		return x.CurrentSize
	}
	return 0
}

type GetVoucherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVoucherRequest) Reset() {
	*x = GetVoucherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVoucherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVoucherRequest) ProtoMessage() {}

func (x *GetVoucherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVoucherRequest.ProtoReflect.Descriptor instead.
func (*GetVoucherRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{23}
}

func (x *GetVoucherRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetVoucherReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Voucher *Voucher `protobuf:"bytes,1,opt,name=voucher,proto3" json:"voucher,omitempty"`
}

func (x *GetVoucherReply) Reset() {
	*x = GetVoucherReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVoucherReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVoucherReply) ProtoMessage() {}

func (x *GetVoucherReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVoucherReply.ProtoReflect.Descriptor instead.
func (*GetVoucherReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{24}
}

func (x *GetVoucherReply) GetVoucher() *Voucher {
	if x != nil {
		return x.Voucher
	}
	return nil
}

type ListPaymentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantId int64 `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	//
	//reserve slots
	Types    []int32              `protobuf:"varint,2,rep,packed,name=types,proto3" json:"types,omitempty"` //[]PaymentType
	Id       int64                `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	FromDate *timestamp.Timestamp `protobuf:"bytes,4,opt,name=from_date,json=fromDate,proto3" json:"from_date,omitempty"`
	Page     uint32               `protobuf:"varint,10,opt,name=page,proto3" json:"page,omitempty"`
	Size     uint32               `protobuf:"varint,11,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListPaymentsRequest) Reset() {
	*x = ListPaymentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPaymentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaymentsRequest) ProtoMessage() {}

func (x *ListPaymentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaymentsRequest.ProtoReflect.Descriptor instead.
func (*ListPaymentsRequest) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{25}
}

func (x *ListPaymentsRequest) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *ListPaymentsRequest) GetTypes() []int32 {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *ListPaymentsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListPaymentsRequest) GetFromDate() *timestamp.Timestamp {
	if x != nil {
		return x.FromDate
	}
	return nil
}

func (x *ListPaymentsRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPaymentsRequest) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListPaymentsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Records     []*Payment `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	Total       uint64     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	CurrentPage uint32     `protobuf:"varint,3,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	CurrentSize uint32     `protobuf:"varint,4,opt,name=current_size,json=currentSize,proto3" json:"current_size,omitempty"`
}

func (x *ListPaymentsReply) Reset() {
	*x = ListPaymentsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPaymentsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaymentsReply) ProtoMessage() {}

func (x *ListPaymentsReply) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaymentsReply.ProtoReflect.Descriptor instead.
func (*ListPaymentsReply) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{26}
}

func (x *ListPaymentsReply) GetRecords() []*Payment {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *ListPaymentsReply) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPaymentsReply) GetCurrentPage() uint32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *ListPaymentsReply) GetCurrentSize() uint32 {
	if x != nil {
		return x.CurrentSize
	}
	return 0
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId int64 `protobuf:"varint,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	// money_in = MERCHANT_WITHDRAW + USER_WITHDRAW
	// money_out = MERCHANT_DEPOSIT + USER_TOP_UP
	PaymentType PaymentType `protobuf:"varint,3,opt,name=payment_type,json=paymentType,proto3,enum=natasha.PaymentType" json:"payment_type,omitempty"`
	Amount      int64       `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	//
	//reserve slots
	CreatedBy string               `protobuf:"bytes,10,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy string               `protobuf:"bytes,11,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{27}
}

func (x *Payment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Payment) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *Payment) GetPaymentType() PaymentType {
	if x != nil {
		return x.PaymentType
	}
	return PaymentType_DEPOSIT_UNSPECIFIED
}

func (x *Payment) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Payment) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Payment) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *Payment) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Payment) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type VoucherSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total          uint64  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	TotalIn_30Days uint64  `protobuf:"varint,2,opt,name=total_in_30days,json=totalIn30days,proto3" json:"total_in_30days,omitempty"`
	Percent        float64 `protobuf:"fixed64,3,opt,name=percent,proto3" json:"percent,omitempty"`
}

func (x *VoucherSummary) Reset() {
	*x = VoucherSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoucherSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoucherSummary) ProtoMessage() {}

func (x *VoucherSummary) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoucherSummary.ProtoReflect.Descriptor instead.
func (*VoucherSummary) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{28}
}

func (x *VoucherSummary) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *VoucherSummary) GetTotalIn_30Days() uint64 {
	if x != nil {
		return x.TotalIn_30Days
	}
	return 0
}

func (x *VoucherSummary) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type Voucher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MerchantId    int64         `protobuf:"varint,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	PaymentId     int64         `protobuf:"varint,3,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	Amount        int64         `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Type          PaymentType   `protobuf:"varint,5,opt,name=type,proto3,enum=natasha.PaymentType" json:"type,omitempty"`
	Status        VoucherStatus `protobuf:"varint,6,opt,name=status,proto3,enum=natasha.VoucherStatus" json:"status,omitempty"`
	ImageUrl      string        `protobuf:"bytes,7,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Note          string        `protobuf:"bytes,8,opt,name=note,proto3" json:"note,omitempty"`
	PayeeProvider uint64        `protobuf:"varint,9,opt,name=payee_provider,json=payeeProvider,proto3" json:"payee_provider,omitempty"`
	PayeeAccount  string        `protobuf:"bytes,10,opt,name=payee_account,json=payeeAccount,proto3" json:"payee_account,omitempty"`
	PayeeName     string        `protobuf:"bytes,11,opt,name=payee_name,json=payeeName,proto3" json:"payee_name,omitempty"`
	PayerProvider uint64        `protobuf:"varint,12,opt,name=payer_provider,json=payerProvider,proto3" json:"payer_provider,omitempty"`
	PayerAccount  string        `protobuf:"bytes,13,opt,name=payer_account,json=payerAccount,proto3" json:"payer_account,omitempty"`
	PayerName     string        `protobuf:"bytes,14,opt,name=payer_name,json=payerName,proto3" json:"payer_name,omitempty"`
	TxId          string        `protobuf:"bytes,15,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	HandledBy     string        `protobuf:"bytes,16,opt,name=handled_by,json=handledBy,proto3" json:"handled_by,omitempty"`
	HandlerNote   string        `protobuf:"bytes,17,opt,name=handler_note,json=handlerNote,proto3" json:"handler_note,omitempty"`
	//
	//reserve slots
	CreatedBy string               `protobuf:"bytes,20,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy string               `protobuf:"bytes,21,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,22,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,23,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Voucher) Reset() {
	*x = Voucher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_natasha_api_natasha_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Voucher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voucher) ProtoMessage() {}

func (x *Voucher) ProtoReflect() protoreflect.Message {
	mi := &file_natasha_api_natasha_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Voucher.ProtoReflect.Descriptor instead.
func (*Voucher) Descriptor() ([]byte, []int) {
	return file_natasha_api_natasha_proto_rawDescGZIP(), []int{29}
}

func (x *Voucher) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Voucher) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *Voucher) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *Voucher) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Voucher) GetType() PaymentType {
	if x != nil {
		return x.Type
	}
	return PaymentType_DEPOSIT_UNSPECIFIED
}

func (x *Voucher) GetStatus() VoucherStatus {
	if x != nil {
		return x.Status
	}
	return VoucherStatus_STATUS_UNSPECIFIED
}

func (x *Voucher) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Voucher) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *Voucher) GetPayeeProvider() uint64 {
	if x != nil {
		return x.PayeeProvider
	}
	return 0
}

func (x *Voucher) GetPayeeAccount() string {
	if x != nil {
		return x.PayeeAccount
	}
	return ""
}

func (x *Voucher) GetPayeeName() string {
	if x != nil {
		return x.PayeeName
	}
	return ""
}

func (x *Voucher) GetPayerProvider() uint64 {
	if x != nil {
		return x.PayerProvider
	}
	return 0
}

func (x *Voucher) GetPayerAccount() string {
	if x != nil {
		return x.PayerAccount
	}
	return ""
}

func (x *Voucher) GetPayerName() string {
	if x != nil {
		return x.PayerName
	}
	return ""
}

func (x *Voucher) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *Voucher) GetHandledBy() string {
	if x != nil {
		return x.HandledBy
	}
	return ""
}

func (x *Voucher) GetHandlerNote() string {
	if x != nil {
		return x.HandlerNote
	}
	return ""
}

func (x *Voucher) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Voucher) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *Voucher) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Voucher) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_natasha_api_natasha_proto protoreflect.FileDescriptor

var file_natasha_api_natasha_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x61,
	0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6e, 0x61, 0x74,
	0x61, 0x73, 0x68, 0x61, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef,
	0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x06, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x60, 0x01, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6c,
	0x61, 0x63, 0x6b, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x44, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x61, 0x74, 0x61,
	0x73, 0x68, 0x61, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x08, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x22, 0xff, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x06,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6c, 0x61,
	0x63, 0x6b, 0x5f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x57, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x61, 0x66,
	0x65, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x44, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2d, 0x0a, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x52, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x22, 0x58,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x9d, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2b, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x2d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2d, 0x0a, 0x08, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x52, 0x08, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x22, 0x94, 0x03, 0x0a, 0x08, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x6f, 0x67, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x67, 0x6f, 0x50, 0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6c, 0x61, 0x63, 0x6b,
	0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61,
	0x66, 0x65, 0x74, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x74, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x85, 0x01, 0x0a, 0x12, 0x4d, 0x61, 0x6b, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0x82, 0x01, 0x06, 0x10, 0x01, 0x18,
	0x01, 0x18, 0x02, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x58, 0x0a, 0x10, 0x4d, 0x61, 0x6b,
	0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73,
	0x68, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x74,
	0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65,
	0x22, 0xa7, 0x03, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x49, 0x6e, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x6f, 0x75, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x4f, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f,
	0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x56,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x1f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x78, 0x5f, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x1b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x4d, 0x65, 0x78,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x42,
	0x0a, 0x1e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x78, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x66, 0x75, 0x6e, 0x64, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46,
	0x6f, 0x72, 0x4d, 0x65, 0x78, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x75, 0x6e,
	0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x22, 0x74, 0x0a, 0x1a, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x1a, 0x0a, 0x18, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xaf, 0x01, 0x0a,
	0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e,
	0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x82, 0x01, 0x08, 0x10, 0x01, 0x20, 0x00, 0x20,
	0x01, 0x20, 0x02, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02,
	0x20, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x40,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x07, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e,
	0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x07, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72,
	0x22, 0xd1, 0x02, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x65, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x61,
	0x79, 0x65, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x61, 0x79, 0x65, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x78, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x56, 0x6f,
	0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3a, 0x0a, 0x14, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xa0, 0x01, 0x0a,
	0x13, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x9b, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61,
	0x2e, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x2c, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a,
	0x0a, 0x07, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65,
	0x72, 0x52, 0x07, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x22, 0xbd, 0x01, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x72, 0x6f,
	0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x2a, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x07, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6e, 0x61,
	0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x68, 0x0a, 0x0e, 0x56, 0x6f,
	0x75, 0x63, 0x68, 0x65, 0x72, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x5f, 0x33,
	0x30, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x49, 0x6e, 0x33, 0x30, 0x64, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x22, 0xdd, 0x05, 0x0a, 0x07, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x56, 0x6f, 0x75,
	0x63, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x65, 0x65, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x61, 0x79,
	0x65, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61,
	0x79, 0x65, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x65, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x64, 0x42, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x2a, 0xc9, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x4f, 0x50, 0x5f, 0x55, 0x50, 0x10, 0x01, 0x12, 0x11,
	0x0a, 0x0d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x10,
	0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x44, 0x45,
	0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x41, 0x44, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c,
	0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f, 0x44,
	0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x45, 0x4e, 0x53, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e,
	0x54, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49,
	0x54, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x4d, 0x45, 0x52, 0x43, 0x48, 0x41, 0x4e, 0x54, 0x5f,
	0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x53, 0x10, 0x06,
	0x2a, 0x54, 0x0a, 0x0d, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x52, 0x4f,
	0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x43, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x41, 0x4e, 0x4b, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x05, 0x0a, 0x01, 0x56, 0x10, 0x01, 0x12,
	0x05, 0x0a, 0x01, 0x53, 0x10, 0x02, 0x12, 0x05, 0x0a, 0x01, 0x41, 0x10, 0x03, 0x12, 0x05, 0x0a,
	0x01, 0x4e, 0x10, 0x04, 0x12, 0x05, 0x0a, 0x01, 0x42, 0x10, 0x05, 0x32, 0xbd, 0x02, 0x0a, 0x07,
	0x4e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x12, 0x4e, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x6e, 0x61, 0x74, 0x61,
	0x73, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6e, 0x61, 0x74, 0x61,
	0x73, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x6e, 0x61, 0x74, 0x61,
	0x73, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6e, 0x61, 0x74, 0x61,
	0x73, 0x68, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73,
	0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xd8, 0x02, 0x0a, 0x0a,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x57, 0x69, 0x64, 0x6f, 0x77, 0x12, 0x45, 0x0a, 0x0b, 0x4d, 0x61,
	0x6b, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x6e, 0x61, 0x74, 0x61,
	0x73, 0x68, 0x61, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61,
	0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x5a, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6e, 0x61,
	0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x2e,
	0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6e, 0x61,
	0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5d, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23,
	0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xff, 0x02, 0x0a, 0x08, 0x52, 0x6f, 0x6d, 0x61, 0x6e,
	0x6f, 0x66, 0x66, 0x12, 0x48, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x6e, 0x61,
	0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x4b, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x72, 0x12, 0x1d, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b,
	0x0a, 0x0d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x1d, 0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x56,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x0d, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x6e,
	0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x56, 0x6f, 0x75,
	0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6e, 0x61,
	0x74, 0x61, 0x73, 0x68, 0x61, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x56, 0x6f, 0x75, 0x63,
	0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x6c,
	0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x63, 0x75, 0x63, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f,
	0x72, 0x65, 0x70, 0x6f, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x6e, 0x61, 0x74,
	0x61, 0x73, 0x68, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x6e, 0x61, 0x74,
	0x61, 0x73, 0x68, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_natasha_api_natasha_proto_rawDescOnce sync.Once
	file_natasha_api_natasha_proto_rawDescData = file_natasha_api_natasha_proto_rawDesc
)

func file_natasha_api_natasha_proto_rawDescGZIP() []byte {
	file_natasha_api_natasha_proto_rawDescOnce.Do(func() {
		file_natasha_api_natasha_proto_rawDescData = protoimpl.X.CompressGZIP(file_natasha_api_natasha_proto_rawDescData)
	})
	return file_natasha_api_natasha_proto_rawDescData
}

var file_natasha_api_natasha_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_natasha_api_natasha_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_natasha_api_natasha_proto_goTypes = []interface{}{
	(PaymentType)(0),                   // 0: natasha.PaymentType
	(VoucherStatus)(0),                 // 1: natasha.VoucherStatus
	(BankType)(0),                      // 2: natasha.BankType
	(*CreateMerchantRequest)(nil),      // 3: natasha.CreateMerchantRequest
	(*CreateMerchantReply)(nil),        // 4: natasha.CreateMerchantReply
	(*UpdateMerchantRequest)(nil),      // 5: natasha.UpdateMerchantRequest
	(*UpdateMerchantReply)(nil),        // 6: natasha.UpdateMerchantReply
	(*ListMerchantsRequest)(nil),       // 7: natasha.ListMerchantsRequest
	(*ListMerchantsReply)(nil),         // 8: natasha.ListMerchantsReply
	(*GetMerchantRequest)(nil),         // 9: natasha.GetMerchantRequest
	(*GetMerchantReply)(nil),           // 10: natasha.GetMerchantReply
	(*Merchant)(nil),                   // 11: natasha.Merchant
	(*MakePaymentRequest)(nil),         // 12: natasha.MakePaymentRequest
	(*MakePaymentReply)(nil),           // 13: natasha.MakePaymentReply
	(*GetMerchantBalanceRequest)(nil),  // 14: natasha.GetMerchantBalanceRequest
	(*GetMerchantBalanceReply)(nil),    // 15: natasha.GetMerchantBalanceReply
	(*NotifyRejectPaymentRequest)(nil), // 16: natasha.NotifyRejectPaymentRequest
	(*NotifyRejectPaymentReply)(nil),   // 17: natasha.NotifyRejectPaymentReply
	(*CreateVoucherRequest)(nil),       // 18: natasha.CreateVoucherRequest
	(*CreateVoucherReply)(nil),         // 19: natasha.CreateVoucherReply
	(*SubmitVoucherRequest)(nil),       // 20: natasha.SubmitVoucherRequest
	(*SubmitVoucherReply)(nil),         // 21: natasha.SubmitVoucherReply
	(*CancelVoucherRequest)(nil),       // 22: natasha.CancelVoucherRequest
	(*CancelVoucherReply)(nil),         // 23: natasha.CancelVoucherReply
	(*ListVouchersRequest)(nil),        // 24: natasha.ListVouchersRequest
	(*ListVouchersReply)(nil),          // 25: natasha.ListVouchersReply
	(*GetVoucherRequest)(nil),          // 26: natasha.GetVoucherRequest
	(*GetVoucherReply)(nil),            // 27: natasha.GetVoucherReply
	(*ListPaymentsRequest)(nil),        // 28: natasha.ListPaymentsRequest
	(*ListPaymentsReply)(nil),          // 29: natasha.ListPaymentsReply
	(*Payment)(nil),                    // 30: natasha.Payment
	(*VoucherSummary)(nil),             // 31: natasha.VoucherSummary
	(*Voucher)(nil),                    // 32: natasha.Voucher
	(*timestamp.Timestamp)(nil),        // 33: google.protobuf.Timestamp
}
var file_natasha_api_natasha_proto_depIdxs = []int32{
	11, // 0: natasha.CreateMerchantReply.merchant:type_name -> natasha.Merchant
	11, // 1: natasha.UpdateMerchantReply.merchant:type_name -> natasha.Merchant
	11, // 2: natasha.ListMerchantsReply.records:type_name -> natasha.Merchant
	11, // 3: natasha.GetMerchantReply.merchant:type_name -> natasha.Merchant
	33, // 4: natasha.Merchant.created_at:type_name -> google.protobuf.Timestamp
	33, // 5: natasha.Merchant.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 6: natasha.MakePaymentRequest.type:type_name -> natasha.PaymentType
	30, // 7: natasha.MakePaymentReply.payment:type_name -> natasha.Payment
	33, // 8: natasha.GetMerchantBalanceRequest.from_date:type_name -> google.protobuf.Timestamp
	33, // 9: natasha.GetMerchantBalanceRequest.to_date:type_name -> google.protobuf.Timestamp
	31, // 10: natasha.GetMerchantBalanceReply.receipt_voucher:type_name -> natasha.VoucherSummary
	31, // 11: natasha.GetMerchantBalanceReply.payment_voucher:type_name -> natasha.VoucherSummary
	0,  // 12: natasha.CreateVoucherRequest.type:type_name -> natasha.PaymentType
	32, // 13: natasha.CreateVoucherReply.voucher:type_name -> natasha.Voucher
	32, // 14: natasha.ListVouchersReply.records:type_name -> natasha.Voucher
	32, // 15: natasha.GetVoucherReply.voucher:type_name -> natasha.Voucher
	33, // 16: natasha.ListPaymentsRequest.from_date:type_name -> google.protobuf.Timestamp
	30, // 17: natasha.ListPaymentsReply.records:type_name -> natasha.Payment
	0,  // 18: natasha.Payment.payment_type:type_name -> natasha.PaymentType
	33, // 19: natasha.Payment.created_at:type_name -> google.protobuf.Timestamp
	33, // 20: natasha.Payment.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 21: natasha.Voucher.type:type_name -> natasha.PaymentType
	1,  // 22: natasha.Voucher.status:type_name -> natasha.VoucherStatus
	33, // 23: natasha.Voucher.created_at:type_name -> google.protobuf.Timestamp
	33, // 24: natasha.Voucher.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 25: natasha.Natasha.CreateMerchant:input_type -> natasha.CreateMerchantRequest
	5,  // 26: natasha.Natasha.UpdateMerchant:input_type -> natasha.UpdateMerchantRequest
	7,  // 27: natasha.Natasha.ListMerchants:input_type -> natasha.ListMerchantsRequest
	9,  // 28: natasha.Natasha.GetMerchant:input_type -> natasha.GetMerchantRequest
	12, // 29: natasha.BlackWidow.MakePayment:input_type -> natasha.MakePaymentRequest
	14, // 30: natasha.BlackWidow.GetMerchantBalance:input_type -> natasha.GetMerchantBalanceRequest
	28, // 31: natasha.BlackWidow.ListPayments:input_type -> natasha.ListPaymentsRequest
	16, // 32: natasha.BlackWidow.NotifyRejectPayment:input_type -> natasha.NotifyRejectPaymentRequest
	24, // 33: natasha.Romanoff.ListVouchers:input_type -> natasha.ListVouchersRequest
	26, // 34: natasha.Romanoff.GetVoucher:input_type -> natasha.GetVoucherRequest
	18, // 35: natasha.Romanoff.CreateVoucher:input_type -> natasha.CreateVoucherRequest
	20, // 36: natasha.Romanoff.SubmitVoucher:input_type -> natasha.SubmitVoucherRequest
	22, // 37: natasha.Romanoff.CancelVoucher:input_type -> natasha.CancelVoucherRequest
	4,  // 38: natasha.Natasha.CreateMerchant:output_type -> natasha.CreateMerchantReply
	6,  // 39: natasha.Natasha.UpdateMerchant:output_type -> natasha.UpdateMerchantReply
	8,  // 40: natasha.Natasha.ListMerchants:output_type -> natasha.ListMerchantsReply
	10, // 41: natasha.Natasha.GetMerchant:output_type -> natasha.GetMerchantReply
	13, // 42: natasha.BlackWidow.MakePayment:output_type -> natasha.MakePaymentReply
	15, // 43: natasha.BlackWidow.GetMerchantBalance:output_type -> natasha.GetMerchantBalanceReply
	29, // 44: natasha.BlackWidow.ListPayments:output_type -> natasha.ListPaymentsReply
	17, // 45: natasha.BlackWidow.NotifyRejectPayment:output_type -> natasha.NotifyRejectPaymentReply
	25, // 46: natasha.Romanoff.ListVouchers:output_type -> natasha.ListVouchersReply
	27, // 47: natasha.Romanoff.GetVoucher:output_type -> natasha.GetVoucherReply
	19, // 48: natasha.Romanoff.CreateVoucher:output_type -> natasha.CreateVoucherReply
	21, // 49: natasha.Romanoff.SubmitVoucher:output_type -> natasha.SubmitVoucherReply
	23, // 50: natasha.Romanoff.CancelVoucher:output_type -> natasha.CancelVoucherReply
	38, // [38:51] is the sub-list for method output_type
	25, // [25:38] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_natasha_api_natasha_proto_init() }
func file_natasha_api_natasha_proto_init() {
	if File_natasha_api_natasha_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_natasha_api_natasha_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMerchantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMerchantReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMerchantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMerchantReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMerchantsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMerchantsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMerchantRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMerchantReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Merchant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakePaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakePaymentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMerchantBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMerchantBalanceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRejectPaymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRejectPaymentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVoucherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVoucherReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitVoucherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitVoucherReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelVoucherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelVoucherReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVouchersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVouchersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVoucherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVoucherReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPaymentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPaymentsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoucherSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_natasha_api_natasha_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Voucher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_natasha_api_natasha_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_natasha_api_natasha_proto_goTypes,
		DependencyIndexes: file_natasha_api_natasha_proto_depIdxs,
		EnumInfos:         file_natasha_api_natasha_proto_enumTypes,
		MessageInfos:      file_natasha_api_natasha_proto_msgTypes,
	}.Build()
	File_natasha_api_natasha_proto = out.File
	file_natasha_api_natasha_proto_rawDesc = nil
	file_natasha_api_natasha_proto_goTypes = nil
	file_natasha_api_natasha_proto_depIdxs = nil
}
