// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"gitlab.com/mcuc/monorepo/backend/natasha/pkg/ent/merchant"
	"gitlab.com/mcuc/monorepo/backend/natasha/pkg/ent/payment"
	"gitlab.com/mcuc/monorepo/backend/natasha/pkg/ent/voucher"
	"gitlab.com/mcuc/monorepo/backend/natasha/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	merchantFields := schema.Merchant{}.Fields()
	_ = merchantFields
	// merchantDescEmailContact is the schema descriptor for email_contact field.
	merchantDescEmailContact := merchantFields[2].Descriptor()
	// merchant.EmailContactValidator is a validator for the "email_contact" field. It is called by the builders before save.
	merchant.EmailContactValidator = merchantDescEmailContact.Validators[0].(func(string) error)
	// merchantDescWebhookURL is the schema descriptor for webhook_url field.
	merchantDescWebhookURL := merchantFields[4].Descriptor()
	// merchant.WebhookURLValidator is a validator for the "webhook_url" field. It is called by the builders before save.
	merchant.WebhookURLValidator = merchantDescWebhookURL.Validators[0].(func(string) error)
	// merchantDescSafetyLimit is the schema descriptor for safety_limit field.
	merchantDescSafetyLimit := merchantFields[6].Descriptor()
	// merchant.DefaultSafetyLimit holds the default value on creation for the safety_limit field.
	merchant.DefaultSafetyLimit = merchantDescSafetyLimit.Default.(uint64)
	// merchantDescCreatedBy is the schema descriptor for created_by field.
	merchantDescCreatedBy := merchantFields[7].Descriptor()
	// merchant.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	merchant.CreatedByValidator = func() func(string) error {
		validators := merchantDescCreatedBy.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(created_by string) error {
			for _, fn := range fns {
				if err := fn(created_by); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// merchantDescUpdatedBy is the schema descriptor for updated_by field.
	merchantDescUpdatedBy := merchantFields[8].Descriptor()
	// merchant.UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	merchant.UpdatedByValidator = func() func(string) error {
		validators := merchantDescUpdatedBy.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(updated_by string) error {
			for _, fn := range fns {
				if err := fn(updated_by); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// merchantDescCreatedAt is the schema descriptor for created_at field.
	merchantDescCreatedAt := merchantFields[9].Descriptor()
	// merchant.DefaultCreatedAt holds the default value on creation for the created_at field.
	merchant.DefaultCreatedAt = merchantDescCreatedAt.Default.(func() time.Time)
	// merchantDescUpdatedAt is the schema descriptor for updated_at field.
	merchantDescUpdatedAt := merchantFields[10].Descriptor()
	// merchant.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	merchant.DefaultUpdatedAt = merchantDescUpdatedAt.Default.(func() time.Time)
	paymentFields := schema.Payment{}.Fields()
	_ = paymentFields
	// paymentDescMerchantID is the schema descriptor for merchant_id field.
	paymentDescMerchantID := paymentFields[1].Descriptor()
	// payment.DefaultMerchantID holds the default value on creation for the merchant_id field.
	payment.DefaultMerchantID = paymentDescMerchantID.Default.(int64)
	// payment.MerchantIDValidator is a validator for the "merchant_id" field. It is called by the builders before save.
	payment.MerchantIDValidator = paymentDescMerchantID.Validators[0].(func(int64) error)
	// paymentDescType is the schema descriptor for type field.
	paymentDescType := paymentFields[2].Descriptor()
	// payment.DefaultType holds the default value on creation for the type field.
	payment.DefaultType = paymentDescType.Default.(int32)
	// payment.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	payment.TypeValidator = paymentDescType.Validators[0].(func(int32) error)
	// paymentDescCreatedAt is the schema descriptor for created_at field.
	paymentDescCreatedAt := paymentFields[4].Descriptor()
	// payment.DefaultCreatedAt holds the default value on creation for the created_at field.
	payment.DefaultCreatedAt = paymentDescCreatedAt.Default.(func() time.Time)
	// paymentDescUpdatedAt is the schema descriptor for updated_at field.
	paymentDescUpdatedAt := paymentFields[5].Descriptor()
	// payment.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	payment.DefaultUpdatedAt = paymentDescUpdatedAt.Default.(func() time.Time)
	// payment.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	payment.UpdateDefaultUpdatedAt = paymentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// paymentDescCreatedBy is the schema descriptor for created_by field.
	paymentDescCreatedBy := paymentFields[6].Descriptor()
	// payment.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	payment.CreatedByValidator = paymentDescCreatedBy.Validators[0].(func(string) error)
	// paymentDescUpdatedBy is the schema descriptor for updated_by field.
	paymentDescUpdatedBy := paymentFields[7].Descriptor()
	// payment.UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	payment.UpdatedByValidator = paymentDescUpdatedBy.Validators[0].(func(string) error)
	voucherFields := schema.Voucher{}.Fields()
	_ = voucherFields
	// voucherDescMerchantID is the schema descriptor for merchant_id field.
	voucherDescMerchantID := voucherFields[1].Descriptor()
	// voucher.DefaultMerchantID holds the default value on creation for the merchant_id field.
	voucher.DefaultMerchantID = voucherDescMerchantID.Default.(int64)
	// voucher.MerchantIDValidator is a validator for the "merchant_id" field. It is called by the builders before save.
	voucher.MerchantIDValidator = voucherDescMerchantID.Validators[0].(func(int64) error)
	// voucherDescPaymentID is the schema descriptor for payment_id field.
	voucherDescPaymentID := voucherFields[2].Descriptor()
	// voucher.DefaultPaymentID holds the default value on creation for the payment_id field.
	voucher.DefaultPaymentID = voucherDescPaymentID.Default.(int64)
	// voucher.PaymentIDValidator is a validator for the "payment_id" field. It is called by the builders before save.
	voucher.PaymentIDValidator = voucherDescPaymentID.Validators[0].(func(int64) error)
	// voucherDescType is the schema descriptor for type field.
	voucherDescType := voucherFields[4].Descriptor()
	// voucher.DefaultType holds the default value on creation for the type field.
	voucher.DefaultType = voucherDescType.Default.(int32)
	// voucher.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	voucher.TypeValidator = voucherDescType.Validators[0].(func(int32) error)
	// voucherDescStatus is the schema descriptor for status field.
	voucherDescStatus := voucherFields[5].Descriptor()
	// voucher.DefaultStatus holds the default value on creation for the status field.
	voucher.DefaultStatus = voucherDescStatus.Default.(int32)
	// voucher.StatusValidator is a validator for the "status" field. It is called by the builders before save.
	voucher.StatusValidator = voucherDescStatus.Validators[0].(func(int32) error)
	// voucherDescPayeeProvider is the schema descriptor for payee_provider field.
	voucherDescPayeeProvider := voucherFields[6].Descriptor()
	// voucher.DefaultPayeeProvider holds the default value on creation for the payee_provider field.
	voucher.DefaultPayeeProvider = voucherDescPayeeProvider.Default.(int32)
	// voucher.PayeeProviderValidator is a validator for the "payee_provider" field. It is called by the builders before save.
	voucher.PayeeProviderValidator = voucherDescPayeeProvider.Validators[0].(func(int32) error)
	// voucherDescPayerProvider is the schema descriptor for payer_provider field.
	voucherDescPayerProvider := voucherFields[9].Descriptor()
	// voucher.DefaultPayerProvider holds the default value on creation for the payer_provider field.
	voucher.DefaultPayerProvider = voucherDescPayerProvider.Default.(int32)
	// voucher.PayerProviderValidator is a validator for the "payer_provider" field. It is called by the builders before save.
	voucher.PayerProviderValidator = voucherDescPayerProvider.Validators[0].(func(int32) error)
	// voucherDescCreatedAt is the schema descriptor for created_at field.
	voucherDescCreatedAt := voucherFields[17].Descriptor()
	// voucher.DefaultCreatedAt holds the default value on creation for the created_at field.
	voucher.DefaultCreatedAt = voucherDescCreatedAt.Default.(func() time.Time)
	// voucherDescUpdatedAt is the schema descriptor for updated_at field.
	voucherDescUpdatedAt := voucherFields[18].Descriptor()
	// voucher.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	voucher.DefaultUpdatedAt = voucherDescUpdatedAt.Default.(func() time.Time)
	// voucher.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	voucher.UpdateDefaultUpdatedAt = voucherDescUpdatedAt.UpdateDefault.(func() time.Time)
	// voucherDescCreatedBy is the schema descriptor for created_by field.
	voucherDescCreatedBy := voucherFields[19].Descriptor()
	// voucher.CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	voucher.CreatedByValidator = voucherDescCreatedBy.Validators[0].(func(string) error)
	// voucherDescUpdatedBy is the schema descriptor for updated_by field.
	voucherDescUpdatedBy := voucherFields[20].Descriptor()
	// voucher.UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	voucher.UpdatedByValidator = voucherDescUpdatedBy.Validators[0].(func(string) error)
}
