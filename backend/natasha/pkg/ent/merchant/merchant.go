// Code generated by entc, DO NOT EDIT.

package merchant

import (
	"time"
)

const (
	// Label holds the string label denoting the merchant type in the database.
	Label = "merchant"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldEmailContact holds the string denoting the email_contact field in the database.
	FieldEmailContact = "email_contact"
	// FieldLogoPath holds the string denoting the logo_path field in the database.
	FieldLogoPath = "logo_path"
	// FieldWebhookURL holds the string denoting the webhook_url field in the database.
	FieldWebhookURL = "webhook_url"
	// FieldSlackWebhookURL holds the string denoting the slack_webhook_url field in the database.
	FieldSlackWebhookURL = "slack_webhook_url"
	// FieldSafetyLimit holds the string denoting the safety_limit field in the database.
	FieldSafetyLimit = "safety_limit"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// Table holds the table name of the merchant in the database.
	Table = "merchants"
)

// Columns holds all SQL columns for merchant fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldEmailContact,
	FieldLogoPath,
	FieldWebhookURL,
	FieldSlackWebhookURL,
	FieldSafetyLimit,
	FieldCreatedBy,
	FieldUpdatedBy,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// EmailContactValidator is a validator for the "email_contact" field. It is called by the builders before save.
	EmailContactValidator func(string) error
	// WebhookURLValidator is a validator for the "webhook_url" field. It is called by the builders before save.
	WebhookURLValidator func(string) error
	// DefaultSafetyLimit holds the default value on creation for the "safety_limit" field.
	DefaultSafetyLimit uint64
	// CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	CreatedByValidator func(string) error
	// UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	UpdatedByValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
)
