// Code generated by entc, DO NOT EDIT.

package paymentcryptodetail

import (
	"time"
)

const (
	// Label holds the string label denoting the paymentcryptodetail type in the database.
	Label = "payment_crypto_detail"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldCryptoType holds the string denoting the crypto_type field in the database.
	FieldCryptoType = "crypto_type"
	// FieldCryptoNetworkType holds the string denoting the crypto_network_type field in the database.
	FieldCryptoNetworkType = "crypto_network_type"
	// FieldCryptoWalletName holds the string denoting the crypto_wallet_name field in the database.
	FieldCryptoWalletName = "crypto_wallet_name"
	// FieldReceiverAddress holds the string denoting the receiver_address field in the database.
	FieldReceiverAddress = "receiver_address"
	// FieldSenderAddress holds the string denoting the sender_address field in the database.
	FieldSenderAddress = "sender_address"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldReceivedAmount holds the string denoting the received_amount field in the database.
	FieldReceivedAmount = "received_amount"
	// FieldTxHash holds the string denoting the tx_hash field in the database.
	FieldTxHash = "tx_hash"
	// FieldTxID holds the string denoting the tx_id field in the database.
	FieldTxID = "tx_id"
	// FieldFee holds the string denoting the fee field in the database.
	FieldFee = "fee"
	// FieldImageURL holds the string denoting the image_url field in the database.
	FieldImageURL = "image_url"
	// EdgePayment holds the string denoting the payment edge name in mutations.
	EdgePayment = "payment"
	// Table holds the table name of the paymentcryptodetail in the database.
	Table = "payment_crypto_details"
	// PaymentTable is the table that holds the payment relation/edge.
	PaymentTable = "payment_crypto_details"
	// PaymentInverseTable is the table name for the Payment entity.
	// It exists in this package in order to avoid circular dependency with the "payment" package.
	PaymentInverseTable = "payments"
	// PaymentColumn is the table column denoting the payment relation/edge.
	PaymentColumn = "payment_payment_crypto_detail"
)

// Columns holds all SQL columns for paymentcryptodetail fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreatedBy,
	FieldUpdatedBy,
	FieldCryptoType,
	FieldCryptoNetworkType,
	FieldCryptoWalletName,
	FieldReceiverAddress,
	FieldSenderAddress,
	FieldAmount,
	FieldReceivedAmount,
	FieldTxHash,
	FieldTxID,
	FieldFee,
	FieldImageURL,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "payment_crypto_details"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"payment_payment_crypto_detail",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	CreatedByValidator func(string) error
	// UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	UpdatedByValidator func(string) error
	// DefaultCryptoType holds the default value on creation for the "crypto_type" field.
	DefaultCryptoType int32
	// CryptoTypeValidator is a validator for the "crypto_type" field. It is called by the builders before save.
	CryptoTypeValidator func(int32) error
	// DefaultCryptoNetworkType holds the default value on creation for the "crypto_network_type" field.
	DefaultCryptoNetworkType int32
	// CryptoNetworkTypeValidator is a validator for the "crypto_network_type" field. It is called by the builders before save.
	CryptoNetworkTypeValidator func(int32) error
	// DefaultCryptoWalletName holds the default value on creation for the "crypto_wallet_name" field.
	DefaultCryptoWalletName int32
	// CryptoWalletNameValidator is a validator for the "crypto_wallet_name" field. It is called by the builders before save.
	CryptoWalletNameValidator func(int32) error
	// ReceiverAddressValidator is a validator for the "receiver_address" field. It is called by the builders before save.
	ReceiverAddressValidator func(string) error
)
