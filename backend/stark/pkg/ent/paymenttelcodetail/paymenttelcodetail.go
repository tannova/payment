// Code generated by entc, DO NOT EDIT.

package paymenttelcodetail

import (
	"time"
)

const (
	// Label holds the string label denoting the paymenttelcodetail type in the database.
	Label = "payment_telco_detail"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldTelcoName holds the string denoting the telco_name field in the database.
	FieldTelcoName = "telco_name"
	// FieldSerialNumber holds the string denoting the serial_number field in the database.
	FieldSerialNumber = "serial_number"
	// FieldCardID holds the string denoting the card_id field in the database.
	FieldCardID = "card_id"
	// FieldChargedAmount holds the string denoting the charged_amount field in the database.
	FieldChargedAmount = "charged_amount"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// EdgePayment holds the string denoting the payment edge name in mutations.
	EdgePayment = "payment"
	// Table holds the table name of the paymenttelcodetail in the database.
	Table = "payment_telco_details"
	// PaymentTable is the table that holds the payment relation/edge.
	PaymentTable = "payment_telco_details"
	// PaymentInverseTable is the table name for the Payment entity.
	// It exists in this package in order to avoid circular dependency with the "payment" package.
	PaymentInverseTable = "payments"
	// PaymentColumn is the table column denoting the payment relation/edge.
	PaymentColumn = "payment_payment_telco_detail"
)

// Columns holds all SQL columns for paymenttelcodetail fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreatedBy,
	FieldUpdatedBy,
	FieldTelcoName,
	FieldSerialNumber,
	FieldCardID,
	FieldChargedAmount,
	FieldAmount,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "payment_telco_details"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"payment_payment_telco_detail",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	CreatedByValidator func(string) error
	// UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	UpdatedByValidator func(string) error
	// DefaultTelcoName holds the default value on creation for the "telco_name" field.
	DefaultTelcoName int32
	// TelcoNameValidator is a validator for the "telco_name" field. It is called by the builders before save.
	TelcoNameValidator func(int32) error
	// DefaultSerialNumber holds the default value on creation for the "serial_number" field.
	DefaultSerialNumber string
	// DefaultCardID holds the default value on creation for the "card_id" field.
	DefaultCardID string
	// DefaultChargedAmount holds the default value on creation for the "charged_amount" field.
	DefaultChargedAmount uint64
	// DefaultAmount holds the default value on creation for the "amount" field.
	DefaultAmount uint64
)
