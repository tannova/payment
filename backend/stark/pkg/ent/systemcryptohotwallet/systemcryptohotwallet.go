// Code generated by entc, DO NOT EDIT.

package systemcryptohotwallet

import (
	"time"
)

const (
	// Label holds the string label denoting the systemcryptohotwallet type in the database.
	Label = "system_crypto_hot_wallet"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// FieldMerchantID holds the string denoting the merchant_id field in the database.
	FieldMerchantID = "merchant_id"
	// FieldCryptoType holds the string denoting the crypto_type field in the database.
	FieldCryptoType = "crypto_type"
	// FieldCryptoNetworkType holds the string denoting the crypto_network_type field in the database.
	FieldCryptoNetworkType = "crypto_network_type"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldTotalBalance holds the string denoting the total_balance field in the database.
	FieldTotalBalance = "total_balance"
	// FieldBalance holds the string denoting the balance field in the database.
	FieldBalance = "balance"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// Table holds the table name of the systemcryptohotwallet in the database.
	Table = "system_crypto_hot_wallets"
)

// Columns holds all SQL columns for systemcryptohotwallet fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreatedBy,
	FieldUpdatedBy,
	FieldMerchantID,
	FieldCryptoType,
	FieldCryptoNetworkType,
	FieldAddress,
	FieldTotalBalance,
	FieldBalance,
	FieldStatus,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	CreatedByValidator func(string) error
	// UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	UpdatedByValidator func(string) error
	// DefaultMerchantID holds the default value on creation for the "merchant_id" field.
	DefaultMerchantID int64
	// MerchantIDValidator is a validator for the "merchant_id" field. It is called by the builders before save.
	MerchantIDValidator func(int64) error
	// DefaultCryptoType holds the default value on creation for the "crypto_type" field.
	DefaultCryptoType int32
	// CryptoTypeValidator is a validator for the "crypto_type" field. It is called by the builders before save.
	CryptoTypeValidator func(int32) error
	// DefaultCryptoNetworkType holds the default value on creation for the "crypto_network_type" field.
	DefaultCryptoNetworkType int32
	// CryptoNetworkTypeValidator is a validator for the "crypto_network_type" field. It is called by the builders before save.
	CryptoNetworkTypeValidator func(int32) error
	// AddressValidator is a validator for the "address" field. It is called by the builders before save.
	AddressValidator func(string) error
	// DefaultTotalBalance holds the default value on creation for the "total_balance" field.
	DefaultTotalBalance float64
	// DefaultBalance holds the default value on creation for the "balance" field.
	DefaultBalance float64
	// DefaultStatus holds the default value on creation for the "status" field.
	DefaultStatus int32
	// StatusValidator is a validator for the "status" field. It is called by the builders before save.
	StatusValidator func(int32) error
)
