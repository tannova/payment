// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: stark/api/config_stark.proto

package stark

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	carbon "gitlab.com/greyhole/night-kit/pkg/carbon"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listener       *carbon.Listener  `protobuf:"bytes,1,opt,name=listener,proto3" json:"listener,omitempty"`
	Logger         *carbon.Logger    `protobuf:"bytes,2,opt,name=logger,proto3" json:"logger,omitempty"`
	Database       *carbon.Database  `protobuf:"bytes,3,opt,name=database,proto3" json:"database,omitempty"`
	Natasha        *carbon.TCPSocket `protobuf:"bytes,4,opt,name=natasha,proto3" json:"natasha,omitempty"`
	Blackwidow     *carbon.TCPSocket `protobuf:"bytes,5,opt,name=blackwidow,proto3" json:"blackwidow,omitempty"`
	Groot          *carbon.TCPSocket `protobuf:"bytes,6,opt,name=groot,proto3" json:"groot,omitempty"`
	DefaultSetting *DefaultSetting   `protobuf:"bytes,10,opt,name=default_setting,json=defaultSetting,proto3" json:"default_setting,omitempty"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_config_stark_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_config_stark_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_stark_api_config_stark_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetListener() *carbon.Listener {
	if x != nil {
		return x.Listener
	}
	return nil
}

func (x *Config) GetLogger() *carbon.Logger {
	if x != nil {
		return x.Logger
	}
	return nil
}

func (x *Config) GetDatabase() *carbon.Database {
	if x != nil {
		return x.Database
	}
	return nil
}

func (x *Config) GetNatasha() *carbon.TCPSocket {
	if x != nil {
		return x.Natasha
	}
	return nil
}

func (x *Config) GetBlackwidow() *carbon.TCPSocket {
	if x != nil {
		return x.Blackwidow
	}
	return nil
}

func (x *Config) GetGroot() *carbon.TCPSocket {
	if x != nil {
		return x.Groot
	}
	return nil
}

func (x *Config) GetDefaultSetting() *DefaultSetting {
	if x != nil {
		return x.DefaultSetting
	}
	return nil
}

type DefaultSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment        *PaymentCode      `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
	Crypto         *PaymentCrypto    `protobuf:"bytes,2,opt,name=crypto,proto3" json:"crypto,omitempty"`
	MapBankName    map[string]string `protobuf:"bytes,3,rep,name=map_bank_name,json=mapBankName,proto3" json:"map_bank_name,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MapEWalletName map[string]string `protobuf:"bytes,4,rep,name=map_e_wallet_name,json=mapEWalletName,proto3" json:"map_e_wallet_name,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DefaultSetting) Reset() {
	*x = DefaultSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_config_stark_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultSetting) ProtoMessage() {}

func (x *DefaultSetting) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_config_stark_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultSetting.ProtoReflect.Descriptor instead.
func (*DefaultSetting) Descriptor() ([]byte, []int) {
	return file_stark_api_config_stark_proto_rawDescGZIP(), []int{1}
}

func (x *DefaultSetting) GetPayment() *PaymentCode {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *DefaultSetting) GetCrypto() *PaymentCrypto {
	if x != nil {
		return x.Crypto
	}
	return nil
}

func (x *DefaultSetting) GetMapBankName() map[string]string {
	if x != nil {
		return x.MapBankName
	}
	return nil
}

func (x *DefaultSetting) GetMapEWalletName() map[string]string {
	if x != nil {
		return x.MapEWalletName
	}
	return nil
}

type PaymentCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method        int32 `protobuf:"varint,1,opt,name=method,proto3" json:"method,omitempty"`
	Provider      int32 `protobuf:"varint,2,opt,name=provider,proto3" json:"provider,omitempty"`
	MerchantId    int32 `protobuf:"varint,3,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	UserPaymentId int32 `protobuf:"varint,4,opt,name=user_payment_id,json=userPaymentId,proto3" json:"user_payment_id,omitempty"`
}

func (x *PaymentCode) Reset() {
	*x = PaymentCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_config_stark_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentCode) ProtoMessage() {}

func (x *PaymentCode) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_config_stark_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentCode.ProtoReflect.Descriptor instead.
func (*PaymentCode) Descriptor() ([]byte, []int) {
	return file_stark_api_config_stark_proto_rawDescGZIP(), []int{2}
}

func (x *PaymentCode) GetMethod() int32 {
	if x != nil {
		return x.Method
	}
	return 0
}

func (x *PaymentCode) GetProvider() int32 {
	if x != nil {
		return x.Provider
	}
	return 0
}

func (x *PaymentCode) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *PaymentCode) GetUserPaymentId() int32 {
	if x != nil {
		return x.UserPaymentId
	}
	return 0
}

type PaymentCrypto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Domain    string `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	StoreId   int64  `protobuf:"varint,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	SecretKey string `protobuf:"bytes,3,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
}

func (x *PaymentCrypto) Reset() {
	*x = PaymentCrypto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_config_stark_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentCrypto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentCrypto) ProtoMessage() {}

func (x *PaymentCrypto) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_config_stark_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentCrypto.ProtoReflect.Descriptor instead.
func (*PaymentCrypto) Descriptor() ([]byte, []int) {
	return file_stark_api_config_stark_proto_rawDescGZIP(), []int{3}
}

func (x *PaymentCrypto) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *PaymentCrypto) GetStoreId() int64 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *PaymentCrypto) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

var File_stark_api_config_stark_proto protoreflect.FileDescriptor

var file_stark_api_config_stark_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x1a, 0x1a, 0x6e, 0x69,
	0x67, 0x68, 0x74, 0x2d, 0x6b, 0x69, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x61, 0x72, 0x62,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf0, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x36, 0x0a, 0x08,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x4c, 0x6f,
	0x67, 0x67, 0x65, 0x72, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06,
	0x6c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f,
	0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x54,
	0x43, 0x50, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x6e, 0x61, 0x74, 0x61, 0x73, 0x68,
	0x61, 0x12, 0x31, 0x0a, 0x0a, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x77, 0x69, 0x64, 0x6f, 0x77, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x54,
	0x43, 0x50, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x77,
	0x69, 0x64, 0x6f, 0x77, 0x12, 0x27, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x54, 0x43, 0x50,
	0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x45, 0x0a,
	0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x22, 0xad, 0x03, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x06,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x12, 0x51, 0x0a, 0x0d, 0x6d, 0x61, 0x70, 0x5f, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x61, 0x70, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x61, 0x70, 0x42, 0x61, 0x6e, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5b, 0x0a, 0x11, 0x6d, 0x61, 0x70, 0x5f, 0x65, 0x5f, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x30, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x4d, 0x61,
	0x70, 0x45, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0e, 0x6d, 0x61, 0x70, 0x45, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x3e, 0x0a, 0x10, 0x4d, 0x61, 0x70, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x61, 0x6d, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x41, 0x0a, 0x13, 0x4d, 0x61, 0x70, 0x45, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x8a, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d,
	0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x61, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x63, 0x75, 0x63, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x65, 0x70, 0x6f,
	0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3b, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stark_api_config_stark_proto_rawDescOnce sync.Once
	file_stark_api_config_stark_proto_rawDescData = file_stark_api_config_stark_proto_rawDesc
)

func file_stark_api_config_stark_proto_rawDescGZIP() []byte {
	file_stark_api_config_stark_proto_rawDescOnce.Do(func() {
		file_stark_api_config_stark_proto_rawDescData = protoimpl.X.CompressGZIP(file_stark_api_config_stark_proto_rawDescData)
	})
	return file_stark_api_config_stark_proto_rawDescData
}

var file_stark_api_config_stark_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_stark_api_config_stark_proto_goTypes = []interface{}{
	(*Config)(nil),           // 0: config.stark.Config
	(*DefaultSetting)(nil),   // 1: config.stark.DefaultSetting
	(*PaymentCode)(nil),      // 2: config.stark.PaymentCode
	(*PaymentCrypto)(nil),    // 3: config.stark.PaymentCrypto
	nil,                      // 4: config.stark.DefaultSetting.MapBankNameEntry
	nil,                      // 5: config.stark.DefaultSetting.MapEWalletNameEntry
	(*carbon.Listener)(nil),  // 6: carbon.Listener
	(*carbon.Logger)(nil),    // 7: carbon.Logger
	(*carbon.Database)(nil),  // 8: carbon.Database
	(*carbon.TCPSocket)(nil), // 9: carbon.TCPSocket
}
var file_stark_api_config_stark_proto_depIdxs = []int32{
	6,  // 0: config.stark.Config.listener:type_name -> carbon.Listener
	7,  // 1: config.stark.Config.logger:type_name -> carbon.Logger
	8,  // 2: config.stark.Config.database:type_name -> carbon.Database
	9,  // 3: config.stark.Config.natasha:type_name -> carbon.TCPSocket
	9,  // 4: config.stark.Config.blackwidow:type_name -> carbon.TCPSocket
	9,  // 5: config.stark.Config.groot:type_name -> carbon.TCPSocket
	1,  // 6: config.stark.Config.default_setting:type_name -> config.stark.DefaultSetting
	2,  // 7: config.stark.DefaultSetting.payment:type_name -> config.stark.PaymentCode
	3,  // 8: config.stark.DefaultSetting.crypto:type_name -> config.stark.PaymentCrypto
	4,  // 9: config.stark.DefaultSetting.map_bank_name:type_name -> config.stark.DefaultSetting.MapBankNameEntry
	5,  // 10: config.stark.DefaultSetting.map_e_wallet_name:type_name -> config.stark.DefaultSetting.MapEWalletNameEntry
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_stark_api_config_stark_proto_init() }
func file_stark_api_config_stark_proto_init() {
	if File_stark_api_config_stark_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stark_api_config_stark_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_config_stark_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_config_stark_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_config_stark_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentCrypto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stark_api_config_stark_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_stark_api_config_stark_proto_goTypes,
		DependencyIndexes: file_stark_api_config_stark_proto_depIdxs,
		MessageInfos:      file_stark_api_config_stark_proto_msgTypes,
	}.Build()
	File_stark_api_config_stark_proto = out.File
	file_stark_api_config_stark_proto_rawDesc = nil
	file_stark_api_config_stark_proto_goTypes = nil
	file_stark_api_config_stark_proto_depIdxs = nil
}
