// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: stark/api/morgan.proto

package stark

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	api "gitlab.com/mcuc/monorepo/backend/groot/pkg/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CreateTelcoWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount         uint64        `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	TelcoName      api.TelcoName `protobuf:"varint,2,opt,name=telco_name,json=telcoName,proto3,enum=mcuc.groot.TelcoName" json:"telco_name,omitempty"`
	MerchantUserId int64         `protobuf:"varint,3,opt,name=merchant_user_id,json=merchantUserId,proto3" json:"merchant_user_id,omitempty"`
}

func (x *CreateTelcoWithdrawRequest) Reset() {
	*x = CreateTelcoWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTelcoWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTelcoWithdrawRequest) ProtoMessage() {}

func (x *CreateTelcoWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTelcoWithdrawRequest.ProtoReflect.Descriptor instead.
func (*CreateTelcoWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTelcoWithdrawRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateTelcoWithdrawRequest) GetTelcoName() api.TelcoName {
	if x != nil {
		return x.TelcoName
	}
	return api.TelcoName_BRANCH_UNSPECIFIED
}

func (x *CreateTelcoWithdrawRequest) GetMerchantUserId() int64 {
	if x != nil {
		return x.MerchantUserId
	}
	return 0
}

type CreateTelcoWithdrawReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId int64 `protobuf:"varint,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
}

func (x *CreateTelcoWithdrawReply) Reset() {
	*x = CreateTelcoWithdrawReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTelcoWithdrawReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTelcoWithdrawReply) ProtoMessage() {}

func (x *CreateTelcoWithdrawReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTelcoWithdrawReply.ProtoReflect.Descriptor instead.
func (*CreateTelcoWithdrawReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTelcoWithdrawReply) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

type CreateTelcoTopUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card *api.Card `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	// Can be deprecated
	TxId           string `protobuf:"bytes,2,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	MerchantUserId int64  `protobuf:"varint,3,opt,name=merchant_user_id,json=merchantUserId,proto3" json:"merchant_user_id,omitempty"`
}

func (x *CreateTelcoTopUpRequest) Reset() {
	*x = CreateTelcoTopUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTelcoTopUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTelcoTopUpRequest) ProtoMessage() {}

func (x *CreateTelcoTopUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTelcoTopUpRequest.ProtoReflect.Descriptor instead.
func (*CreateTelcoTopUpRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTelcoTopUpRequest) GetCard() *api.Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *CreateTelcoTopUpRequest) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

func (x *CreateTelcoTopUpRequest) GetMerchantUserId() int64 {
	if x != nil {
		return x.MerchantUserId
	}
	return 0
}

type CreateTelcoTopUpReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId int64 `protobuf:"varint,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
}

func (x *CreateTelcoTopUpReply) Reset() {
	*x = CreateTelcoTopUpReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTelcoTopUpReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTelcoTopUpReply) ProtoMessage() {}

func (x *CreateTelcoTopUpReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTelcoTopUpReply.ProtoReflect.Descriptor instead.
func (*CreateTelcoTopUpReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTelcoTopUpReply) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

type CancelTelcoWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId int64 `protobuf:"varint,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
}

func (x *CancelTelcoWithdrawRequest) Reset() {
	*x = CancelTelcoWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelTelcoWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTelcoWithdrawRequest) ProtoMessage() {}

func (x *CancelTelcoWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTelcoWithdrawRequest.ProtoReflect.Descriptor instead.
func (*CancelTelcoWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{4}
}

func (x *CancelTelcoWithdrawRequest) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

type CancelTelcoWithdrawReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelTelcoWithdrawReply) Reset() {
	*x = CancelTelcoWithdrawReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelTelcoWithdrawReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelTelcoWithdrawReply) ProtoMessage() {}

func (x *CancelTelcoWithdrawReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelTelcoWithdrawReply.ProtoReflect.Descriptor instead.
func (*CancelTelcoWithdrawReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{5}
}

type CompleteTelcoTopUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card          *api.Card `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`
	PaymentId     int64     `protobuf:"varint,2,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	ChargedAmount uint64    `protobuf:"varint,3,opt,name=charged_amount,json=chargedAmount,proto3" json:"charged_amount,omitempty"`
	Provider      string    `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *CompleteTelcoTopUpRequest) Reset() {
	*x = CompleteTelcoTopUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteTelcoTopUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteTelcoTopUpRequest) ProtoMessage() {}

func (x *CompleteTelcoTopUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteTelcoTopUpRequest.ProtoReflect.Descriptor instead.
func (*CompleteTelcoTopUpRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{6}
}

func (x *CompleteTelcoTopUpRequest) GetCard() *api.Card {
	if x != nil {
		return x.Card
	}
	return nil
}

func (x *CompleteTelcoTopUpRequest) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *CompleteTelcoTopUpRequest) GetChargedAmount() uint64 {
	if x != nil {
		return x.ChargedAmount
	}
	return 0
}

func (x *CompleteTelcoTopUpRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type CompleteTelcoTopUpReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompleteTelcoTopUpReply) Reset() {
	*x = CompleteTelcoTopUpReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteTelcoTopUpReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteTelcoTopUpReply) ProtoMessage() {}

func (x *CompleteTelcoTopUpReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteTelcoTopUpReply.ProtoReflect.Descriptor instead.
func (*CompleteTelcoTopUpReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{7}
}

type ApproveTelcoTopUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId int64  `protobuf:"varint,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	Note      string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *ApproveTelcoTopUpRequest) Reset() {
	*x = ApproveTelcoTopUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveTelcoTopUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTelcoTopUpRequest) ProtoMessage() {}

func (x *ApproveTelcoTopUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTelcoTopUpRequest.ProtoReflect.Descriptor instead.
func (*ApproveTelcoTopUpRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{8}
}

func (x *ApproveTelcoTopUpRequest) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *ApproveTelcoTopUpRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type ApproveTelcoTopUpReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApproveTelcoTopUpReply) Reset() {
	*x = ApproveTelcoTopUpReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveTelcoTopUpReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTelcoTopUpReply) ProtoMessage() {}

func (x *ApproveTelcoTopUpReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTelcoTopUpReply.ProtoReflect.Descriptor instead.
func (*ApproveTelcoTopUpReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{9}
}

type ApproveTelcoWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId int64  `protobuf:"varint,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	Note      string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
}

func (x *ApproveTelcoWithdrawRequest) Reset() {
	*x = ApproveTelcoWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveTelcoWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTelcoWithdrawRequest) ProtoMessage() {}

func (x *ApproveTelcoWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTelcoWithdrawRequest.ProtoReflect.Descriptor instead.
func (*ApproveTelcoWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{10}
}

func (x *ApproveTelcoWithdrawRequest) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *ApproveTelcoWithdrawRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

type ApproveTelcoWithdrawReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApproveTelcoWithdrawReply) Reset() {
	*x = ApproveTelcoWithdrawReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveTelcoWithdrawReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTelcoWithdrawReply) ProtoMessage() {}

func (x *ApproveTelcoWithdrawReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTelcoWithdrawReply.ProtoReflect.Descriptor instead.
func (*ApproveTelcoWithdrawReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{11}
}

type RejectTelcoTopUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId      int64  `protobuf:"varint,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	Note           string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	IsMerchantCall bool   `protobuf:"varint,3,opt,name=is_merchant_call,json=isMerchantCall,proto3" json:"is_merchant_call,omitempty"`
}

func (x *RejectTelcoTopUpRequest) Reset() {
	*x = RejectTelcoTopUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTelcoTopUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTelcoTopUpRequest) ProtoMessage() {}

func (x *RejectTelcoTopUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTelcoTopUpRequest.ProtoReflect.Descriptor instead.
func (*RejectTelcoTopUpRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{12}
}

func (x *RejectTelcoTopUpRequest) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *RejectTelcoTopUpRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *RejectTelcoTopUpRequest) GetIsMerchantCall() bool {
	if x != nil {
		return x.IsMerchantCall
	}
	return false
}

type RejectTelcoTopUpReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RejectTelcoTopUpReply) Reset() {
	*x = RejectTelcoTopUpReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTelcoTopUpReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTelcoTopUpReply) ProtoMessage() {}

func (x *RejectTelcoTopUpReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTelcoTopUpReply.ProtoReflect.Descriptor instead.
func (*RejectTelcoTopUpReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{13}
}

type RejectTelcoWithdrawRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaymentId      int64  `protobuf:"varint,1,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	Note           string `protobuf:"bytes,2,opt,name=note,proto3" json:"note,omitempty"`
	IsMerchantCall bool   `protobuf:"varint,3,opt,name=is_merchant_call,json=isMerchantCall,proto3" json:"is_merchant_call,omitempty"`
}

func (x *RejectTelcoWithdrawRequest) Reset() {
	*x = RejectTelcoWithdrawRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTelcoWithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTelcoWithdrawRequest) ProtoMessage() {}

func (x *RejectTelcoWithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTelcoWithdrawRequest.ProtoReflect.Descriptor instead.
func (*RejectTelcoWithdrawRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{14}
}

func (x *RejectTelcoWithdrawRequest) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *RejectTelcoWithdrawRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *RejectTelcoWithdrawRequest) GetIsMerchantCall() bool {
	if x != nil {
		return x.IsMerchantCall
	}
	return false
}

type RejectTelcoWithdrawReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RejectTelcoWithdrawReply) Reset() {
	*x = RejectTelcoWithdrawReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTelcoWithdrawReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTelcoWithdrawReply) ProtoMessage() {}

func (x *RejectTelcoWithdrawReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTelcoWithdrawReply.ProtoReflect.Descriptor instead.
func (*RejectTelcoWithdrawReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{15}
}

type GetSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSettingsRequest) Reset() {
	*x = GetSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsRequest) ProtoMessage() {}

func (x *GetSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetSettingsRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{16}
}

type GetSettingsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopUpAutoApproval   bool        `protobuf:"varint,1,opt,name=top_up_auto_approval,json=topUpAutoApproval,proto3" json:"top_up_auto_approval,omitempty"`
	EnableThirdParty    bool        `protobuf:"varint,2,opt,name=enable_third_party,json=enableThirdParty,proto3" json:"enable_third_party,omitempty"`
	ChargeCardProviders []*Provider `protobuf:"bytes,3,rep,name=charge_card_providers,json=chargeCardProviders,proto3" json:"charge_card_providers,omitempty"`
	GetCardProviders    []*Provider `protobuf:"bytes,4,rep,name=get_card_providers,json=getCardProviders,proto3" json:"get_card_providers,omitempty"`
}

func (x *GetSettingsReply) Reset() {
	*x = GetSettingsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSettingsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsReply) ProtoMessage() {}

func (x *GetSettingsReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsReply.ProtoReflect.Descriptor instead.
func (*GetSettingsReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{17}
}

func (x *GetSettingsReply) GetTopUpAutoApproval() bool {
	if x != nil {
		return x.TopUpAutoApproval
	}
	return false
}

func (x *GetSettingsReply) GetEnableThirdParty() bool {
	if x != nil {
		return x.EnableThirdParty
	}
	return false
}

func (x *GetSettingsReply) GetChargeCardProviders() []*Provider {
	if x != nil {
		return x.ChargeCardProviders
	}
	return nil
}

func (x *GetSettingsReply) GetGetCardProviders() []*Provider {
	if x != nil {
		return x.GetCardProviders
	}
	return nil
}

type UpdateTopUpAutoApprovalSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopUpAutoApproval bool `protobuf:"varint,1,opt,name=top_up_auto_approval,json=topUpAutoApproval,proto3" json:"top_up_auto_approval,omitempty"`
}

func (x *UpdateTopUpAutoApprovalSettingRequest) Reset() {
	*x = UpdateTopUpAutoApprovalSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTopUpAutoApprovalSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopUpAutoApprovalSettingRequest) ProtoMessage() {}

func (x *UpdateTopUpAutoApprovalSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopUpAutoApprovalSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateTopUpAutoApprovalSettingRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateTopUpAutoApprovalSettingRequest) GetTopUpAutoApproval() bool {
	if x != nil {
		return x.TopUpAutoApproval
	}
	return false
}

type UpdateTopUpAutoApprovalSettingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTopUpAutoApprovalSettingReply) Reset() {
	*x = UpdateTopUpAutoApprovalSettingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTopUpAutoApprovalSettingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopUpAutoApprovalSettingReply) ProtoMessage() {}

func (x *UpdateTopUpAutoApprovalSettingReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopUpAutoApprovalSettingReply.ProtoReflect.Descriptor instead.
func (*UpdateTopUpAutoApprovalSettingReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{19}
}

type UpdateUsingThirdPartySettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnableThirdParty bool `protobuf:"varint,1,opt,name=enable_third_party,json=enableThirdParty,proto3" json:"enable_third_party,omitempty"`
}

func (x *UpdateUsingThirdPartySettingRequest) Reset() {
	*x = UpdateUsingThirdPartySettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUsingThirdPartySettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUsingThirdPartySettingRequest) ProtoMessage() {}

func (x *UpdateUsingThirdPartySettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUsingThirdPartySettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateUsingThirdPartySettingRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateUsingThirdPartySettingRequest) GetEnableThirdParty() bool {
	if x != nil {
		return x.EnableThirdParty
	}
	return false
}

type UpdateUsingThirdPartySettingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUsingThirdPartySettingReply) Reset() {
	*x = UpdateUsingThirdPartySettingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUsingThirdPartySettingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUsingThirdPartySettingReply) ProtoMessage() {}

func (x *UpdateUsingThirdPartySettingReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUsingThirdPartySettingReply.ProtoReflect.Descriptor instead.
func (*UpdateUsingThirdPartySettingReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{21}
}

type Provider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Enable   bool   `protobuf:"varint,2,opt,name=enable,proto3" json:"enable,omitempty"`
	Priority int64  `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *Provider) Reset() {
	*x = Provider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Provider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Provider) ProtoMessage() {}

func (x *Provider) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Provider.ProtoReflect.Descriptor instead.
func (*Provider) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{22}
}

func (x *Provider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Provider) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *Provider) GetPriority() int64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type UpdateChargeCardProvidersSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Providers []*Provider `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (x *UpdateChargeCardProvidersSettingRequest) Reset() {
	*x = UpdateChargeCardProvidersSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChargeCardProvidersSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChargeCardProvidersSettingRequest) ProtoMessage() {}

func (x *UpdateChargeCardProvidersSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChargeCardProvidersSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateChargeCardProvidersSettingRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateChargeCardProvidersSettingRequest) GetProviders() []*Provider {
	if x != nil {
		return x.Providers
	}
	return nil
}

type UpdateChargeCardProvidersSettingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateChargeCardProvidersSettingReply) Reset() {
	*x = UpdateChargeCardProvidersSettingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChargeCardProvidersSettingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChargeCardProvidersSettingReply) ProtoMessage() {}

func (x *UpdateChargeCardProvidersSettingReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChargeCardProvidersSettingReply.ProtoReflect.Descriptor instead.
func (*UpdateChargeCardProvidersSettingReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{24}
}

type UpdateGetCardProvidersSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Providers []*Provider `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
}

func (x *UpdateGetCardProvidersSettingRequest) Reset() {
	*x = UpdateGetCardProvidersSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGetCardProvidersSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGetCardProvidersSettingRequest) ProtoMessage() {}

func (x *UpdateGetCardProvidersSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGetCardProvidersSettingRequest.ProtoReflect.Descriptor instead.
func (*UpdateGetCardProvidersSettingRequest) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{25}
}

func (x *UpdateGetCardProvidersSettingRequest) GetProviders() []*Provider {
	if x != nil {
		return x.Providers
	}
	return nil
}

type UpdateGetCardProvidersSettingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGetCardProvidersSettingReply) Reset() {
	*x = UpdateGetCardProvidersSettingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGetCardProvidersSettingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGetCardProvidersSettingReply) ProtoMessage() {}

func (x *UpdateGetCardProvidersSettingReply) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGetCardProvidersSettingReply.ProtoReflect.Descriptor instead.
func (*UpdateGetCardProvidersSettingReply) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{26}
}

type TelcoPaymentDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SerialNumber  string               `protobuf:"bytes,2,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	CardId        string               `protobuf:"bytes,3,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	ChargedAmount uint64               `protobuf:"varint,4,opt,name=charged_amount,json=chargedAmount,proto3" json:"charged_amount,omitempty"`
	Amount        uint64               `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	TelcoName     api.TelcoName        `protobuf:"varint,6,opt,name=telco_name,json=telcoName,proto3,enum=mcuc.groot.TelcoName" json:"telco_name,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamp.Timestamp `protobuf:"bytes,30,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *TelcoPaymentDetail) Reset() {
	*x = TelcoPaymentDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stark_api_morgan_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TelcoPaymentDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelcoPaymentDetail) ProtoMessage() {}

func (x *TelcoPaymentDetail) ProtoReflect() protoreflect.Message {
	mi := &file_stark_api_morgan_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelcoPaymentDetail.ProtoReflect.Descriptor instead.
func (*TelcoPaymentDetail) Descriptor() ([]byte, []int) {
	return file_stark_api_morgan_proto_rawDescGZIP(), []int{27}
}

func (x *TelcoPaymentDetail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TelcoPaymentDetail) GetSerialNumber() string {
	if x != nil {
		return x.SerialNumber
	}
	return ""
}

func (x *TelcoPaymentDetail) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

func (x *TelcoPaymentDetail) GetChargedAmount() uint64 {
	if x != nil {
		return x.ChargedAmount
	}
	return 0
}

func (x *TelcoPaymentDetail) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TelcoPaymentDetail) GetTelcoName() api.TelcoName {
	if x != nil {
		return x.TelcoName
	}
	return api.TelcoName_BRANCH_UNSPECIFIED
}

func (x *TelcoPaymentDetail) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TelcoPaymentDetail) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_stark_api_morgan_proto protoreflect.FileDescriptor

var file_stark_api_morgan_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x6f, 0x72, 0x67,
	0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67, 0x72, 0x6f, 0x6f, 0x74, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x67, 0x72, 0x6f, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a,
	0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0a,
	0x74, 0x65, 0x6c, 0x63, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x15, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x6f, 0x74, 0x2e, 0x54, 0x65,
	0x6c, 0x63, 0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x63, 0x6f, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x65,
	0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x18,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x6f, 0x74, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x78, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x10, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x3b, 0x0a, 0x1a, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x1a, 0x0a, 0x18,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xa3, 0x01, 0x0a, 0x19, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x6f,
	0x74, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x19,
	0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x54,
	0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x4d, 0x0a, 0x18, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x50, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x6c,
	0x63, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54,
	0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x76, 0x0a, 0x17, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6c, 0x63, 0x6f,
	0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x5f, 0x63,
	0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x79, 0x0a, 0x1a, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6c, 0x63,
	0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x6f, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61,
	0x6e, 0x74, 0x5f, 0x63, 0x61, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69,
	0x73, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x22, 0x1a, 0x0a,
	0x18, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x8d, 0x02, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x14, 0x74, 0x6f, 0x70, 0x5f, 0x75, 0x70, 0x5f, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x11, 0x74, 0x6f, 0x70, 0x55, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x12, 0x4f, 0x0a, 0x15, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e,
	0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,
	0x13, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x67,
	0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22,
	0x58, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x41, 0x75,
	0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x14, 0x74, 0x6f, 0x70, 0x5f,
	0x75, 0x70, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x74, 0x6f, 0x70, 0x55, 0x70, 0x41, 0x75, 0x74,
	0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x22, 0x25, 0x0a, 0x23, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x53, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x69, 0x6e, 0x67, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x22, 0x23, 0x0a, 0x21, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x69, 0x6e, 0x67, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x52, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x22, 0x64,
	0x0a, 0x27, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x61,
	0x72, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d,
	0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x22, 0x27, 0x0a, 0x25, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x61, 0x0a,
	0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,
	0x22, 0x24, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xcd, 0x02, 0x0a, 0x12, 0x54, 0x65, 0x6c, 0x63, 0x6f,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0a, 0x74, 0x65,
	0x6c, 0x63, 0x6f, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x67, 0x72, 0x6f, 0x6f, 0x74, 0x2e, 0x54, 0x65, 0x6c, 0x63,
	0x6f, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74, 0x65, 0x6c, 0x63, 0x6f, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xb4, 0x0c, 0x0a, 0x06, 0x4d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x12, 0x71, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x2d, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x68, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x12, 0x2a, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x71,
	0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x2d, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54,
	0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x6e, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6c,
	0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x12, 0x2c, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x6b, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x6c, 0x63,
	0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x12, 0x2b, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b,
	0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54,
	0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x74,
	0x0a, 0x14, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x2e, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x68, 0x0a, 0x10, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65,
	0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x12, 0x2a, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e,
	0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x65, 0x6c, 0x63, 0x6f, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x71,
	0x0a, 0x13, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x2d, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72,
	0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54,
	0x65, 0x6c, 0x63, 0x6f, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x59, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x25, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f,
	0x72, 0x67, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73,
	0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x92, 0x01, 0x0a,
	0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x41, 0x75, 0x74, 0x6f,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x38, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72,
	0x67, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x41,
	0x75, 0x74, 0x6f, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6d, 0x63, 0x75, 0x63,
	0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x55, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x8c, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x69, 0x6e,
	0x67, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x36, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e,
	0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x69,
	0x6e, 0x67, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6d, 0x63, 0x75,
	0x63, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x69, 0x6e, 0x67, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x98, 0x01, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61,
	0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x38, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x8f, 0x01, 0x0a, 0x1d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x2e,
	0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6d, 0x63, 0x75, 0x63, 0x2e, 0x73, 0x74,
	0x61, 0x72, 0x6b, 0x2e, 0x6d, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x36, 0x5a,
	0x34, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x63, 0x75, 0x63,
	0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x3b,
	0x73, 0x74, 0x61, 0x72, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stark_api_morgan_proto_rawDescOnce sync.Once
	file_stark_api_morgan_proto_rawDescData = file_stark_api_morgan_proto_rawDesc
)

func file_stark_api_morgan_proto_rawDescGZIP() []byte {
	file_stark_api_morgan_proto_rawDescOnce.Do(func() {
		file_stark_api_morgan_proto_rawDescData = protoimpl.X.CompressGZIP(file_stark_api_morgan_proto_rawDescData)
	})
	return file_stark_api_morgan_proto_rawDescData
}

var file_stark_api_morgan_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_stark_api_morgan_proto_goTypes = []interface{}{
	(*CreateTelcoWithdrawRequest)(nil),              // 0: mcuc.stark.morgan.CreateTelcoWithdrawRequest
	(*CreateTelcoWithdrawReply)(nil),                // 1: mcuc.stark.morgan.CreateTelcoWithdrawReply
	(*CreateTelcoTopUpRequest)(nil),                 // 2: mcuc.stark.morgan.CreateTelcoTopUpRequest
	(*CreateTelcoTopUpReply)(nil),                   // 3: mcuc.stark.morgan.CreateTelcoTopUpReply
	(*CancelTelcoWithdrawRequest)(nil),              // 4: mcuc.stark.morgan.CancelTelcoWithdrawRequest
	(*CancelTelcoWithdrawReply)(nil),                // 5: mcuc.stark.morgan.CancelTelcoWithdrawReply
	(*CompleteTelcoTopUpRequest)(nil),               // 6: mcuc.stark.morgan.CompleteTelcoTopUpRequest
	(*CompleteTelcoTopUpReply)(nil),                 // 7: mcuc.stark.morgan.CompleteTelcoTopUpReply
	(*ApproveTelcoTopUpRequest)(nil),                // 8: mcuc.stark.morgan.ApproveTelcoTopUpRequest
	(*ApproveTelcoTopUpReply)(nil),                  // 9: mcuc.stark.morgan.ApproveTelcoTopUpReply
	(*ApproveTelcoWithdrawRequest)(nil),             // 10: mcuc.stark.morgan.ApproveTelcoWithdrawRequest
	(*ApproveTelcoWithdrawReply)(nil),               // 11: mcuc.stark.morgan.ApproveTelcoWithdrawReply
	(*RejectTelcoTopUpRequest)(nil),                 // 12: mcuc.stark.morgan.RejectTelcoTopUpRequest
	(*RejectTelcoTopUpReply)(nil),                   // 13: mcuc.stark.morgan.RejectTelcoTopUpReply
	(*RejectTelcoWithdrawRequest)(nil),              // 14: mcuc.stark.morgan.RejectTelcoWithdrawRequest
	(*RejectTelcoWithdrawReply)(nil),                // 15: mcuc.stark.morgan.RejectTelcoWithdrawReply
	(*GetSettingsRequest)(nil),                      // 16: mcuc.stark.morgan.GetSettingsRequest
	(*GetSettingsReply)(nil),                        // 17: mcuc.stark.morgan.GetSettingsReply
	(*UpdateTopUpAutoApprovalSettingRequest)(nil),   // 18: mcuc.stark.morgan.UpdateTopUpAutoApprovalSettingRequest
	(*UpdateTopUpAutoApprovalSettingReply)(nil),     // 19: mcuc.stark.morgan.UpdateTopUpAutoApprovalSettingReply
	(*UpdateUsingThirdPartySettingRequest)(nil),     // 20: mcuc.stark.morgan.UpdateUsingThirdPartySettingRequest
	(*UpdateUsingThirdPartySettingReply)(nil),       // 21: mcuc.stark.morgan.UpdateUsingThirdPartySettingReply
	(*Provider)(nil),                                // 22: mcuc.stark.morgan.Provider
	(*UpdateChargeCardProvidersSettingRequest)(nil), // 23: mcuc.stark.morgan.UpdateChargeCardProvidersSettingRequest
	(*UpdateChargeCardProvidersSettingReply)(nil),   // 24: mcuc.stark.morgan.UpdateChargeCardProvidersSettingReply
	(*UpdateGetCardProvidersSettingRequest)(nil),    // 25: mcuc.stark.morgan.UpdateGetCardProvidersSettingRequest
	(*UpdateGetCardProvidersSettingReply)(nil),      // 26: mcuc.stark.morgan.UpdateGetCardProvidersSettingReply
	(*TelcoPaymentDetail)(nil),                      // 27: mcuc.stark.morgan.TelcoPaymentDetail
	(api.TelcoName)(0),                              // 28: mcuc.groot.TelcoName
	(*api.Card)(nil),                                // 29: mcuc.groot.Card
	(*timestamp.Timestamp)(nil),                     // 30: google.protobuf.Timestamp
}
var file_stark_api_morgan_proto_depIdxs = []int32{
	28, // 0: mcuc.stark.morgan.CreateTelcoWithdrawRequest.telco_name:type_name -> mcuc.groot.TelcoName
	29, // 1: mcuc.stark.morgan.CreateTelcoTopUpRequest.card:type_name -> mcuc.groot.Card
	29, // 2: mcuc.stark.morgan.CompleteTelcoTopUpRequest.card:type_name -> mcuc.groot.Card
	22, // 3: mcuc.stark.morgan.GetSettingsReply.charge_card_providers:type_name -> mcuc.stark.morgan.Provider
	22, // 4: mcuc.stark.morgan.GetSettingsReply.get_card_providers:type_name -> mcuc.stark.morgan.Provider
	22, // 5: mcuc.stark.morgan.UpdateChargeCardProvidersSettingRequest.providers:type_name -> mcuc.stark.morgan.Provider
	22, // 6: mcuc.stark.morgan.UpdateGetCardProvidersSettingRequest.providers:type_name -> mcuc.stark.morgan.Provider
	28, // 7: mcuc.stark.morgan.TelcoPaymentDetail.telco_name:type_name -> mcuc.groot.TelcoName
	30, // 8: mcuc.stark.morgan.TelcoPaymentDetail.created_at:type_name -> google.protobuf.Timestamp
	30, // 9: mcuc.stark.morgan.TelcoPaymentDetail.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 10: mcuc.stark.morgan.Morgan.CreateTelcoWithdraw:input_type -> mcuc.stark.morgan.CreateTelcoWithdrawRequest
	2,  // 11: mcuc.stark.morgan.Morgan.CreateTelcoTopUp:input_type -> mcuc.stark.morgan.CreateTelcoTopUpRequest
	4,  // 12: mcuc.stark.morgan.Morgan.CancelTelcoWithdraw:input_type -> mcuc.stark.morgan.CancelTelcoWithdrawRequest
	6,  // 13: mcuc.stark.morgan.Morgan.CompleteTelcoTopUp:input_type -> mcuc.stark.morgan.CompleteTelcoTopUpRequest
	8,  // 14: mcuc.stark.morgan.Morgan.ApproveTelcoTopUp:input_type -> mcuc.stark.morgan.ApproveTelcoTopUpRequest
	10, // 15: mcuc.stark.morgan.Morgan.ApproveTelcoWithdraw:input_type -> mcuc.stark.morgan.ApproveTelcoWithdrawRequest
	12, // 16: mcuc.stark.morgan.Morgan.RejectTelcoTopUp:input_type -> mcuc.stark.morgan.RejectTelcoTopUpRequest
	14, // 17: mcuc.stark.morgan.Morgan.RejectTelcoWithdraw:input_type -> mcuc.stark.morgan.RejectTelcoWithdrawRequest
	16, // 18: mcuc.stark.morgan.Morgan.GetSettings:input_type -> mcuc.stark.morgan.GetSettingsRequest
	18, // 19: mcuc.stark.morgan.Morgan.UpdateTopUpAutoApprovalSetting:input_type -> mcuc.stark.morgan.UpdateTopUpAutoApprovalSettingRequest
	20, // 20: mcuc.stark.morgan.Morgan.UpdateUsingThirdPartySetting:input_type -> mcuc.stark.morgan.UpdateUsingThirdPartySettingRequest
	23, // 21: mcuc.stark.morgan.Morgan.UpdateChargeCardProvidersSetting:input_type -> mcuc.stark.morgan.UpdateChargeCardProvidersSettingRequest
	25, // 22: mcuc.stark.morgan.Morgan.UpdateGetCardProvidersSetting:input_type -> mcuc.stark.morgan.UpdateGetCardProvidersSettingRequest
	1,  // 23: mcuc.stark.morgan.Morgan.CreateTelcoWithdraw:output_type -> mcuc.stark.morgan.CreateTelcoWithdrawReply
	3,  // 24: mcuc.stark.morgan.Morgan.CreateTelcoTopUp:output_type -> mcuc.stark.morgan.CreateTelcoTopUpReply
	5,  // 25: mcuc.stark.morgan.Morgan.CancelTelcoWithdraw:output_type -> mcuc.stark.morgan.CancelTelcoWithdrawReply
	7,  // 26: mcuc.stark.morgan.Morgan.CompleteTelcoTopUp:output_type -> mcuc.stark.morgan.CompleteTelcoTopUpReply
	9,  // 27: mcuc.stark.morgan.Morgan.ApproveTelcoTopUp:output_type -> mcuc.stark.morgan.ApproveTelcoTopUpReply
	11, // 28: mcuc.stark.morgan.Morgan.ApproveTelcoWithdraw:output_type -> mcuc.stark.morgan.ApproveTelcoWithdrawReply
	13, // 29: mcuc.stark.morgan.Morgan.RejectTelcoTopUp:output_type -> mcuc.stark.morgan.RejectTelcoTopUpReply
	15, // 30: mcuc.stark.morgan.Morgan.RejectTelcoWithdraw:output_type -> mcuc.stark.morgan.RejectTelcoWithdrawReply
	17, // 31: mcuc.stark.morgan.Morgan.GetSettings:output_type -> mcuc.stark.morgan.GetSettingsReply
	19, // 32: mcuc.stark.morgan.Morgan.UpdateTopUpAutoApprovalSetting:output_type -> mcuc.stark.morgan.UpdateTopUpAutoApprovalSettingReply
	21, // 33: mcuc.stark.morgan.Morgan.UpdateUsingThirdPartySetting:output_type -> mcuc.stark.morgan.UpdateUsingThirdPartySettingReply
	24, // 34: mcuc.stark.morgan.Morgan.UpdateChargeCardProvidersSetting:output_type -> mcuc.stark.morgan.UpdateChargeCardProvidersSettingReply
	26, // 35: mcuc.stark.morgan.Morgan.UpdateGetCardProvidersSetting:output_type -> mcuc.stark.morgan.UpdateGetCardProvidersSettingReply
	23, // [23:36] is the sub-list for method output_type
	10, // [10:23] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_stark_api_morgan_proto_init() }
func file_stark_api_morgan_proto_init() {
	if File_stark_api_morgan_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stark_api_morgan_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTelcoWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTelcoWithdrawReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTelcoTopUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTelcoTopUpReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelTelcoWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelTelcoWithdrawReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteTelcoTopUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteTelcoTopUpReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveTelcoTopUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveTelcoTopUpReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveTelcoWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveTelcoWithdrawReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTelcoTopUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTelcoTopUpReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTelcoWithdrawRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTelcoWithdrawReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSettingsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTopUpAutoApprovalSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTopUpAutoApprovalSettingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUsingThirdPartySettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUsingThirdPartySettingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Provider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChargeCardProvidersSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChargeCardProvidersSettingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGetCardProvidersSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGetCardProvidersSettingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stark_api_morgan_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TelcoPaymentDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stark_api_morgan_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stark_api_morgan_proto_goTypes,
		DependencyIndexes: file_stark_api_morgan_proto_depIdxs,
		MessageInfos:      file_stark_api_morgan_proto_msgTypes,
	}.Build()
	File_stark_api_morgan_proto = out.File
	file_stark_api_morgan_proto_rawDesc = nil
	file_stark_api_morgan_proto_goTypes = nil
	file_stark_api_morgan_proto_depIdxs = nil
}
