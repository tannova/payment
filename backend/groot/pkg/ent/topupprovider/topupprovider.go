// Code generated by entc, DO NOT EDIT.

package topupprovider

import (
	"time"
)

const (
	// Label holds the string label denoting the topupprovider type in the database.
	Label = "top_up_provider"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldPriority holds the string denoting the priority field in the database.
	FieldPriority = "priority"
	// FieldKey holds the string denoting the key field in the database.
	FieldKey = "key"
	// FieldEnabled holds the string denoting the enabled field in the database.
	FieldEnabled = "enabled"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreatedBy holds the string denoting the created_by field in the database.
	FieldCreatedBy = "created_by"
	// FieldUpdatedBy holds the string denoting the updated_by field in the database.
	FieldUpdatedBy = "updated_by"
	// Table holds the table name of the topupprovider in the database.
	Table = "top_up_providers"
)

// Columns holds all SQL columns for topupprovider fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldPriority,
	FieldKey,
	FieldEnabled,
	FieldType,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreatedBy,
	FieldUpdatedBy,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName int64
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(int64) error
	// DefaultPriority holds the default value on creation for the "priority" field.
	DefaultPriority int64
	// PriorityValidator is a validator for the "priority" field. It is called by the builders before save.
	PriorityValidator func(int64) error
	// KeyValidator is a validator for the "key" field. It is called by the builders before save.
	KeyValidator func(string) error
	// DefaultEnabled holds the default value on creation for the "enabled" field.
	DefaultEnabled bool
	// DefaultType holds the default value on creation for the "type" field.
	DefaultType int32
	// TypeValidator is a validator for the "type" field. It is called by the builders before save.
	TypeValidator func(int32) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// CreatedByValidator is a validator for the "created_by" field. It is called by the builders before save.
	CreatedByValidator func(string) error
	// UpdatedByValidator is a validator for the "updated_by" field. It is called by the builders before save.
	UpdatedByValidator func(string) error
)
