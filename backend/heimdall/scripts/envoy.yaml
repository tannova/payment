admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 127.0.0.1, port_value: 8081 }
stats_sinks:
  - name: envoy.stat_sinks.dog_statsd
    typed_config:
      '@type': type.googleapis.com/envoy.config.metrics.v3.DogStatsdSink
      address:
        socket_address:
          address: $DOGSTATSD_HOST_IP
          port_value: 8125
          protocol: UDP
      prefix: heimdall
static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                use_remote_address: true
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: "/dev/stdout"
                      log_format:
                        json_format:
                          authority: '%REQ(:AUTHORITY)%'
                          bytes_received: '%BYTES_RECEIVED%'
                          bytes_sent: '%BYTES_SENT%'
                          duration: '%DURATION%'
                          method: '%REQ(:METHOD)%'
                          path: '%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%'
                          protocol: '%PROTOCOL%'
                          response_code: '%RESPONSE_CODE%'
                          response_code_details: '%RESPONSE_CODE_DETAILS%'
                          response_flags: '%RESPONSE_FLAGS%'
                          grpc_status: '%GRPC_STATUS%'
                          start_time: '%START_TIME%'
                          upstream_host: '%UPSTREAM_HOST%'
                          user_agent: '%REQ(USER-AGENT)%'
                          x_envoy_upstream_service_time: '%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%'
                          x_forwarded_for: '%REQ(X-FORWARDED-FOR)%'
                          x_request_id: '%REQ(X-REQUEST-ID)%'
                          x_envoy_external_address: '%REQ(X-ENVOY-EXTERNAL-ADDRESS)%'
                  - name: envoy.access_loggers.http_grpc
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.grpc.v3.HttpGrpcAccessLogConfig
                      common_config:
                        log_name: heimdall
                        transport_api_version: V3
                        grpc_service:
                          envoy_grpc:
                            cluster_name: nickfury_cluster
                      additional_request_headers_to_log:
                        - x-user-id
                        - x-group-id
                        - x-role-id
                        - x-action-id
                        - x-resource-id
                        - x-module-id
                        - x-envoy-external-address
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: [ "*" ]
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        max_age: "1728000"
                        expose_headers: grpc-status,grpc-message
                      response_headers_to_add:
                        - append: false
                          header:
                            key: x-request-id
                            value: "%REQ(X-REQUEST-ID)%"
                      routes:
                        # Start MyID endpoints
                        - match:
                            prefix: /greyhole.myid.MyID/SignUp
                          route:
                            cluster: shield_cluster
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /greyhole.myid.MyID/SignIn
                          route:
                            cluster: shield_cluster
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /greyhole.myid.MyID/ResendSignInOTP
                          route:
                            cluster: shield_cluster
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /greyhole.myid.MyID/ConfirmSignIn
                          route:
                            cluster: shield_cluster
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /greyhole.myid.MyID/CreatePassword
                          route:
                            cluster: shield_cluster
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /greyhole.myid.MyID/ResendCreatePasswordOTP
                          route:
                            cluster: shield_cluster
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /greyhole.myid.MyID/CreateAccessToken
                          route:
                            cluster: shield_cluster
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /greyhole.myid.MyID/VerifyEmail
                          route:
                            cluster: shield_cluster
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /greyhole.myid.MyID/VerifyPhoneNumber
                          route:
                            cluster: shield_cluster
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /greyhole.myid.MyID/ResetPassword
                          route:
                            cluster: shield_cluster
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /greyhole.myid.MyID/VerifyResetPassword
                          route:
                            cluster: shield_cluster
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /greyhole.myid.MyID/SubmitResetPassword
                          route:
                            cluster: shield_cluster
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: /greyhole.myrole.
                          route:
                            cluster: captain_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            prefix: /greyhole.myid.
                          route:
                            cluster: shield_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        # End MyID endpoints
                        - match:
                            prefix: /natasha.Natasha
                          route:
                            cluster: natasha_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            prefix: /natasha.BlackWidow
                          route:
                            cluster: natasha_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            prefix: /natasha.Romanoff
                          route:
                            cluster: natasha_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            prefix: /mcuc.stark.ultron.Ultron
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            prefix: /mcuc.stark.pepper.Pepper
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            prefix: /mcuc.stark.vision.Vision
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            prefix: /mcuc.stark.tony.Tony
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            prefix: /mcuc.stark.morgan.Morgan
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            prefix: /mcuc.stark.howard.Howard
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            prefix: /hose/
                          route:
                            cluster: falcon_cluster
                            prefix_rewrite: /
                            timeout: 60s
                        - match:
                            prefix: /hose
                          route:
                            cluster: falcon_cluster
                            prefix_rewrite: /
                            timeout: 60s
                        - match:
                            prefix: /greyhole.mylog.MyLog
                          route:
                            cluster: nickfury_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s

                http_filters:
                  - name: envoy.filters.http.grpc_web
                  - name: envoy.filters.http.cors
                  - name: envoy.filters.http.health_check
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                      pass_through_mode: false
                      headers:
                        - exact_match: /status
                          name: :path
                  - name: envoy.filters.http.ext_authz
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      grpc_service:
                        envoy_grpc:
                          cluster_name: shield_cluster
                        timeout: 0.250s
                      transport_api_version: V3
                  - name: envoy.filters.http.ext_authz
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      grpc_service:
                        envoy_grpc:
                          cluster_name: captain_cluster
                        timeout: 5s
                      transport_api_version: V3
                  - name: envoy.filters.http.router
  clusters:
    - name: natasha_cluster
      connect_timeout: 1s
      type: logical_dns
      http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: natasha_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: natasha
                      port_value: 8080

    - name: stark_cluster
      connect_timeout: 1s
      type: logical_dns
      http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: stark_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: stark
                      port_value: 8080

    - name: falcon_cluster
      connect_timeout: 1s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: falcon_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: falcon
                      port_value: 8080

    - name: shield_cluster
      connect_timeout: 1s
      type: logical_dns
      http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: shield_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: shield
                      port_value: 8080

    - name: captain_cluster
      connect_timeout: 1s
      type: logical_dns
      http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: captain_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: captain
                      port_value: 8080

    - name: nickfury_cluster
      connect_timeout: 1s
      type: logical_dns
      http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: nickfury_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: nickfury
                      port_value: 8080