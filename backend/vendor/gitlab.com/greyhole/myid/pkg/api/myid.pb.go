// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: myid/api/myid.proto

package myid

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Status int32

const (
	Status_UNSPECIFIED Status = 0
	Status_INACTIVE    Status = 1
	Status_ACTIVE      Status = 2
	Status_LOCKED      Status = 3
	Status_BANNED      Status = 4 // ... other status if more than
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "INACTIVE",
		2: "ACTIVE",
		3: "LOCKED",
		4: "BANNED",
	}
	Status_value = map[string]int32{
		"UNSPECIFIED": 0,
		"INACTIVE":    1,
		"ACTIVE":      2,
		"LOCKED":      3,
		"BANNED":      4,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_myid_api_myid_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_myid_api_myid_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{0}
}

type SignUpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username        string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password        string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ConfirmPassword string `protobuf:"bytes,3,opt,name=confirm_password,json=confirmPassword,proto3" json:"confirm_password,omitempty"`
	DeviceId        string `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ReferrerId      string `protobuf:"bytes,5,opt,name=referrer_id,json=referrerId,proto3" json:"referrer_id,omitempty"` // safe_id of referrer
}

func (x *SignUpRequest) Reset() {
	*x = SignUpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpRequest) ProtoMessage() {}

func (x *SignUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpRequest.ProtoReflect.Descriptor instead.
func (*SignUpRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{0}
}

func (x *SignUpRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SignUpRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SignUpRequest) GetConfirmPassword() string {
	if x != nil {
		return x.ConfirmPassword
	}
	return ""
}

func (x *SignUpRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SignUpRequest) GetReferrerId() string {
	if x != nil {
		return x.ReferrerId
	}
	return ""
}

type SignUpV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId   string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ReferrerId string `protobuf:"bytes,2,opt,name=referrer_id,json=referrerId,proto3" json:"referrer_id,omitempty"` // safe_id of referrer
	// Types that are assignable to Credential:
	//	*SignUpV2Request_MyId
	//	*SignUpV2Request_Facebook_
	Credential isSignUpV2Request_Credential `protobuf_oneof:"credential"`
}

func (x *SignUpV2Request) Reset() {
	*x = SignUpV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpV2Request) ProtoMessage() {}

func (x *SignUpV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpV2Request.ProtoReflect.Descriptor instead.
func (*SignUpV2Request) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{1}
}

func (x *SignUpV2Request) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SignUpV2Request) GetReferrerId() string {
	if x != nil {
		return x.ReferrerId
	}
	return ""
}

func (m *SignUpV2Request) GetCredential() isSignUpV2Request_Credential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (x *SignUpV2Request) GetMyId() *SignUpV2Request_MyID {
	if x, ok := x.GetCredential().(*SignUpV2Request_MyId); ok {
		return x.MyId
	}
	return nil
}

func (x *SignUpV2Request) GetFacebook() *SignUpV2Request_Facebook {
	if x, ok := x.GetCredential().(*SignUpV2Request_Facebook_); ok {
		return x.Facebook
	}
	return nil
}

type isSignUpV2Request_Credential interface {
	isSignUpV2Request_Credential()
}

type SignUpV2Request_MyId struct {
	MyId *SignUpV2Request_MyID `protobuf:"bytes,3,opt,name=my_id,json=myId,proto3,oneof"`
}

type SignUpV2Request_Facebook_ struct {
	Facebook *SignUpV2Request_Facebook `protobuf:"bytes,4,opt,name=facebook,proto3,oneof"`
}

func (*SignUpV2Request_MyId) isSignUpV2Request_Credential() {}

func (*SignUpV2Request_Facebook_) isSignUpV2Request_Credential() {}

type SignUpReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenInfo *TokenInfo `protobuf:"bytes,1,opt,name=token_info,json=tokenInfo,proto3" json:"token_info,omitempty"`
}

func (x *SignUpReply) Reset() {
	*x = SignUpReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpReply) ProtoMessage() {}

func (x *SignUpReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpReply.ProtoReflect.Descriptor instead.
func (*SignUpReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{2}
}

func (x *SignUpReply) GetTokenInfo() *TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

// deprecated
type SignInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username   string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	DeviceId   string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceName string `protobuf:"bytes,4,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
}

func (x *SignInRequest) Reset() {
	*x = SignInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInRequest) ProtoMessage() {}

func (x *SignInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInRequest.ProtoReflect.Descriptor instead.
func (*SignInRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{3}
}

func (x *SignInRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SignInRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SignInRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SignInRequest) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type SignInV2Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Credential:
	//	*SignInV2Request_MyId
	//	*SignInV2Request_Facebook_
	Credential isSignInV2Request_Credential `protobuf_oneof:"credential"`
	DeviceId   string                       `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceName string                       `protobuf:"bytes,4,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
}

func (x *SignInV2Request) Reset() {
	*x = SignInV2Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInV2Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInV2Request) ProtoMessage() {}

func (x *SignInV2Request) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInV2Request.ProtoReflect.Descriptor instead.
func (*SignInV2Request) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{4}
}

func (m *SignInV2Request) GetCredential() isSignInV2Request_Credential {
	if m != nil {
		return m.Credential
	}
	return nil
}

func (x *SignInV2Request) GetMyId() *SignInV2Request_MyID {
	if x, ok := x.GetCredential().(*SignInV2Request_MyId); ok {
		return x.MyId
	}
	return nil
}

func (x *SignInV2Request) GetFacebook() *SignInV2Request_Facebook {
	if x, ok := x.GetCredential().(*SignInV2Request_Facebook_); ok {
		return x.Facebook
	}
	return nil
}

func (x *SignInV2Request) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SignInV2Request) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

type isSignInV2Request_Credential interface {
	isSignInV2Request_Credential()
}

type SignInV2Request_MyId struct {
	MyId *SignInV2Request_MyID `protobuf:"bytes,1,opt,name=my_id,json=myId,proto3,oneof"`
}

type SignInV2Request_Facebook_ struct {
	Facebook *SignInV2Request_Facebook `protobuf:"bytes,2,opt,name=facebook,proto3,oneof"`
}

func (*SignInV2Request_MyId) isSignInV2Request_Credential() {}

func (*SignInV2Request_Facebook_) isSignInV2Request_Credential() {}

type SignInReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*SignInReply_TokenInfo
	//	*SignInReply_ConfirmOtp
	Result isSignInReply_Result `protobuf_oneof:"result"`
}

func (x *SignInReply) Reset() {
	*x = SignInReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInReply) ProtoMessage() {}

func (x *SignInReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInReply.ProtoReflect.Descriptor instead.
func (*SignInReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{5}
}

func (m *SignInReply) GetResult() isSignInReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SignInReply) GetTokenInfo() *TokenInfo {
	if x, ok := x.GetResult().(*SignInReply_TokenInfo); ok {
		return x.TokenInfo
	}
	return nil
}

func (x *SignInReply) GetConfirmOtp() *OTP {
	if x, ok := x.GetResult().(*SignInReply_ConfirmOtp); ok {
		return x.ConfirmOtp
	}
	return nil
}

type isSignInReply_Result interface {
	isSignInReply_Result()
}

type SignInReply_TokenInfo struct {
	TokenInfo *TokenInfo `protobuf:"bytes,1,opt,name=token_info,json=tokenInfo,proto3,oneof"`
}

type SignInReply_ConfirmOtp struct {
	ConfirmOtp *OTP `protobuf:"bytes,2,opt,name=confirm_otp,json=confirmOtp,proto3,oneof"`
}

func (*SignInReply_TokenInfo) isSignInReply_Result() {}

func (*SignInReply_ConfirmOtp) isSignInReply_Result() {}

type ResendSignInOTPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtpId string `protobuf:"bytes,1,opt,name=otp_id,json=otpId,proto3" json:"otp_id,omitempty"`
}

func (x *ResendSignInOTPRequest) Reset() {
	*x = ResendSignInOTPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendSignInOTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendSignInOTPRequest) ProtoMessage() {}

func (x *ResendSignInOTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendSignInOTPRequest.ProtoReflect.Descriptor instead.
func (*ResendSignInOTPRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{6}
}

func (x *ResendSignInOTPRequest) GetOtpId() string {
	if x != nil {
		return x.OtpId
	}
	return ""
}

type ResendSignInOTPReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfirmOtp *OTP `protobuf:"bytes,2,opt,name=confirm_otp,json=confirmOtp,proto3" json:"confirm_otp,omitempty"`
}

func (x *ResendSignInOTPReply) Reset() {
	*x = ResendSignInOTPReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendSignInOTPReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendSignInOTPReply) ProtoMessage() {}

func (x *ResendSignInOTPReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendSignInOTPReply.ProtoReflect.Descriptor instead.
func (*ResendSignInOTPReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{7}
}

func (x *ResendSignInOTPReply) GetConfirmOtp() *OTP {
	if x != nil {
		return x.ConfirmOtp
	}
	return nil
}

type ConfirmSignInRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtpId string `protobuf:"bytes,1,opt,name=otp_id,json=otpId,proto3" json:"otp_id,omitempty"`
	Otp   string `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
}

func (x *ConfirmSignInRequest) Reset() {
	*x = ConfirmSignInRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmSignInRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmSignInRequest) ProtoMessage() {}

func (x *ConfirmSignInRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmSignInRequest.ProtoReflect.Descriptor instead.
func (*ConfirmSignInRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{8}
}

func (x *ConfirmSignInRequest) GetOtpId() string {
	if x != nil {
		return x.OtpId
	}
	return ""
}

func (x *ConfirmSignInRequest) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

type ConfirmSignInReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenInfo *TokenInfo `protobuf:"bytes,1,opt,name=token_info,json=tokenInfo,proto3" json:"token_info,omitempty"`
}

func (x *ConfirmSignInReply) Reset() {
	*x = ConfirmSignInReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmSignInReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmSignInReply) ProtoMessage() {}

func (x *ConfirmSignInReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmSignInReply.ProtoReflect.Descriptor instead.
func (*ConfirmSignInReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{9}
}

func (x *ConfirmSignInReply) GetTokenInfo() *TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

type CreatePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtpId              string `protobuf:"bytes,1,opt,name=otp_id,json=otpId,proto3" json:"otp_id,omitempty"`
	Otp                string `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
	NewPassword        string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	ConfirmNewPassword string `protobuf:"bytes,4,opt,name=confirm_new_password,json=confirmNewPassword,proto3" json:"confirm_new_password,omitempty"`
}

func (x *CreatePasswordRequest) Reset() {
	*x = CreatePasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePasswordRequest) ProtoMessage() {}

func (x *CreatePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePasswordRequest.ProtoReflect.Descriptor instead.
func (*CreatePasswordRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{10}
}

func (x *CreatePasswordRequest) GetOtpId() string {
	if x != nil {
		return x.OtpId
	}
	return ""
}

func (x *CreatePasswordRequest) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

func (x *CreatePasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *CreatePasswordRequest) GetConfirmNewPassword() string {
	if x != nil {
		return x.ConfirmNewPassword
	}
	return ""
}

type CreateAccessTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdToken string `protobuf:"bytes,1,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
}

func (x *CreateAccessTokenRequest) Reset() {
	*x = CreateAccessTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccessTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccessTokenRequest) ProtoMessage() {}

func (x *CreateAccessTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccessTokenRequest.ProtoReflect.Descriptor instead.
func (*CreateAccessTokenRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{11}
}

func (x *CreateAccessTokenRequest) GetIdToken() string {
	if x != nil {
		return x.IdToken
	}
	return ""
}

type CreateAccessTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *CreateAccessTokenReply) Reset() {
	*x = CreateAccessTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccessTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccessTokenReply) ProtoMessage() {}

func (x *CreateAccessTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccessTokenReply.ProtoReflect.Descriptor instead.
func (*CreateAccessTokenReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{12}
}

func (x *CreateAccessTokenReply) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type MeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        *UserInfo     `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Permissions []*Permission `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
	ModuleIds   []int64       `protobuf:"varint,3,rep,packed,name=module_ids,json=moduleIds,proto3" json:"module_ids,omitempty"`
}

func (x *MeReply) Reset() {
	*x = MeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeReply) ProtoMessage() {}

func (x *MeReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeReply.ProtoReflect.Descriptor instead.
func (*MeReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{13}
}

func (x *MeReply) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *MeReply) GetPermissions() []*Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *MeReply) GetModuleIds() []int64 {
	if x != nil {
		return x.ModuleIds
	}
	return nil
}

type ChangePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPassword    string `protobuf:"bytes,1,opt,name=current_password,json=currentPassword,proto3" json:"current_password,omitempty"`
	NewPassword        string `protobuf:"bytes,2,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	ConfirmNewPassword string `protobuf:"bytes,3,opt,name=confirm_new_password,json=confirmNewPassword,proto3" json:"confirm_new_password,omitempty"`
}

func (x *ChangePasswordRequest) Reset() {
	*x = ChangePasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePasswordRequest) ProtoMessage() {}

func (x *ChangePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePasswordRequest.ProtoReflect.Descriptor instead.
func (*ChangePasswordRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{14}
}

func (x *ChangePasswordRequest) GetCurrentPassword() string {
	if x != nil {
		return x.CurrentPassword
	}
	return ""
}

func (x *ChangePasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *ChangePasswordRequest) GetConfirmNewPassword() string {
	if x != nil {
		return x.ConfirmNewPassword
	}
	return ""
}

type UpdateMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata string `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *UpdateMetadataRequest) Reset() {
	*x = UpdateMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMetadataRequest) ProtoMessage() {}

func (x *UpdateMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateMetadataRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateMetadataRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type UpdateEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UpdateEmailRequest) Reset() {
	*x = UpdateEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailRequest) ProtoMessage() {}

func (x *UpdateEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailRequest.ProtoReflect.Descriptor instead.
func (*UpdateEmailRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UpdateEmailReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*UpdateEmailReply_Otp
	//	*UpdateEmailReply_User
	Result isUpdateEmailReply_Result `protobuf_oneof:"result"`
}

func (x *UpdateEmailReply) Reset() {
	*x = UpdateEmailReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEmailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEmailReply) ProtoMessage() {}

func (x *UpdateEmailReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEmailReply.ProtoReflect.Descriptor instead.
func (*UpdateEmailReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{17}
}

func (m *UpdateEmailReply) GetResult() isUpdateEmailReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *UpdateEmailReply) GetOtp() *OTP {
	if x, ok := x.GetResult().(*UpdateEmailReply_Otp); ok {
		return x.Otp
	}
	return nil
}

func (x *UpdateEmailReply) GetUser() *UserInfo {
	if x, ok := x.GetResult().(*UpdateEmailReply_User); ok {
		return x.User
	}
	return nil
}

type isUpdateEmailReply_Result interface {
	isUpdateEmailReply_Result()
}

type UpdateEmailReply_Otp struct {
	Otp *OTP `protobuf:"bytes,1,opt,name=otp,proto3,oneof"`
}

type UpdateEmailReply_User struct {
	// user info with updated email in case email verification is not required
	User *UserInfo `protobuf:"bytes,2,opt,name=user,proto3,oneof"`
}

func (*UpdateEmailReply_Otp) isUpdateEmailReply_Result() {}

func (*UpdateEmailReply_User) isUpdateEmailReply_Result() {}

type VerifyEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtpId string `protobuf:"bytes,1,opt,name=otp_id,json=otpId,proto3" json:"otp_id,omitempty"`
	Otp   string `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
}

func (x *VerifyEmailRequest) Reset() {
	*x = VerifyEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEmailRequest) ProtoMessage() {}

func (x *VerifyEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyEmailRequest.ProtoReflect.Descriptor instead.
func (*VerifyEmailRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{18}
}

func (x *VerifyEmailRequest) GetOtpId() string {
	if x != nil {
		return x.OtpId
	}
	return ""
}

func (x *VerifyEmailRequest) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

type VerifyEmailReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UserInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *VerifyEmailReply) Reset() {
	*x = VerifyEmailReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyEmailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyEmailReply) ProtoMessage() {}

func (x *VerifyEmailReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyEmailReply.ProtoReflect.Descriptor instead.
func (*VerifyEmailReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{19}
}

func (x *VerifyEmailReply) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type UpdatePhoneNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *UpdatePhoneNumberRequest) Reset() {
	*x = UpdatePhoneNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhoneNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhoneNumberRequest) ProtoMessage() {}

func (x *UpdatePhoneNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhoneNumberRequest.ProtoReflect.Descriptor instead.
func (*UpdatePhoneNumberRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{20}
}

func (x *UpdatePhoneNumberRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type UpdatePhoneNumberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*UpdatePhoneNumberReply_Otp
	//	*UpdatePhoneNumberReply_User
	Result isUpdatePhoneNumberReply_Result `protobuf_oneof:"result"`
}

func (x *UpdatePhoneNumberReply) Reset() {
	*x = UpdatePhoneNumberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePhoneNumberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePhoneNumberReply) ProtoMessage() {}

func (x *UpdatePhoneNumberReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePhoneNumberReply.ProtoReflect.Descriptor instead.
func (*UpdatePhoneNumberReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{21}
}

func (m *UpdatePhoneNumberReply) GetResult() isUpdatePhoneNumberReply_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *UpdatePhoneNumberReply) GetOtp() *OTP {
	if x, ok := x.GetResult().(*UpdatePhoneNumberReply_Otp); ok {
		return x.Otp
	}
	return nil
}

func (x *UpdatePhoneNumberReply) GetUser() *UserInfo {
	if x, ok := x.GetResult().(*UpdatePhoneNumberReply_User); ok {
		return x.User
	}
	return nil
}

type isUpdatePhoneNumberReply_Result interface {
	isUpdatePhoneNumberReply_Result()
}

type UpdatePhoneNumberReply_Otp struct {
	Otp *OTP `protobuf:"bytes,1,opt,name=otp,proto3,oneof"`
}

type UpdatePhoneNumberReply_User struct {
	// user info with updated phone number in case phone number verification is not required
	User *UserInfo `protobuf:"bytes,2,opt,name=user,proto3,oneof"`
}

func (*UpdatePhoneNumberReply_Otp) isUpdatePhoneNumberReply_Result() {}

func (*UpdatePhoneNumberReply_User) isUpdatePhoneNumberReply_Result() {}

type VerifyPhoneNumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtpId string `protobuf:"bytes,1,opt,name=otp_id,json=otpId,proto3" json:"otp_id,omitempty"`
	Otp   string `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
}

func (x *VerifyPhoneNumberRequest) Reset() {
	*x = VerifyPhoneNumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPhoneNumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPhoneNumberRequest) ProtoMessage() {}

func (x *VerifyPhoneNumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPhoneNumberRequest.ProtoReflect.Descriptor instead.
func (*VerifyPhoneNumberRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{22}
}

func (x *VerifyPhoneNumberRequest) GetOtpId() string {
	if x != nil {
		return x.OtpId
	}
	return ""
}

func (x *VerifyPhoneNumberRequest) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

type VerifyPhoneNumberReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *UserInfo `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *VerifyPhoneNumberReply) Reset() {
	*x = VerifyPhoneNumberReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyPhoneNumberReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyPhoneNumberReply) ProtoMessage() {}

func (x *VerifyPhoneNumberReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyPhoneNumberReply.ProtoReflect.Descriptor instead.
func (*VerifyPhoneNumberReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{23}
}

func (x *VerifyPhoneNumberReply) GetUser() *UserInfo {
	if x != nil {
		return x.User
	}
	return nil
}

type ResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to By:
	//	*ResetPasswordRequest_Email
	//	*ResetPasswordRequest_PhoneNumber
	By      isResetPasswordRequest_By `protobuf_oneof:"by"`
	Captcha *Captcha                  `protobuf:"bytes,3,opt,name=captcha,proto3" json:"captcha,omitempty"`
}

func (x *ResetPasswordRequest) Reset() {
	*x = ResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordRequest) ProtoMessage() {}

func (x *ResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{24}
}

func (m *ResetPasswordRequest) GetBy() isResetPasswordRequest_By {
	if m != nil {
		return m.By
	}
	return nil
}

func (x *ResetPasswordRequest) GetEmail() string {
	if x, ok := x.GetBy().(*ResetPasswordRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *ResetPasswordRequest) GetPhoneNumber() string {
	if x, ok := x.GetBy().(*ResetPasswordRequest_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return ""
}

func (x *ResetPasswordRequest) GetCaptcha() *Captcha {
	if x != nil {
		return x.Captcha
	}
	return nil
}

type isResetPasswordRequest_By interface {
	isResetPasswordRequest_By()
}

type ResetPasswordRequest_Email struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"`
}

type ResetPasswordRequest_PhoneNumber struct {
	PhoneNumber string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3,oneof"`
}

func (*ResetPasswordRequest_Email) isResetPasswordRequest_By() {}

func (*ResetPasswordRequest_PhoneNumber) isResetPasswordRequest_By() {}

type ResetPasswordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Otp *OTP `protobuf:"bytes,1,opt,name=otp,proto3" json:"otp,omitempty"`
}

func (x *ResetPasswordReply) Reset() {
	*x = ResetPasswordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetPasswordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetPasswordReply) ProtoMessage() {}

func (x *ResetPasswordReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetPasswordReply.ProtoReflect.Descriptor instead.
func (*ResetPasswordReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{25}
}

func (x *ResetPasswordReply) GetOtp() *OTP {
	if x != nil {
		return x.Otp
	}
	return nil
}

type VerifyResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtpId string `protobuf:"bytes,1,opt,name=otp_id,json=otpId,proto3" json:"otp_id,omitempty"`
	Otp   string `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
}

func (x *VerifyResetPasswordRequest) Reset() {
	*x = VerifyResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyResetPasswordRequest) ProtoMessage() {}

func (x *VerifyResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*VerifyResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{26}
}

func (x *VerifyResetPasswordRequest) GetOtpId() string {
	if x != nil {
		return x.OtpId
	}
	return ""
}

func (x *VerifyResetPasswordRequest) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

type SubmitResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OtpId              string `protobuf:"bytes,1,opt,name=otp_id,json=otpId,proto3" json:"otp_id,omitempty"`
	Otp                string `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
	NewPassword        string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	ConfirmNewPassword string `protobuf:"bytes,4,opt,name=confirm_new_password,json=confirmNewPassword,proto3" json:"confirm_new_password,omitempty"`
}

func (x *SubmitResetPasswordRequest) Reset() {
	*x = SubmitResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitResetPasswordRequest) ProtoMessage() {}

func (x *SubmitResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*SubmitResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{27}
}

func (x *SubmitResetPasswordRequest) GetOtpId() string {
	if x != nil {
		return x.OtpId
	}
	return ""
}

func (x *SubmitResetPasswordRequest) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

func (x *SubmitResetPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *SubmitResetPasswordRequest) GetConfirmNewPassword() string {
	if x != nil {
		return x.ConfirmNewPassword
	}
	return ""
}

// For public use
type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SafeId string `protobuf:"bytes,1,opt,name=safe_id,json=safeId,proto3" json:"safe_id,omitempty"`
	// deprecated
	Username     string               `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Email        string               `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber  string               `protobuf:"bytes,4,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Metadata     string               `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Roles        []*Role              `protobuf:"bytes,6,rep,name=roles,proto3" json:"roles,omitempty"`
	Status       Status               `protobuf:"varint,7,opt,name=status,proto3,enum=greyhole.myid.Status" json:"status,omitempty"`
	LastSignedIn *timestamp.Timestamp `protobuf:"bytes,8,opt,name=last_signed_in,json=lastSignedIn,proto3" json:"last_signed_in,omitempty"`
	CreatedAt    *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Credentials  []*Credential        `protobuf:"bytes,11,rep,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{28}
}

func (x *UserInfo) GetSafeId() string {
	if x != nil {
		return x.SafeId
	}
	return ""
}

func (x *UserInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UserInfo) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *UserInfo) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserInfo) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNSPECIFIED
}

func (x *UserInfo) GetLastSignedIn() *timestamp.Timestamp {
	if x != nil {
		return x.LastSignedIn
	}
	return nil
}

func (x *UserInfo) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserInfo) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserInfo) GetCredentials() []*Credential {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id will be 0 in case myid is configured to hide user_id
	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SafeId string `protobuf:"bytes,2,opt,name=safe_id,json=safeId,proto3" json:"safe_id,omitempty"`
	// deprecated
	Username    string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	IdToken     string `protobuf:"bytes,4,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{29}
}

func (x *TokenInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TokenInfo) GetSafeId() string {
	if x != nil {
		return x.SafeId
	}
	return ""
}

func (x *TokenInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TokenInfo) GetIdToken() string {
	if x != nil {
		return x.IdToken
	}
	return ""
}

func (x *TokenInfo) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

type OTP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*OTP_Waiting
	//	*OTP_Success
	Result isOTP_Result `protobuf_oneof:"result"`
}

func (x *OTP) Reset() {
	*x = OTP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTP) ProtoMessage() {}

func (x *OTP) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTP.ProtoReflect.Descriptor instead.
func (*OTP) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{30}
}

func (m *OTP) GetResult() isOTP_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *OTP) GetWaiting() uint64 {
	if x, ok := x.GetResult().(*OTP_Waiting); ok {
		return x.Waiting
	}
	return 0
}

func (x *OTP) GetSuccess() *OTP_Info {
	if x, ok := x.GetResult().(*OTP_Success); ok {
		return x.Success
	}
	return nil
}

type isOTP_Result interface {
	isOTP_Result()
}

type OTP_Waiting struct {
	Waiting uint64 `protobuf:"varint,1,opt,name=waiting,proto3,oneof"` // seconds
}

type OTP_Success struct {
	Success *OTP_Info `protobuf:"bytes,2,opt,name=success,proto3,oneof"`
}

func (*OTP_Waiting) isOTP_Result() {}

func (*OTP_Success) isOTP_Result() {}

type Captcha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *Captcha) Reset() {
	*x = Captcha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Captcha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Captcha) ProtoMessage() {}

func (x *Captcha) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Captcha.ProtoReflect.Descriptor instead.
func (*Captcha) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{31}
}

func (x *Captcha) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Captcha) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username    string  `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Email       string  `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber string  `protobuf:"bytes,3,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Metadata    string  `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Roles       []*Role `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{32}
}

func (x *CreateUserRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *CreateUserRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *CreateUserRequest) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type CreateUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *CreateUserReply) Reset() {
	*x = CreateUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserReply) ProtoMessage() {}

func (x *CreateUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserReply.ProtoReflect.Descriptor instead.
func (*CreateUserReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{33}
}

func (x *CreateUserReply) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ListUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query       string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	GroupIds    []int64  `protobuf:"varint,2,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids,omitempty"`
	RoleIds     []int64  `protobuf:"varint,3,rep,packed,name=role_ids,json=roleIds,proto3" json:"role_ids,omitempty"`
	Statuses    []Status `protobuf:"varint,4,rep,packed,name=statuses,proto3,enum=greyhole.myid.Status" json:"statuses,omitempty"`
	UserId      int64    `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username    string   `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	Email       string   `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber string   `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Limit       int32    `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	Cursor      int64    `protobuf:"varint,10,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{34}
}

func (x *ListUsersRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListUsersRequest) GetGroupIds() []int64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *ListUsersRequest) GetRoleIds() []int64 {
	if x != nil {
		return x.RoleIds
	}
	return nil
}

func (x *ListUsersRequest) GetStatuses() []Status {
	if x != nil {
		return x.Statuses
	}
	return nil
}

func (x *ListUsersRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListUsersRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ListUsersRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ListUsersRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ListUsersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListUsersRequest) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

type ListUsersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users      []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	NextCursor int64   `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasMore    bool    `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Total      int64   `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListUsersReply) Reset() {
	*x = ListUsersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersReply) ProtoMessage() {}

func (x *ListUsersReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersReply.ProtoReflect.Descriptor instead.
func (*ListUsersReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{35}
}

func (x *ListUsersReply) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersReply) GetNextCursor() int64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *ListUsersReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListUsersReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Changes []*UserChange `protobuf:"bytes,2,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUserRequest) GetChanges() []*UserChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

type UpdateUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UpdateUserReply) Reset() {
	*x = UpdateUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserReply) ProtoMessage() {}

func (x *UpdateUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserReply.ProtoReflect.Descriptor instead.
func (*UpdateUserReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateUserReply) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type LockUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LockUserRequest) Reset() {
	*x = LockUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockUserRequest) ProtoMessage() {}

func (x *LockUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockUserRequest.ProtoReflect.Descriptor instead.
func (*LockUserRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{38}
}

func (x *LockUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LockUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *LockUserReply) Reset() {
	*x = LockUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockUserReply) ProtoMessage() {}

func (x *LockUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockUserReply.ProtoReflect.Descriptor instead.
func (*LockUserReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{39}
}

func (x *LockUserReply) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UnlockUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnlockUserRequest) Reset() {
	*x = UnlockUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockUserRequest) ProtoMessage() {}

func (x *UnlockUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockUserRequest.ProtoReflect.Descriptor instead.
func (*UnlockUserRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{40}
}

func (x *UnlockUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UnlockUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UnlockUserReply) Reset() {
	*x = UnlockUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockUserReply) ProtoMessage() {}

func (x *UnlockUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockUserReply.ProtoReflect.Descriptor instead.
func (*UnlockUserReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{41}
}

func (x *UnlockUserReply) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type BanUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *BanUserRequest) Reset() {
	*x = BanUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserRequest) ProtoMessage() {}

func (x *BanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserRequest.ProtoReflect.Descriptor instead.
func (*BanUserRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{42}
}

func (x *BanUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BanUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *BanUserReply) Reset() {
	*x = BanUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserReply) ProtoMessage() {}

func (x *BanUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserReply.ProtoReflect.Descriptor instead.
func (*BanUserReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{43}
}

func (x *BanUserReply) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UnbanUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnbanUserRequest) Reset() {
	*x = UnbanUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanUserRequest) ProtoMessage() {}

func (x *UnbanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanUserRequest.ProtoReflect.Descriptor instead.
func (*UnbanUserRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{44}
}

func (x *UnbanUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UnbanUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UnbanUserReply) Reset() {
	*x = UnbanUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanUserReply) ProtoMessage() {}

func (x *UnbanUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanUserReply.ProtoReflect.Descriptor instead.
func (*UnbanUserReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{45}
}

func (x *UnbanUserReply) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{46}
}

func (x *GetUserRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetUserReply) Reset() {
	*x = GetUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserReply) ProtoMessage() {}

func (x *GetUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserReply.ProtoReflect.Descriptor instead.
func (*GetUserReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{47}
}

func (x *GetUserReply) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type ResendCreatePasswordOTPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ResendCreatePasswordOTPRequest) Reset() {
	*x = ResendCreatePasswordOTPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendCreatePasswordOTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendCreatePasswordOTPRequest) ProtoMessage() {}

func (x *ResendCreatePasswordOTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendCreatePasswordOTPRequest.ProtoReflect.Descriptor instead.
func (*ResendCreatePasswordOTPRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{48}
}

func (x *ResendCreatePasswordOTPRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ResendCreatePasswordOTPReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResendCreatePasswordOTPReply) Reset() {
	*x = ResendCreatePasswordOTPReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendCreatePasswordOTPReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendCreatePasswordOTPReply) ProtoMessage() {}

func (x *ResendCreatePasswordOTPReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendCreatePasswordOTPReply.ProtoReflect.Descriptor instead.
func (*ResendCreatePasswordOTPReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{49}
}

type GetUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{50}
}

func (x *GetUsersRequest) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type GetUsersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetUsersReply) Reset() {
	*x = GetUsersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersReply) ProtoMessage() {}

func (x *GetUsersReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersReply.ProtoReflect.Descriptor instead.
func (*GetUsersReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{51}
}

func (x *GetUsersReply) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetUserIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SafeIds []string `protobuf:"bytes,1,rep,name=safe_ids,json=safeIds,proto3" json:"safe_ids,omitempty"`
}

func (x *GetUserIDsRequest) Reset() {
	*x = GetUserIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIDsRequest) ProtoMessage() {}

func (x *GetUserIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIDsRequest.ProtoReflect.Descriptor instead.
func (*GetUserIDsRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{52}
}

func (x *GetUserIDsRequest) GetSafeIds() []string {
	if x != nil {
		return x.SafeIds
	}
	return nil
}

type GetUserIDsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds map[string]int64 `protobuf:"bytes,1,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserIDsReply) Reset() {
	*x = GetUserIDsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserIDsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserIDsReply) ProtoMessage() {}

func (x *GetUserIDsReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserIDsReply.ProtoReflect.Descriptor instead.
func (*GetUserIDsReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{53}
}

func (x *GetUserIDsReply) GetUserIds() map[string]int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type GetUsersByUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Usernames []string `protobuf:"bytes,1,rep,name=usernames,proto3" json:"usernames,omitempty"`
}

func (x *GetUsersByUsernameRequest) Reset() {
	*x = GetUsersByUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersByUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByUsernameRequest) ProtoMessage() {}

func (x *GetUsersByUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByUsernameRequest.ProtoReflect.Descriptor instead.
func (*GetUsersByUsernameRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{54}
}

func (x *GetUsersByUsernameRequest) GetUsernames() []string {
	if x != nil {
		return x.Usernames
	}
	return nil
}

type GetUsersByUsernameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users map[string]*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetUsersByUsernameReply) Reset() {
	*x = GetUsersByUsernameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersByUsernameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByUsernameReply) ProtoMessage() {}

func (x *GetUsersByUsernameReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByUsernameReply.ProtoReflect.Descriptor instead.
func (*GetUsersByUsernameReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{55}
}

func (x *GetUsersByUsernameReply) GetUsers() map[string]*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SafeId string `protobuf:"bytes,2,opt,name=safe_id,json=safeId,proto3" json:"safe_id,omitempty"`
	// deprecated
	Username     string               `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Email        string               `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber  string               `protobuf:"bytes,5,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Roles        []*Role              `protobuf:"bytes,6,rep,name=roles,proto3" json:"roles,omitempty"`
	Metadata     string               `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Status       Status               `protobuf:"varint,8,opt,name=status,proto3,enum=greyhole.myid.Status" json:"status,omitempty"`
	UniversalId  string               `protobuf:"bytes,9,opt,name=universal_id,json=universalId,proto3" json:"universal_id,omitempty"`
	CreatedAt    *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	LastSignedIn *timestamp.Timestamp `protobuf:"bytes,11,opt,name=last_signed_in,json=lastSignedIn,proto3" json:"last_signed_in,omitempty"`
	UpdatedAt    *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Credentials  []*Credential        `protobuf:"bytes,14,rep,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{56}
}

func (x *User) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *User) GetSafeId() string {
	if x != nil {
		return x.SafeId
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *User) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *User) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *User) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNSPECIFIED
}

func (x *User) GetUniversalId() string {
	if x != nil {
		return x.UniversalId
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetLastSignedIn() *timestamp.Timestamp {
	if x != nil {
		return x.LastSignedIn
	}
	return nil
}

func (x *User) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetCredentials() []*Credential {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId int64 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	RoleId  int64 `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{57}
}

func (x *Role) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *Role) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type Roles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *Roles) Reset() {
	*x = Roles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Roles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Roles) ProtoMessage() {}

func (x *Roles) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Roles.ProtoReflect.Descriptor instead.
func (*Roles) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{58}
}

func (x *Roles) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UserChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Field:
	//	*UserChange_Email
	//	*UserChange_PhoneNumber
	//	*UserChange_Roles
	//	*UserChange_Metadata
	Field isUserChange_Field `protobuf_oneof:"field"`
}

func (x *UserChange) Reset() {
	*x = UserChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserChange) ProtoMessage() {}

func (x *UserChange) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserChange.ProtoReflect.Descriptor instead.
func (*UserChange) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{59}
}

func (m *UserChange) GetField() isUserChange_Field {
	if m != nil {
		return m.Field
	}
	return nil
}

func (x *UserChange) GetEmail() string {
	if x, ok := x.GetField().(*UserChange_Email); ok {
		return x.Email
	}
	return ""
}

func (x *UserChange) GetPhoneNumber() string {
	if x, ok := x.GetField().(*UserChange_PhoneNumber); ok {
		return x.PhoneNumber
	}
	return ""
}

func (x *UserChange) GetRoles() *Roles {
	if x, ok := x.GetField().(*UserChange_Roles); ok {
		return x.Roles
	}
	return nil
}

func (x *UserChange) GetMetadata() string {
	if x, ok := x.GetField().(*UserChange_Metadata); ok {
		return x.Metadata
	}
	return ""
}

type isUserChange_Field interface {
	isUserChange_Field()
}

type UserChange_Email struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"`
}

type UserChange_PhoneNumber struct {
	PhoneNumber string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3,oneof"`
}

type UserChange_Roles struct {
	Roles *Roles `protobuf:"bytes,3,opt,name=roles,proto3,oneof"`
}

type UserChange_Metadata struct {
	Metadata string `protobuf:"bytes,4,opt,name=metadata,proto3,oneof"`
}

func (*UserChange_Email) isUserChange_Field() {}

func (*UserChange_PhoneNumber) isUserChange_Field() {}

func (*UserChange_Roles) isUserChange_Field() {}

func (*UserChange_Metadata) isUserChange_Field() {}

type Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Actions []*Action `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *Permission) Reset() {
	*x = Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Permission) ProtoMessage() {}

func (x *Permission) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Permission.ProtoReflect.Descriptor instead.
func (*Permission) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{60}
}

func (x *Permission) GetActions() []*Action {
	if x != nil {
		return x.Actions
	}
	return nil
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{61}
}

func (x *Resource) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Resource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Resource) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64     `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string    `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Resource    *Resource `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{62}
}

func (x *Action) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Action) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Action) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Action) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ResetResendOTPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ResetResendOTPRequest) Reset() {
	*x = ResetResendOTPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetResendOTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetResendOTPRequest) ProtoMessage() {}

func (x *ResetResendOTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetResendOTPRequest.ProtoReflect.Descriptor instead.
func (*ResetResendOTPRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{63}
}

func (x *ResetResendOTPRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResetResendOTPReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ResetResendOTPReply) Reset() {
	*x = ResetResendOTPReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetResendOTPReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetResendOTPReply) ProtoMessage() {}

func (x *ResetResendOTPReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetResendOTPReply.ProtoReflect.Descriptor instead.
func (*ResetResendOTPReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{64}
}

func (x *ResetResendOTPReply) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type IsUserBannedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IsUserBannedRequest) Reset() {
	*x = IsUserBannedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserBannedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserBannedRequest) ProtoMessage() {}

func (x *IsUserBannedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserBannedRequest.ProtoReflect.Descriptor instead.
func (*IsUserBannedRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{65}
}

func (x *IsUserBannedRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IsUserBannedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsBanned bool `protobuf:"varint,1,opt,name=is_banned,json=isBanned,proto3" json:"is_banned,omitempty"`
}

func (x *IsUserBannedReply) Reset() {
	*x = IsUserBannedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserBannedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserBannedReply) ProtoMessage() {}

func (x *IsUserBannedReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserBannedReply.ProtoReflect.Descriptor instead.
func (*IsUserBannedReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{66}
}

func (x *IsUserBannedReply) GetIsBanned() bool {
	if x != nil {
		return x.IsBanned
	}
	return false
}

type IsUserLockedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IsUserLockedRequest) Reset() {
	*x = IsUserLockedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserLockedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserLockedRequest) ProtoMessage() {}

func (x *IsUserLockedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserLockedRequest.ProtoReflect.Descriptor instead.
func (*IsUserLockedRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{67}
}

func (x *IsUserLockedRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type IsUserLockedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocked bool `protobuf:"varint,1,opt,name=is_locked,json=isLocked,proto3" json:"is_locked,omitempty"`
}

func (x *IsUserLockedReply) Reset() {
	*x = IsUserLockedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserLockedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserLockedReply) ProtoMessage() {}

func (x *IsUserLockedReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserLockedReply.ProtoReflect.Descriptor instead.
func (*IsUserLockedReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{68}
}

func (x *IsUserLockedReply) GetIsLocked() bool {
	if x != nil {
		return x.IsLocked
	}
	return false
}

type Credential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Method:
	//	*Credential_MyId
	//	*Credential_Facebook_
	Method isCredential_Method `protobuf_oneof:"method"`
}

func (x *Credential) Reset() {
	*x = Credential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{69}
}

func (m *Credential) GetMethod() isCredential_Method {
	if m != nil {
		return m.Method
	}
	return nil
}

func (x *Credential) GetMyId() *Credential_MyID {
	if x, ok := x.GetMethod().(*Credential_MyId); ok {
		return x.MyId
	}
	return nil
}

func (x *Credential) GetFacebook() *Credential_Facebook {
	if x, ok := x.GetMethod().(*Credential_Facebook_); ok {
		return x.Facebook
	}
	return nil
}

type isCredential_Method interface {
	isCredential_Method()
}

type Credential_MyId struct {
	MyId *Credential_MyID `protobuf:"bytes,1,opt,name=my_id,json=myId,proto3,oneof"`
}

type Credential_Facebook_ struct {
	Facebook *Credential_Facebook `protobuf:"bytes,2,opt,name=facebook,proto3,oneof"`
}

func (*Credential_MyId) isCredential_Method() {}

func (*Credential_Facebook_) isCredential_Method() {}

type ListLoginEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Cursor int64 `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *ListLoginEventsRequest) Reset() {
	*x = ListLoginEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoginEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoginEventsRequest) ProtoMessage() {}

func (x *ListLoginEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoginEventsRequest.ProtoReflect.Descriptor instead.
func (*ListLoginEventsRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{70}
}

func (x *ListLoginEventsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListLoginEventsRequest) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

type ListLoginEventsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events     []*LoginEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	NextCursor int64         `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasMore    bool          `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Total      int64         `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListLoginEventsReply) Reset() {
	*x = ListLoginEventsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLoginEventsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLoginEventsReply) ProtoMessage() {}

func (x *ListLoginEventsReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLoginEventsReply.ProtoReflect.Descriptor instead.
func (*ListLoginEventsReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{71}
}

func (x *ListLoginEventsReply) GetEvents() []*LoginEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ListLoginEventsReply) GetNextCursor() int64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *ListLoginEventsReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListLoginEventsReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type LoginEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId     int64                `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId   string               `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceName string               `protobuf:"bytes,4,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	CreatedAt  *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *LoginEvent) Reset() {
	*x = LoginEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginEvent) ProtoMessage() {}

func (x *LoginEvent) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginEvent.ProtoReflect.Descriptor instead.
func (*LoginEvent) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{72}
}

func (x *LoginEvent) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LoginEvent) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LoginEvent) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *LoginEvent) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *LoginEvent) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ListRegisterEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Cursor int64 `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
}

func (x *ListRegisterEventsRequest) Reset() {
	*x = ListRegisterEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRegisterEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegisterEventsRequest) ProtoMessage() {}

func (x *ListRegisterEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegisterEventsRequest.ProtoReflect.Descriptor instead.
func (*ListRegisterEventsRequest) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{73}
}

func (x *ListRegisterEventsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRegisterEventsRequest) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

type ListRegisterEventsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events     []*RegisterEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	NextCursor int64            `protobuf:"varint,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasMore    bool             `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Total      int64            `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListRegisterEventsReply) Reset() {
	*x = ListRegisterEventsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRegisterEventsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRegisterEventsReply) ProtoMessage() {}

func (x *ListRegisterEventsReply) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRegisterEventsReply.ProtoReflect.Descriptor instead.
func (*ListRegisterEventsReply) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{74}
}

func (x *ListRegisterEventsReply) GetEvents() []*RegisterEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ListRegisterEventsReply) GetNextCursor() int64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *ListRegisterEventsReply) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *ListRegisterEventsReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type RegisterEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    int64                `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *RegisterEvent) Reset() {
	*x = RegisterEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterEvent) ProtoMessage() {}

func (x *RegisterEvent) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterEvent.ProtoReflect.Descriptor instead.
func (*RegisterEvent) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{75}
}

func (x *RegisterEvent) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RegisterEvent) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RegisterEvent) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type SignUpV2Request_MyID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username        string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password        string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ConfirmPassword string `protobuf:"bytes,3,opt,name=confirm_password,json=confirmPassword,proto3" json:"confirm_password,omitempty"`
}

func (x *SignUpV2Request_MyID) Reset() {
	*x = SignUpV2Request_MyID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpV2Request_MyID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpV2Request_MyID) ProtoMessage() {}

func (x *SignUpV2Request_MyID) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpV2Request_MyID.ProtoReflect.Descriptor instead.
func (*SignUpV2Request_MyID) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{1, 0}
}

func (x *SignUpV2Request_MyID) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SignUpV2Request_MyID) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SignUpV2Request_MyID) GetConfirmPassword() string {
	if x != nil {
		return x.ConfirmPassword
	}
	return ""
}

type SignUpV2Request_Facebook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SignUpV2Request_Facebook) Reset() {
	*x = SignUpV2Request_Facebook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUpV2Request_Facebook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUpV2Request_Facebook) ProtoMessage() {}

func (x *SignUpV2Request_Facebook) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUpV2Request_Facebook.ProtoReflect.Descriptor instead.
func (*SignUpV2Request_Facebook) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{1, 1}
}

func (x *SignUpV2Request_Facebook) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SignInV2Request_MyID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *SignInV2Request_MyID) Reset() {
	*x = SignInV2Request_MyID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInV2Request_MyID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInV2Request_MyID) ProtoMessage() {}

func (x *SignInV2Request_MyID) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInV2Request_MyID.ProtoReflect.Descriptor instead.
func (*SignInV2Request_MyID) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{4, 0}
}

func (x *SignInV2Request_MyID) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SignInV2Request_MyID) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type SignInV2Request_Facebook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *SignInV2Request_Facebook) Reset() {
	*x = SignInV2Request_Facebook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInV2Request_Facebook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInV2Request_Facebook) ProtoMessage() {}

func (x *SignInV2Request_Facebook) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInV2Request_Facebook.ProtoReflect.Descriptor instead.
func (*SignInV2Request_Facebook) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{4, 1}
}

func (x *SignInV2Request_Facebook) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type OTP_Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Recipient string `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Expiry    uint64 `protobuf:"varint,3,opt,name=expiry,proto3" json:"expiry,omitempty"` // seconds
}

func (x *OTP_Info) Reset() {
	*x = OTP_Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTP_Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTP_Info) ProtoMessage() {}

func (x *OTP_Info) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTP_Info.ProtoReflect.Descriptor instead.
func (*OTP_Info) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{30, 0}
}

func (x *OTP_Info) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OTP_Info) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *OTP_Info) GetExpiry() uint64 {
	if x != nil {
		return x.Expiry
	}
	return 0
}

type Credential_MyID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *Credential_MyID) Reset() {
	*x = Credential_MyID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential_MyID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential_MyID) ProtoMessage() {}

func (x *Credential_MyID) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential_MyID.ProtoReflect.Descriptor instead.
func (*Credential_MyID) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{69, 0}
}

func (x *Credential_MyID) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type Credential_Facebook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FbId string `protobuf:"bytes,1,opt,name=fb_id,json=fbId,proto3" json:"fb_id,omitempty"`
}

func (x *Credential_Facebook) Reset() {
	*x = Credential_Facebook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_myid_api_myid_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential_Facebook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential_Facebook) ProtoMessage() {}

func (x *Credential_Facebook) ProtoReflect() protoreflect.Message {
	mi := &file_myid_api_myid_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential_Facebook.ProtoReflect.Descriptor instead.
func (*Credential_Facebook) Descriptor() ([]byte, []int) {
	return file_myid_api_myid_proto_rawDescGZIP(), []int{69, 1}
}

func (x *Credential_Facebook) GetFbId() string {
	if x != nil {
		return x.FbId
	}
	return ""
}

var File_myid_api_myid_proto protoreflect.FileDescriptor

var file_myid_api_myid_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6d, 0x79, 0x69, 0x64, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x79, 0x69, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6d, 0x79, 0x69, 0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x0d,
	0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x49, 0x64, 0x22, 0xf2,
	0x02, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x3a, 0x0a, 0x05, 0x6d, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4d, 0x79, 0x49, 0x44, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x79, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x08,
	0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x55, 0x70, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x48, 0x00, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x1a, 0x69, 0x0a, 0x04, 0x4d, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x20,
	0x0a, 0x08, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x42, 0x11, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x03,
	0xf8, 0x42, 0x01, 0x22, 0x46, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x37, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x85, 0x01, 0x0a, 0x0d,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xc7, 0x02, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x56, 0x32,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x6d, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x56, 0x32, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79, 0x49, 0x44, 0x48, 0x00, 0x52, 0x04, 0x6d,
	0x79, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65,
	0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x56, 0x32, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x48, 0x00,
	0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x3e, 0x0a, 0x04, 0x4d, 0x79, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x20, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x11, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x03, 0xf8, 0x42, 0x01, 0x22, 0x89, 0x01,
	0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a,
	0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69,
	0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x35, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x5f, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x4f, 0x54,
	0x50, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4f, 0x74, 0x70, 0x42,
	0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2f, 0x0a, 0x16, 0x52, 0x65, 0x73,
	0x65, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x74, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x74, 0x70, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x14, 0x52, 0x65,
	0x73, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x33, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6f, 0x74,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f,
	0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x4f, 0x54, 0x50, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x4f, 0x74, 0x70, 0x22, 0x3f, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x6f, 0x74, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x74, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x22, 0x4d, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x37,
	0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79,
	0x69, 0x64, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x95, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x74, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x74, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65,
	0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x30, 0x0a,
	0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x35, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x3b, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b,
	0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69,
	0x64, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x49, 0x64, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x15, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6e, 0x65, 0x77, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x33, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x22, 0x73, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6d, 0x79, 0x69, 0x64, 0x2e, 0x4f, 0x54, 0x50, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x12,
	0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x42, 0x08,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3d, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x6f, 0x74, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x74, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x22, 0x3f, 0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x65, 0x79,
	0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x3d, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x79, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x26, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x4f,
	0x54, 0x50, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f,
	0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x43, 0x0a, 0x18, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x6f, 0x74, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x74, 0x70, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x22, 0x45, 0x0a, 0x16, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x2b, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x8b,
	0x01, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x23, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65,
	0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x52, 0x07, 0x63,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x42, 0x04, 0x0a, 0x02, 0x62, 0x79, 0x22, 0x3a, 0x0a, 0x12,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x24, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e,
	0x4f, 0x54, 0x50, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x22, 0x57, 0x0a, 0x1a, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x06, 0x6f, 0x74, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x05, 0x6f, 0x74, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x6f, 0x74,
	0x70, 0x22, 0xac, 0x01, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1e, 0x0a, 0x06, 0x6f, 0x74, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x6f, 0x74, 0x70, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x6f, 0x74, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x65, 0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0xe3, 0x03, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x61, 0x66, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79,
	0x69, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x5f, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x49, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x97, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x61, 0x66, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xae, 0x01, 0x0a, 0x03, 0x4f, 0x54, 0x50, 0x12, 0x1a, 0x0a, 0x07, 0x77, 0x61, 0x69, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x07, 0x77, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65,
	0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x4f, 0x54, 0x50, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x4c, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x3f, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x12, 0x17, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x05, 0x72, 0x6f, 0x6c,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68,
	0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65,
	0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x22, 0xaf, 0x02, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x49, 0x64, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65,
	0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x22, 0x8d, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x61, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x33, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69,
	0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x2a, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a,
	0x0d, 0x4c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67,
	0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2c, 0x0a, 0x11, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0f, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x29, 0x0a, 0x0e, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x0c,
	0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x65,
	0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2b, 0x0a, 0x10, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x39, 0x0a, 0x0e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79,
	0x69, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x29, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x22, 0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x39, 0x0a, 0x1e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c,
	0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x36, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x22, 0x3a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x22, 0x3a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08,
	0x01, 0x10, 0x14, 0x52, 0x07, 0x73, 0x61, 0x66, 0x65, 0x49, 0x64, 0x73, 0x22, 0x95, 0x01, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x46, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79,
	0x69, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x43, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0xb1, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x47, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6d, 0x79, 0x69, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x4d,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9b, 0x04,
	0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x61, 0x66, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67,
	0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6d, 0x79, 0x69, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x6e, 0x69, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64,
	0x5f, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x49, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d,
	0x79, 0x69, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x0b,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22, 0x3a, 0x0a, 0x04, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x05, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x29, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x07, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0x3d, 0x0a, 0x0a,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72,
	0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x50, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01,
	0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x22, 0x30, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65,
	0x6e, 0x64, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x65, 0x6e, 0x64, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x65,
	0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x13, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x11, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x22, 0x2e, 0x0a, 0x13, 0x49, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x11, 0x49, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x05, 0x6d, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f,
	0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x2e, 0x4d, 0x79, 0x49, 0x44, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x79, 0x49, 0x64, 0x12,
	0x40, 0x0a, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69,
	0x64, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x48, 0x00, 0x52, 0x08, 0x66, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x1a, 0x22, 0x0a, 0x04, 0x4d, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x1f, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x12, 0x13, 0x0a, 0x05, 0x66, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x62, 0x49, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x22, 0x46, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x9b, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69,
	0x64, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xae, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x49, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x22, 0xa1, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x34,
	0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x73, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x2a, 0x4b, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02,
	0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x04, 0x32, 0xbf, 0x0c, 0x0a, 0x04, 0x4d, 0x79, 0x49,
	0x44, 0x12, 0x44, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x12, 0x1c, 0x2e, 0x67, 0x72,
	0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x55, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x65, 0x79,
	0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69,
	0x64, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x08, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x56, 0x32, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x65, 0x79,
	0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70,
	0x56, 0x32, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x65, 0x79,
	0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x56, 0x32, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d,
	0x79, 0x69, 0x64, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x56, 0x32, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d,
	0x79, 0x69, 0x64, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x5f, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x4f, 0x54, 0x50, 0x12, 0x25, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x72,
	0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x65,
	0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x59, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x12, 0x23, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d,
	0x79, 0x69, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68,
	0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x07, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x2e, 0x67,
	0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x27, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69,
	0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x72, 0x65,
	0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x02, 0x4d, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x16, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69,
	0x64, 0x2e, 0x4d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x2e,
	0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x24, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21,
	0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69,
	0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x21, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d,
	0x79, 0x69, 0x64, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27,
	0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f,
	0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x65, 0x0a, 0x11, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65,
	0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68,
	0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x5a, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x2e, 0x67, 0x72, 0x65, 0x79,
	0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5a,
	0x0a, 0x13, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65,
	0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0xbf, 0x08, 0x0a, 0x0e, 0x54,
	0x68, 0x65, 0x43, 0x6f, 0x66, 0x66, 0x65, 0x65, 0x48, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x67, 0x72,
	0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a,
	0x09, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x67, 0x72, 0x65,
	0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x72,
	0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68,
	0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x65,
	0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x08, 0x4c, 0x6f,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x4e, 0x0a, 0x0a, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79,
	0x69, 0x64, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x07, 0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1d, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e,
	0x42, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x42,
	0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x09, 0x55,
	0x6e, 0x62, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68,
	0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x65, 0x79,
	0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x45, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d,
	0x79, 0x69, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79,
	0x69, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x77, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x54, 0x50, 0x12, 0x2d, 0x2e, 0x67, 0x72, 0x65,
	0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e,
	0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f,
	0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x67, 0x72, 0x65, 0x79,
	0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x54,
	0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6d, 0x79, 0x69, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6d, 0x79, 0x69, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x5c, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x6e,
	0x64, 0x4f, 0x54, 0x50, 0x12, 0x24, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64,
	0x4f, 0x54, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x67, 0x72, 0x65,
	0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x4f, 0x54, 0x50, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x54, 0x0a, 0x0c, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x12, 0x22, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64,
	0x2e, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e,
	0x6d, 0x79, 0x69, 0x64, 0x2e, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x54, 0x0a, 0x0c, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x22, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c,
	0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x72, 0x65,
	0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x49, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0x8c, 0x02, 0x0a,
	0x08, 0x57, 0x61, 0x69, 0x74, 0x72, 0x65, 0x73, 0x73, 0x12, 0x48, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65,
	0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65,
	0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x4e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x73, 0x12, 0x20, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69,
	0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d,
	0x79, 0x69, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x66, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x2e, 0x67, 0x72, 0x65, 0x79,
	0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d,
	0x79, 0x69, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xd5, 0x01, 0x0a, 0x08,
	0x43, 0x6f, 0x6c, 0x64, 0x42, 0x72, 0x65, 0x77, 0x12, 0x5f, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x67, 0x72,
	0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79,
	0x69, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x12, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x28, 0x2e, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x67, 0x72, 0x65, 0x79,
	0x68, 0x6f, 0x6c, 0x65, 0x2e, 0x6d, 0x79, 0x69, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x67, 0x72, 0x65, 0x79, 0x68, 0x6f, 0x6c, 0x65, 0x2f, 0x6d, 0x79, 0x69, 0x64, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x3b, 0x6d, 0x79, 0x69, 0x64, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_myid_api_myid_proto_rawDescOnce sync.Once
	file_myid_api_myid_proto_rawDescData = file_myid_api_myid_proto_rawDesc
)

func file_myid_api_myid_proto_rawDescGZIP() []byte {
	file_myid_api_myid_proto_rawDescOnce.Do(func() {
		file_myid_api_myid_proto_rawDescData = protoimpl.X.CompressGZIP(file_myid_api_myid_proto_rawDescData)
	})
	return file_myid_api_myid_proto_rawDescData
}

var file_myid_api_myid_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_myid_api_myid_proto_msgTypes = make([]protoimpl.MessageInfo, 85)
var file_myid_api_myid_proto_goTypes = []interface{}{
	(Status)(0),                            // 0: greyhole.myid.Status
	(*SignUpRequest)(nil),                  // 1: greyhole.myid.SignUpRequest
	(*SignUpV2Request)(nil),                // 2: greyhole.myid.SignUpV2Request
	(*SignUpReply)(nil),                    // 3: greyhole.myid.SignUpReply
	(*SignInRequest)(nil),                  // 4: greyhole.myid.SignInRequest
	(*SignInV2Request)(nil),                // 5: greyhole.myid.SignInV2Request
	(*SignInReply)(nil),                    // 6: greyhole.myid.SignInReply
	(*ResendSignInOTPRequest)(nil),         // 7: greyhole.myid.ResendSignInOTPRequest
	(*ResendSignInOTPReply)(nil),           // 8: greyhole.myid.ResendSignInOTPReply
	(*ConfirmSignInRequest)(nil),           // 9: greyhole.myid.ConfirmSignInRequest
	(*ConfirmSignInReply)(nil),             // 10: greyhole.myid.ConfirmSignInReply
	(*CreatePasswordRequest)(nil),          // 11: greyhole.myid.CreatePasswordRequest
	(*CreateAccessTokenRequest)(nil),       // 12: greyhole.myid.CreateAccessTokenRequest
	(*CreateAccessTokenReply)(nil),         // 13: greyhole.myid.CreateAccessTokenReply
	(*MeReply)(nil),                        // 14: greyhole.myid.MeReply
	(*ChangePasswordRequest)(nil),          // 15: greyhole.myid.ChangePasswordRequest
	(*UpdateMetadataRequest)(nil),          // 16: greyhole.myid.UpdateMetadataRequest
	(*UpdateEmailRequest)(nil),             // 17: greyhole.myid.UpdateEmailRequest
	(*UpdateEmailReply)(nil),               // 18: greyhole.myid.UpdateEmailReply
	(*VerifyEmailRequest)(nil),             // 19: greyhole.myid.VerifyEmailRequest
	(*VerifyEmailReply)(nil),               // 20: greyhole.myid.VerifyEmailReply
	(*UpdatePhoneNumberRequest)(nil),       // 21: greyhole.myid.UpdatePhoneNumberRequest
	(*UpdatePhoneNumberReply)(nil),         // 22: greyhole.myid.UpdatePhoneNumberReply
	(*VerifyPhoneNumberRequest)(nil),       // 23: greyhole.myid.VerifyPhoneNumberRequest
	(*VerifyPhoneNumberReply)(nil),         // 24: greyhole.myid.VerifyPhoneNumberReply
	(*ResetPasswordRequest)(nil),           // 25: greyhole.myid.ResetPasswordRequest
	(*ResetPasswordReply)(nil),             // 26: greyhole.myid.ResetPasswordReply
	(*VerifyResetPasswordRequest)(nil),     // 27: greyhole.myid.VerifyResetPasswordRequest
	(*SubmitResetPasswordRequest)(nil),     // 28: greyhole.myid.SubmitResetPasswordRequest
	(*UserInfo)(nil),                       // 29: greyhole.myid.UserInfo
	(*TokenInfo)(nil),                      // 30: greyhole.myid.TokenInfo
	(*OTP)(nil),                            // 31: greyhole.myid.OTP
	(*Captcha)(nil),                        // 32: greyhole.myid.Captcha
	(*CreateUserRequest)(nil),              // 33: greyhole.myid.CreateUserRequest
	(*CreateUserReply)(nil),                // 34: greyhole.myid.CreateUserReply
	(*ListUsersRequest)(nil),               // 35: greyhole.myid.ListUsersRequest
	(*ListUsersReply)(nil),                 // 36: greyhole.myid.ListUsersReply
	(*UpdateUserRequest)(nil),              // 37: greyhole.myid.UpdateUserRequest
	(*UpdateUserReply)(nil),                // 38: greyhole.myid.UpdateUserReply
	(*LockUserRequest)(nil),                // 39: greyhole.myid.LockUserRequest
	(*LockUserReply)(nil),                  // 40: greyhole.myid.LockUserReply
	(*UnlockUserRequest)(nil),              // 41: greyhole.myid.UnlockUserRequest
	(*UnlockUserReply)(nil),                // 42: greyhole.myid.UnlockUserReply
	(*BanUserRequest)(nil),                 // 43: greyhole.myid.BanUserRequest
	(*BanUserReply)(nil),                   // 44: greyhole.myid.BanUserReply
	(*UnbanUserRequest)(nil),               // 45: greyhole.myid.UnbanUserRequest
	(*UnbanUserReply)(nil),                 // 46: greyhole.myid.UnbanUserReply
	(*GetUserRequest)(nil),                 // 47: greyhole.myid.GetUserRequest
	(*GetUserReply)(nil),                   // 48: greyhole.myid.GetUserReply
	(*ResendCreatePasswordOTPRequest)(nil), // 49: greyhole.myid.ResendCreatePasswordOTPRequest
	(*ResendCreatePasswordOTPReply)(nil),   // 50: greyhole.myid.ResendCreatePasswordOTPReply
	(*GetUsersRequest)(nil),                // 51: greyhole.myid.GetUsersRequest
	(*GetUsersReply)(nil),                  // 52: greyhole.myid.GetUsersReply
	(*GetUserIDsRequest)(nil),              // 53: greyhole.myid.GetUserIDsRequest
	(*GetUserIDsReply)(nil),                // 54: greyhole.myid.GetUserIDsReply
	(*GetUsersByUsernameRequest)(nil),      // 55: greyhole.myid.GetUsersByUsernameRequest
	(*GetUsersByUsernameReply)(nil),        // 56: greyhole.myid.GetUsersByUsernameReply
	(*User)(nil),                           // 57: greyhole.myid.User
	(*Role)(nil),                           // 58: greyhole.myid.Role
	(*Roles)(nil),                          // 59: greyhole.myid.Roles
	(*UserChange)(nil),                     // 60: greyhole.myid.UserChange
	(*Permission)(nil),                     // 61: greyhole.myid.Permission
	(*Resource)(nil),                       // 62: greyhole.myid.Resource
	(*Action)(nil),                         // 63: greyhole.myid.Action
	(*ResetResendOTPRequest)(nil),          // 64: greyhole.myid.ResetResendOTPRequest
	(*ResetResendOTPReply)(nil),            // 65: greyhole.myid.ResetResendOTPReply
	(*IsUserBannedRequest)(nil),            // 66: greyhole.myid.IsUserBannedRequest
	(*IsUserBannedReply)(nil),              // 67: greyhole.myid.IsUserBannedReply
	(*IsUserLockedRequest)(nil),            // 68: greyhole.myid.IsUserLockedRequest
	(*IsUserLockedReply)(nil),              // 69: greyhole.myid.IsUserLockedReply
	(*Credential)(nil),                     // 70: greyhole.myid.Credential
	(*ListLoginEventsRequest)(nil),         // 71: greyhole.myid.ListLoginEventsRequest
	(*ListLoginEventsReply)(nil),           // 72: greyhole.myid.ListLoginEventsReply
	(*LoginEvent)(nil),                     // 73: greyhole.myid.LoginEvent
	(*ListRegisterEventsRequest)(nil),      // 74: greyhole.myid.ListRegisterEventsRequest
	(*ListRegisterEventsReply)(nil),        // 75: greyhole.myid.ListRegisterEventsReply
	(*RegisterEvent)(nil),                  // 76: greyhole.myid.RegisterEvent
	(*SignUpV2Request_MyID)(nil),           // 77: greyhole.myid.SignUpV2Request.MyID
	(*SignUpV2Request_Facebook)(nil),       // 78: greyhole.myid.SignUpV2Request.Facebook
	(*SignInV2Request_MyID)(nil),           // 79: greyhole.myid.SignInV2Request.MyID
	(*SignInV2Request_Facebook)(nil),       // 80: greyhole.myid.SignInV2Request.Facebook
	(*OTP_Info)(nil),                       // 81: greyhole.myid.OTP.Info
	nil,                                    // 82: greyhole.myid.GetUserIDsReply.UserIdsEntry
	nil,                                    // 83: greyhole.myid.GetUsersByUsernameReply.UsersEntry
	(*Credential_MyID)(nil),                // 84: greyhole.myid.Credential.MyID
	(*Credential_Facebook)(nil),            // 85: greyhole.myid.Credential.Facebook
	(*timestamp.Timestamp)(nil),            // 86: google.protobuf.Timestamp
	(*empty.Empty)(nil),                    // 87: google.protobuf.Empty
}
var file_myid_api_myid_proto_depIdxs = []int32{
	77, // 0: greyhole.myid.SignUpV2Request.my_id:type_name -> greyhole.myid.SignUpV2Request.MyID
	78, // 1: greyhole.myid.SignUpV2Request.facebook:type_name -> greyhole.myid.SignUpV2Request.Facebook
	30, // 2: greyhole.myid.SignUpReply.token_info:type_name -> greyhole.myid.TokenInfo
	79, // 3: greyhole.myid.SignInV2Request.my_id:type_name -> greyhole.myid.SignInV2Request.MyID
	80, // 4: greyhole.myid.SignInV2Request.facebook:type_name -> greyhole.myid.SignInV2Request.Facebook
	30, // 5: greyhole.myid.SignInReply.token_info:type_name -> greyhole.myid.TokenInfo
	31, // 6: greyhole.myid.SignInReply.confirm_otp:type_name -> greyhole.myid.OTP
	31, // 7: greyhole.myid.ResendSignInOTPReply.confirm_otp:type_name -> greyhole.myid.OTP
	30, // 8: greyhole.myid.ConfirmSignInReply.token_info:type_name -> greyhole.myid.TokenInfo
	29, // 9: greyhole.myid.MeReply.user:type_name -> greyhole.myid.UserInfo
	61, // 10: greyhole.myid.MeReply.permissions:type_name -> greyhole.myid.Permission
	31, // 11: greyhole.myid.UpdateEmailReply.otp:type_name -> greyhole.myid.OTP
	29, // 12: greyhole.myid.UpdateEmailReply.user:type_name -> greyhole.myid.UserInfo
	29, // 13: greyhole.myid.VerifyEmailReply.user:type_name -> greyhole.myid.UserInfo
	31, // 14: greyhole.myid.UpdatePhoneNumberReply.otp:type_name -> greyhole.myid.OTP
	29, // 15: greyhole.myid.UpdatePhoneNumberReply.user:type_name -> greyhole.myid.UserInfo
	29, // 16: greyhole.myid.VerifyPhoneNumberReply.user:type_name -> greyhole.myid.UserInfo
	32, // 17: greyhole.myid.ResetPasswordRequest.captcha:type_name -> greyhole.myid.Captcha
	31, // 18: greyhole.myid.ResetPasswordReply.otp:type_name -> greyhole.myid.OTP
	58, // 19: greyhole.myid.UserInfo.roles:type_name -> greyhole.myid.Role
	0,  // 20: greyhole.myid.UserInfo.status:type_name -> greyhole.myid.Status
	86, // 21: greyhole.myid.UserInfo.last_signed_in:type_name -> google.protobuf.Timestamp
	86, // 22: greyhole.myid.UserInfo.created_at:type_name -> google.protobuf.Timestamp
	86, // 23: greyhole.myid.UserInfo.updated_at:type_name -> google.protobuf.Timestamp
	70, // 24: greyhole.myid.UserInfo.credentials:type_name -> greyhole.myid.Credential
	81, // 25: greyhole.myid.OTP.success:type_name -> greyhole.myid.OTP.Info
	58, // 26: greyhole.myid.CreateUserRequest.roles:type_name -> greyhole.myid.Role
	57, // 27: greyhole.myid.CreateUserReply.user:type_name -> greyhole.myid.User
	0,  // 28: greyhole.myid.ListUsersRequest.statuses:type_name -> greyhole.myid.Status
	57, // 29: greyhole.myid.ListUsersReply.users:type_name -> greyhole.myid.User
	60, // 30: greyhole.myid.UpdateUserRequest.changes:type_name -> greyhole.myid.UserChange
	57, // 31: greyhole.myid.UpdateUserReply.user:type_name -> greyhole.myid.User
	57, // 32: greyhole.myid.LockUserReply.user:type_name -> greyhole.myid.User
	57, // 33: greyhole.myid.UnlockUserReply.user:type_name -> greyhole.myid.User
	57, // 34: greyhole.myid.BanUserReply.user:type_name -> greyhole.myid.User
	57, // 35: greyhole.myid.UnbanUserReply.user:type_name -> greyhole.myid.User
	57, // 36: greyhole.myid.GetUserReply.user:type_name -> greyhole.myid.User
	57, // 37: greyhole.myid.GetUsersReply.users:type_name -> greyhole.myid.User
	82, // 38: greyhole.myid.GetUserIDsReply.user_ids:type_name -> greyhole.myid.GetUserIDsReply.UserIdsEntry
	83, // 39: greyhole.myid.GetUsersByUsernameReply.users:type_name -> greyhole.myid.GetUsersByUsernameReply.UsersEntry
	58, // 40: greyhole.myid.User.roles:type_name -> greyhole.myid.Role
	0,  // 41: greyhole.myid.User.status:type_name -> greyhole.myid.Status
	86, // 42: greyhole.myid.User.created_at:type_name -> google.protobuf.Timestamp
	86, // 43: greyhole.myid.User.last_signed_in:type_name -> google.protobuf.Timestamp
	86, // 44: greyhole.myid.User.updated_at:type_name -> google.protobuf.Timestamp
	70, // 45: greyhole.myid.User.credentials:type_name -> greyhole.myid.Credential
	58, // 46: greyhole.myid.Roles.roles:type_name -> greyhole.myid.Role
	59, // 47: greyhole.myid.UserChange.roles:type_name -> greyhole.myid.Roles
	63, // 48: greyhole.myid.Permission.actions:type_name -> greyhole.myid.Action
	62, // 49: greyhole.myid.Action.resource:type_name -> greyhole.myid.Resource
	57, // 50: greyhole.myid.ResetResendOTPReply.user:type_name -> greyhole.myid.User
	84, // 51: greyhole.myid.Credential.my_id:type_name -> greyhole.myid.Credential.MyID
	85, // 52: greyhole.myid.Credential.facebook:type_name -> greyhole.myid.Credential.Facebook
	73, // 53: greyhole.myid.ListLoginEventsReply.events:type_name -> greyhole.myid.LoginEvent
	86, // 54: greyhole.myid.LoginEvent.created_at:type_name -> google.protobuf.Timestamp
	76, // 55: greyhole.myid.ListRegisterEventsReply.events:type_name -> greyhole.myid.RegisterEvent
	86, // 56: greyhole.myid.RegisterEvent.created_at:type_name -> google.protobuf.Timestamp
	57, // 57: greyhole.myid.GetUsersByUsernameReply.UsersEntry.value:type_name -> greyhole.myid.User
	1,  // 58: greyhole.myid.MyID.SignUp:input_type -> greyhole.myid.SignUpRequest
	4,  // 59: greyhole.myid.MyID.SignIn:input_type -> greyhole.myid.SignInRequest
	2,  // 60: greyhole.myid.MyID.SignUpV2:input_type -> greyhole.myid.SignUpV2Request
	5,  // 61: greyhole.myid.MyID.SignInV2:input_type -> greyhole.myid.SignInV2Request
	7,  // 62: greyhole.myid.MyID.ResendSignInOTP:input_type -> greyhole.myid.ResendSignInOTPRequest
	9,  // 63: greyhole.myid.MyID.ConfirmSignIn:input_type -> greyhole.myid.ConfirmSignInRequest
	87, // 64: greyhole.myid.MyID.SignOut:input_type -> google.protobuf.Empty
	11, // 65: greyhole.myid.MyID.CreatePassword:input_type -> greyhole.myid.CreatePasswordRequest
	12, // 66: greyhole.myid.MyID.CreateAccessToken:input_type -> greyhole.myid.CreateAccessTokenRequest
	87, // 67: greyhole.myid.MyID.Me:input_type -> google.protobuf.Empty
	15, // 68: greyhole.myid.MyID.ChangePassword:input_type -> greyhole.myid.ChangePasswordRequest
	16, // 69: greyhole.myid.MyID.UpdateMetadata:input_type -> greyhole.myid.UpdateMetadataRequest
	17, // 70: greyhole.myid.MyID.UpdateEmail:input_type -> greyhole.myid.UpdateEmailRequest
	19, // 71: greyhole.myid.MyID.VerifyEmail:input_type -> greyhole.myid.VerifyEmailRequest
	21, // 72: greyhole.myid.MyID.UpdatePhoneNumber:input_type -> greyhole.myid.UpdatePhoneNumberRequest
	23, // 73: greyhole.myid.MyID.VerifyPhoneNumber:input_type -> greyhole.myid.VerifyPhoneNumberRequest
	25, // 74: greyhole.myid.MyID.ResetPassword:input_type -> greyhole.myid.ResetPasswordRequest
	27, // 75: greyhole.myid.MyID.VerifyResetPassword:input_type -> greyhole.myid.VerifyResetPasswordRequest
	28, // 76: greyhole.myid.MyID.SubmitResetPassword:input_type -> greyhole.myid.SubmitResetPasswordRequest
	33, // 77: greyhole.myid.TheCoffeeHouse.CreateUser:input_type -> greyhole.myid.CreateUserRequest
	35, // 78: greyhole.myid.TheCoffeeHouse.ListUsers:input_type -> greyhole.myid.ListUsersRequest
	37, // 79: greyhole.myid.TheCoffeeHouse.UpdateUser:input_type -> greyhole.myid.UpdateUserRequest
	39, // 80: greyhole.myid.TheCoffeeHouse.LockUser:input_type -> greyhole.myid.LockUserRequest
	41, // 81: greyhole.myid.TheCoffeeHouse.UnlockUser:input_type -> greyhole.myid.UnlockUserRequest
	43, // 82: greyhole.myid.TheCoffeeHouse.BanUser:input_type -> greyhole.myid.BanUserRequest
	45, // 83: greyhole.myid.TheCoffeeHouse.UnbanUser:input_type -> greyhole.myid.UnbanUserRequest
	47, // 84: greyhole.myid.TheCoffeeHouse.GetUser:input_type -> greyhole.myid.GetUserRequest
	49, // 85: greyhole.myid.TheCoffeeHouse.ResendCreatePasswordOTP:input_type -> greyhole.myid.ResendCreatePasswordOTPRequest
	51, // 86: greyhole.myid.TheCoffeeHouse.GetUsers:input_type -> greyhole.myid.GetUsersRequest
	64, // 87: greyhole.myid.TheCoffeeHouse.ResetResendOTP:input_type -> greyhole.myid.ResetResendOTPRequest
	66, // 88: greyhole.myid.TheCoffeeHouse.IsUserBanned:input_type -> greyhole.myid.IsUserBannedRequest
	68, // 89: greyhole.myid.TheCoffeeHouse.IsUserLocked:input_type -> greyhole.myid.IsUserLockedRequest
	51, // 90: greyhole.myid.Waitress.GetUsers:input_type -> greyhole.myid.GetUsersRequest
	53, // 91: greyhole.myid.Waitress.GetUserIDs:input_type -> greyhole.myid.GetUserIDsRequest
	55, // 92: greyhole.myid.Waitress.GetUsersByUsername:input_type -> greyhole.myid.GetUsersByUsernameRequest
	71, // 93: greyhole.myid.ColdBrew.ListLoginEvents:input_type -> greyhole.myid.ListLoginEventsRequest
	74, // 94: greyhole.myid.ColdBrew.ListRegisterEvents:input_type -> greyhole.myid.ListRegisterEventsRequest
	3,  // 95: greyhole.myid.MyID.SignUp:output_type -> greyhole.myid.SignUpReply
	6,  // 96: greyhole.myid.MyID.SignIn:output_type -> greyhole.myid.SignInReply
	3,  // 97: greyhole.myid.MyID.SignUpV2:output_type -> greyhole.myid.SignUpReply
	6,  // 98: greyhole.myid.MyID.SignInV2:output_type -> greyhole.myid.SignInReply
	8,  // 99: greyhole.myid.MyID.ResendSignInOTP:output_type -> greyhole.myid.ResendSignInOTPReply
	10, // 100: greyhole.myid.MyID.ConfirmSignIn:output_type -> greyhole.myid.ConfirmSignInReply
	87, // 101: greyhole.myid.MyID.SignOut:output_type -> google.protobuf.Empty
	87, // 102: greyhole.myid.MyID.CreatePassword:output_type -> google.protobuf.Empty
	13, // 103: greyhole.myid.MyID.CreateAccessToken:output_type -> greyhole.myid.CreateAccessTokenReply
	14, // 104: greyhole.myid.MyID.Me:output_type -> greyhole.myid.MeReply
	87, // 105: greyhole.myid.MyID.ChangePassword:output_type -> google.protobuf.Empty
	87, // 106: greyhole.myid.MyID.UpdateMetadata:output_type -> google.protobuf.Empty
	18, // 107: greyhole.myid.MyID.UpdateEmail:output_type -> greyhole.myid.UpdateEmailReply
	20, // 108: greyhole.myid.MyID.VerifyEmail:output_type -> greyhole.myid.VerifyEmailReply
	22, // 109: greyhole.myid.MyID.UpdatePhoneNumber:output_type -> greyhole.myid.UpdatePhoneNumberReply
	24, // 110: greyhole.myid.MyID.VerifyPhoneNumber:output_type -> greyhole.myid.VerifyPhoneNumberReply
	26, // 111: greyhole.myid.MyID.ResetPassword:output_type -> greyhole.myid.ResetPasswordReply
	87, // 112: greyhole.myid.MyID.VerifyResetPassword:output_type -> google.protobuf.Empty
	87, // 113: greyhole.myid.MyID.SubmitResetPassword:output_type -> google.protobuf.Empty
	34, // 114: greyhole.myid.TheCoffeeHouse.CreateUser:output_type -> greyhole.myid.CreateUserReply
	36, // 115: greyhole.myid.TheCoffeeHouse.ListUsers:output_type -> greyhole.myid.ListUsersReply
	38, // 116: greyhole.myid.TheCoffeeHouse.UpdateUser:output_type -> greyhole.myid.UpdateUserReply
	40, // 117: greyhole.myid.TheCoffeeHouse.LockUser:output_type -> greyhole.myid.LockUserReply
	42, // 118: greyhole.myid.TheCoffeeHouse.UnlockUser:output_type -> greyhole.myid.UnlockUserReply
	44, // 119: greyhole.myid.TheCoffeeHouse.BanUser:output_type -> greyhole.myid.BanUserReply
	46, // 120: greyhole.myid.TheCoffeeHouse.UnbanUser:output_type -> greyhole.myid.UnbanUserReply
	48, // 121: greyhole.myid.TheCoffeeHouse.GetUser:output_type -> greyhole.myid.GetUserReply
	50, // 122: greyhole.myid.TheCoffeeHouse.ResendCreatePasswordOTP:output_type -> greyhole.myid.ResendCreatePasswordOTPReply
	52, // 123: greyhole.myid.TheCoffeeHouse.GetUsers:output_type -> greyhole.myid.GetUsersReply
	65, // 124: greyhole.myid.TheCoffeeHouse.ResetResendOTP:output_type -> greyhole.myid.ResetResendOTPReply
	67, // 125: greyhole.myid.TheCoffeeHouse.IsUserBanned:output_type -> greyhole.myid.IsUserBannedReply
	69, // 126: greyhole.myid.TheCoffeeHouse.IsUserLocked:output_type -> greyhole.myid.IsUserLockedReply
	52, // 127: greyhole.myid.Waitress.GetUsers:output_type -> greyhole.myid.GetUsersReply
	54, // 128: greyhole.myid.Waitress.GetUserIDs:output_type -> greyhole.myid.GetUserIDsReply
	56, // 129: greyhole.myid.Waitress.GetUsersByUsername:output_type -> greyhole.myid.GetUsersByUsernameReply
	72, // 130: greyhole.myid.ColdBrew.ListLoginEvents:output_type -> greyhole.myid.ListLoginEventsReply
	75, // 131: greyhole.myid.ColdBrew.ListRegisterEvents:output_type -> greyhole.myid.ListRegisterEventsReply
	95, // [95:132] is the sub-list for method output_type
	58, // [58:95] is the sub-list for method input_type
	58, // [58:58] is the sub-list for extension type_name
	58, // [58:58] is the sub-list for extension extendee
	0,  // [0:58] is the sub-list for field type_name
}

func init() { file_myid_api_myid_proto_init() }
func file_myid_api_myid_proto_init() {
	if File_myid_api_myid_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_myid_api_myid_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInV2Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendSignInOTPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendSignInOTPReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmSignInRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmSignInReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccessTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccessTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEmailReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyEmailReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhoneNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePhoneNumberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyPhoneNumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyPhoneNumberReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetPasswordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Captcha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendCreatePasswordOTPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendCreatePasswordOTPReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserIDsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersByUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersByUsernameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Roles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetResendOTPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetResendOTPReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUserBannedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUserBannedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUserLockedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUserLockedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoginEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLoginEventsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRegisterEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRegisterEventsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpV2Request_MyID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUpV2Request_Facebook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInV2Request_MyID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInV2Request_Facebook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTP_Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credential_MyID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_myid_api_myid_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credential_Facebook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_myid_api_myid_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*SignUpV2Request_MyId)(nil),
		(*SignUpV2Request_Facebook_)(nil),
	}
	file_myid_api_myid_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*SignInV2Request_MyId)(nil),
		(*SignInV2Request_Facebook_)(nil),
	}
	file_myid_api_myid_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*SignInReply_TokenInfo)(nil),
		(*SignInReply_ConfirmOtp)(nil),
	}
	file_myid_api_myid_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*UpdateEmailReply_Otp)(nil),
		(*UpdateEmailReply_User)(nil),
	}
	file_myid_api_myid_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*UpdatePhoneNumberReply_Otp)(nil),
		(*UpdatePhoneNumberReply_User)(nil),
	}
	file_myid_api_myid_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*ResetPasswordRequest_Email)(nil),
		(*ResetPasswordRequest_PhoneNumber)(nil),
	}
	file_myid_api_myid_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*OTP_Waiting)(nil),
		(*OTP_Success)(nil),
	}
	file_myid_api_myid_proto_msgTypes[59].OneofWrappers = []interface{}{
		(*UserChange_Email)(nil),
		(*UserChange_PhoneNumber)(nil),
		(*UserChange_Roles)(nil),
		(*UserChange_Metadata)(nil),
	}
	file_myid_api_myid_proto_msgTypes[69].OneofWrappers = []interface{}{
		(*Credential_MyId)(nil),
		(*Credential_Facebook_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_myid_api_myid_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   85,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_myid_api_myid_proto_goTypes,
		DependencyIndexes: file_myid_api_myid_proto_depIdxs,
		EnumInfos:         file_myid_api_myid_proto_enumTypes,
		MessageInfos:      file_myid_api_myid_proto_msgTypes,
	}.Build()
	File_myid_api_myid_proto = out.File
	file_myid_api_myid_proto_rawDesc = nil
	file_myid_api_myid_proto_goTypes = nil
	file_myid_api_myid_proto_depIdxs = nil
}
