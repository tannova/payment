admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 8081 }
stats_sinks:
  - name: envoy.stat_sinks.dog_statsd
    typed_config:
      '@type': type.googleapis.com/envoy.config.metrics.v3.DogStatsdSink
      address:
        socket_address:
          address: $DOGSTATSD_HOST_IP
          port_value: 8125
          protocol: UDP
      prefix: bifrost
static_resources:
  listeners:
    - name: bifrost_grpc
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: "/dev/stdout"
                      log_format:
                        json_format:
                          authority: '%REQ(:AUTHORITY)%'
                          bytes_received: '%BYTES_RECEIVED%'
                          bytes_sent: '%BYTES_SENT%'
                          duration: '%DURATION%'
                          method: '%REQ(:METHOD)%'
                          path: '%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%'
                          protocol: '%PROTOCOL%'
                          response_code: '%RESPONSE_CODE%'
                          response_code_details: '%RESPONSE_CODE_DETAILS%'
                          response_flags: '%RESPONSE_FLAGS%'
                          grpc_status: '%GRPC_STATUS%'
                          start_time: '%START_TIME%'
                          upstream_host: '%UPSTREAM_HOST%'
                          user_agent: '%REQ(USER-AGENT)%'
                          x_envoy_upstream_service_time: '%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%'
                          x_forwarded_for: '%REQ(X-FORWARDED-FOR)%'
                          x_request_id: '%REQ(X-REQUEST-ID)%'
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: [ "*" ]
                      routes:
                        # Start - Crypto Payment Ultron
                        - match:
                            path: /mcuc.stark.ultron.Ultron/GetCryptoWallet
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            path: /mcuc.stark.ultron.Ultron/CreateCryptoWithdraw
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            path: /mcuc.stark.ultron.Ultron/CancelCryptoWithdraw
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            path: /mcuc.stark.ultron.Ultron/CallbackTransaction
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        # End - Crypto Payment Ultron

                        # Start - eWallet Payment Tony
                        - match:
                            path: /mcuc.stark.tony.Tony/GetEWalletPaymentCode
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            path: /mcuc.stark.tony.Tony/CancelEWalletTopUp
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        # End - eWallet Payment Tony

                        # Start - Banking Payment Pepper
                        - match:
                            path: /mcuc.stark.pepper.Pepper/GetBankPaymentCode
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            path: /mcuc.stark.pepper.Pepper/CreateBankingWithdraw
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            path: /mcuc.stark.pepper.Pepper/CancelBankingWithdraw
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        # End - Banking Payment Pepper

                        # Start - Telco Payment Morgan
                        - match:
                            path: /mcuc.stark.morgan.Morgan/CreateTelcoWithdraw
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            path: /mcuc.stark.morgan.Morgan/CreateTelcoTopUp
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        - match:
                            path: /mcuc.stark.morgan.Morgan/CancelTelcoWithdraw
                          route:
                            cluster: stark_cluster
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                        # End - Banking Payment Morgan

                        # Start - Callback from 3rd-parties Bishop
                        - match:
                            prefix: /bishop/
                          route:
                            cluster: bishop_cluster
                            prefix_rewrite: /
                            timeout: 60s
                        - match:
                            prefix: /bishop
                          route:
                            cluster: bishop_cluster
                            prefix_rewrite: /
                            timeout: 60s
                        # End - Callback from 3rd-parties Bishop
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: authorization,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        max_age: "1728000"
                        expose_headers: grpc-status,grpc-message
                      response_headers_to_add:
                        - append: false
                          header:
                            key: x-request-id
                            value: "%REQ(X-REQUEST-ID)%"
                http_filters:
                  - name: envoy.filters.http.grpc_web
                  - name: envoy.filters.http.cors
                  - name: envoy.filters.http.health_check
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                      pass_through_mode: false
                      headers:
                        - exact_match: /status
                          name: :path
                  - name: envoy.filters.http.grpc_json_transcoder
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
                      proto_descriptor: "/etc/descriptors/stark.bin"
                      services:
                        - mcuc.stark.ultron.Ultron
                        - mcuc.stark.tony.Tony
                        - mcuc.stark.pepper.Pepper
                        - mcuc.stark.morgan.Morgan
                      auto_mapping: true
                      print_options:
                        add_whitespace: true
                        always_print_primitive_fields: true
                        always_print_enums_as_ints: false
                        preserve_proto_field_names: false
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        provider_alopay_mex_identity:
                          issuer: ALOPAY
                          audiences:
                            - MEX
                          local_jwks:
                            inline_string: '{"keys": [{"kty":"RSA","n":"yh0KzceKiOUBoQMovtTmAidJpmrH_YXVlo18kpqlVLcMWl8tTBTHcarNmA0gYGQO9ER7yE3Ri9Om6EvMDwnXKjPsIqz1ukqmdi-wW3HrbjAP-PMCLo9sVLP9OMRw8tMrrAtfi0rPFMBdnW58B-0pejtw8w5_F0o_tWGkOqOqu-1OrVpOCTPQKdC-tpvxxE6ZjoQ0QqJ87qMhy6yMY6t44cevsKssf0JbL0QBAOgm7FiwGFa0T2iGS1Y2a2Bng-6BzQCAIBgYkvRZgwMk3l05NY4J_Jnfk7Q93lTP9i_TfRpxv2YV-tlFdtBO643nKhgQaM9hofxwAJOwafMJLgvH1qnrGhHbpv2M3aZm0TT-aspteDM9a68sE-YC2JEgjTCzVDNl2g90RVk1wEpjIIWF9JSvPBn8l0KTVXmvAxv64ogpfIYoYjdPd4CoJQIBJI4ezk4oguP8E-EBJL7lC7UV-jFNFoBjYKwKHmTLXPnKtPQ1zB8QsayLHoHt39z1wtEiQRmmBzia76l_GyGrvt2PSThqVLmbQcTpm2aMAhZy3rQ19CJwV0XEhKCREyZpbTIW0qZlMAMiEnl8iEXBur8V4A7AzlS2Wa6NODnq2FMuncqL07M6jZM4CZV4CYCvHLV8HMviQPGe6h1xb5vbl-Lvk4B2LP7pxsgUkgewnVGa8x8","e":"AQAB","d":"c7grHmTYMccEpr6bTp-wzZzW81yCAurkvp1lrL60WIuxm_CQi9X911vW-O7TEb1YPo0TXj0H9AoLr0bun9Gfiv9NfREQZEgnhNWLIOBZzq3gB0aDgksF2H1xR1ZZ4P39LDUa0DLV2-jD8MZ4Z0VnkR-FbPRo2dneHii4kgZxU8XsXR6uPWCYF8j32K_yvdXO36VcEqbb5vop-GZjvxFHVeYx9nIbOQWyFZ7XAEDrQDkLIfRKqoiLE4laASKiQgyF7u0Rbs69Cy6yLWvYaSRxA_O-Tg1_0B7LqYdfxnHdoexJIi_997D8r6lW9lE6AITkqE3MdaWGLx5gTFklcWK3WHFYOfckEps4LNZfAv4B6PMP09t1FcGVwCMs2Khq91_O8SQm_P76v05hH3i3ZqExh2jvafoEjlaorp5HzhOi8QprzTRjQE1f0sB7cSCBFyNIuS6Eho6qfyjT5wem9Q8PJGC_8NwTeteMJ6eAFNEtDGizNkbF6uFMsweBEwzE0cUKcv4Jq20ZSEac38hpC60QqtjQsEkvoMsZ2EeqIPGLuOmC1LL5nqzD-uZ80sHudUdgNIDfzo_u9PjUQXV7wz8VWV0v0FgbUNN_siGw8kkIMgJSmKxyXOseemrYW1wZWA4guOz4Q2rxSLReFxDb1O-GEmGE-NhL31m1w-VLQFGfsJE","p":"5QDnQEO8wIK01Y-jBNRXb9klJ-6oEa_fIaCo9tb0iF6_tSVVMiEM02f6G99y3cnoTFMJqyGX-nbVnaLr7D6Nvc0KyGKo7IkmToS6NV1-gVpmPWhruVb4NbTZEKO_LWsPJJ5p8P26a0cjhU2A4NwfZeAAieY_SOlA-fZLTZVn3nZoNklCxdj2suRYyIO7WB50xmABXnQ_YT9db1ND7XIZir4DLN6SiianNzYdbSPTCAUgIYchUOegUvKZti_ccHDu2OS_iCqqKdeRtnQIV6IM9j5P72fAyvmlrf9d9aOPJU-JxrTerTcmbyj4HtcQ4mo57zK412pXWCOqQmV70iokCQ","q":"4fCfiFAYsNNVZaBTP2uLYAg2LSJJcn5GdVTgXVTHoAL6CBJ1nBVcAWrc4ZW97fpOSzhPtJId9D_NzMMRLf7te2KYCpqiluRqxzATV6OW9LuIutY6m6pzht9T8hyP1WiRCNGRIHfPugZDDOdlAlt3jyuJdZOObZiSJeumnQkwA9eLhJK3ZgBsRxFfRS5mJXPxB0PMKaDp4MO28EDLx7I7wy5Ix5HvQvhhi9MKawC90ByExFP5Ze-OYGmQZhEvQAwFIpy22daR1AYxPv4-5VawNY2a6c-Oh9R3san7SbxLjyw4Gx353kEcUGS6ter6gtSLv-SLL2ZwrMv6Ws6jB8K35w","dp":"PC6Dl3D1vsXazjEET3WaUOuJBziB9Lv6cLTvEoelFd2Ilgtsm1LyMvClWwPbBQxVvxEnflDCxvDJ7LZvN9Osnk-vYMAE0rysU4AwC2w5nbbrHYI-pSOE8WBIl0XhLQdwoFf9UXbssdqtLBAVKYLPwY8ftR3MTdX23HnsikQUWvNVKccRBDujgZne9zsfVeYTHDsIwRDdwynK3UHNnS4aJksPPJB1hFbqJOlUzGTYxcfLDOSdTczBZmsZGDb1wJr9OgTLjPZhZ8OeKIvP0W_l5iS0Dx9-HBmFf_eXcsF8EfsYIx9PUcgnkpj6s-gjKM1v0jvLNdldgO1GhlJzOuUWOQ","dq":"ERX9OnW0KEsS_ihtozIizBRS5H7fRwU9lsngXa53miYfelTLCA6lcoX-RiDoyAJRwWZ0wJb8JOheS8nEltHca6Q9EzA2c2q6mG2OSOZaGA_GezqQHA17xwtEcd6vEdhif2Q5sVbeIpcuot8syEzacb09G-MYtjj_dFaptt5m_yNhrZjavZ_ykD1EExs7JkHqTD5YRh2hEho6z1hXELbtxgjOACmNCmd2GPjQpN7de8tsTtx607aV8byJ6u4JwLIoAUIQodCUHpCJUNYxM26mzKX0vRGxGZx7oLfWBPF0VVNmusY9iw0pcvrrE669Wv9vwgcqb18zzh1uxUczFPcoqQ","qi":"cIKONfXhoIBcSGwC3FzwOk_KLea7V_OHzdgYMAr6JqXKdyGikg516W7ziJBDwGlDkYhuFLbEMzGdSODgVfTQIBHSEG70rDREUYHXLsVpcrGbJBDyusvr0AQlR6K4-T1DEH83Ful6b471tSWC15Dle5H0G1NISsYCpd24amv0Y7EZcSZ4MwRXpZAW7fH_lftslxnnK0cuFJfaW12horSbUCxUgg190NFA3YbqDM4OffDyeSLKWs1lYBolkULf7b6M7jnebdHIzpKhUxS1yMBMRM7say4oWsX17_UOAfpuzs6dNmMuQEMmQCw9pJlmR9VajM1dkL_6oO2WFycAuTaO5A"}]}'
                          from_headers:
                            - name: Authorization
                              value_prefix: "Bearer "
                          forward: false
                          forward_payload_header: x-jwt-payload
                          payload_in_metadata: verified_jwt
                      rules:
                        - match:
                            # Not jwt verification is required for /mcuc.stark.ultron.Ultron/CallbackTransaction
                            # TODO(tiennv147): will handle that later on
                            path: /mcuc.stark.ultron.Ultron/CallbackTransaction
                        - match:
                            prefix: /mcuc.stark.ultron.Ultron
                          requires:
                            provider_name: provider_alopay_mex_identity
                        - match:
                            prefix: /mcuc.stark.tony.Tony
                          requires:
                            provider_name: provider_alopay_mex_identity
                        - match:
                            prefix: /mcuc.stark.pepper.Pepper
                          requires:
                            provider_name: provider_alopay_mex_identity
                        - match:
                            prefix: /mcuc.stark.morgan.Morgan
                          requires:
                            provider_name: provider_alopay_mex_identity
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        function envoy_on_request(request_handle)
                          local meta = request_handle:streamInfo():dynamicMetadata("envoy.filters.http.jwt_authn")
                          for key, value in pairs(meta) do
                            request_handle:headers():add("x-user-id", value["verified_jwt"]["sub"])
                          end
                        end
                  - name: envoy.filters.http.router
  clusters:
    - name: stark_cluster
      connect_timeout: 1s
      type: logical_dns
      http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: stark_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: stark
                      port_value: 8080

    - name: bishop_cluster
      connect_timeout: 1s
      type: logical_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: bishop_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: bishop
                      port_value: 8080